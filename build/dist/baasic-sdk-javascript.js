(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["baasicSdkJavaScript"] = factory();
	else
		root["baasicSdkJavaScript"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 35);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var container_1 = __webpack_require__(46);
exports.Container = container_1.Container;
var container_module_1 = __webpack_require__(47);
exports.ContainerModule = container_module_1.ContainerModule;
var injectable_1 = __webpack_require__(37);
exports.injectable = injectable_1.injectable;
var tagged_1 = __webpack_require__(41);
exports.tagged = tagged_1.tagged;
var named_1 = __webpack_require__(39);
exports.named = named_1.named;
var inject_1 = __webpack_require__(36);
exports.inject = inject_1.inject;
var optional_1 = __webpack_require__(40);
exports.optional = optional_1.optional;
var unmanaged_1 = __webpack_require__(43);
exports.unmanaged = unmanaged_1.unmanaged;
var multi_inject_1 = __webpack_require__(38);
exports.multiInject = multi_inject_1.multiInject;
var target_name_1 = __webpack_require__(42);
exports.targetName = target_name_1.targetName;
var guid_1 = __webpack_require__(17);
exports.guid = guid_1.guid;
var decorator_utils_1 = __webpack_require__(14);
exports.decorate = decorator_utils_1.decorate;
var constraint_helpers_1 = __webpack_require__(29);
exports.traverseAncerstors = constraint_helpers_1.traverseAncerstors;
exports.taggedConstraint = constraint_helpers_1.taggedConstraint;
exports.namedConstraint = constraint_helpers_1.namedConstraint;
exports.typeConstraint = constraint_helpers_1.typeConstraint;
var serialization_1 = __webpack_require__(20);
exports.getServiceIdentifierAsString = serialization_1.getServiceIdentifierAsString;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(69));
__export(__webpack_require__(70));


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(63));
__export(__webpack_require__(66));
__export(__webpack_require__(65));
__export(__webpack_require__(62));
__export(__webpack_require__(64));


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(77));
__export(__webpack_require__(76));


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(145));
__export(__webpack_require__(139));
__export(__webpack_require__(138));
__export(__webpack_require__(32));
__export(__webpack_require__(144));
__export(__webpack_require__(150));
__export(__webpack_require__(194));
__export(__webpack_require__(197));


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(136));
__export(__webpack_require__(83));
__export(__webpack_require__(135));
__export(__webpack_require__(134));
__export(__webpack_require__(31));
__export(__webpack_require__(107));
__export(__webpack_require__(98));
__export(__webpack_require__(110));
__export(__webpack_require__(88));
__export(__webpack_require__(95));
__export(__webpack_require__(112));
__export(__webpack_require__(111));
__export(__webpack_require__(114));
__export(__webpack_require__(113));
__export(__webpack_require__(116));
__export(__webpack_require__(115));
__export(__webpack_require__(118));
__export(__webpack_require__(117));
__export(__webpack_require__(122));
__export(__webpack_require__(121));
__export(__webpack_require__(120));
__export(__webpack_require__(119));
__export(__webpack_require__(124));
__export(__webpack_require__(123));
__export(__webpack_require__(127));
__export(__webpack_require__(126));
__export(__webpack_require__(133));
__export(__webpack_require__(132));
__export(__webpack_require__(131));
__export(__webpack_require__(130));
__export(__webpack_require__(129));
__export(__webpack_require__(128));
__export(__webpack_require__(125));
__export(__webpack_require__(31));
__export(__webpack_require__(137));


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(292));
__export(__webpack_require__(266));
__export(__webpack_require__(265));
__export(__webpack_require__(268));
__export(__webpack_require__(267));
__export(__webpack_require__(270));
__export(__webpack_require__(269));
__export(__webpack_require__(272));
__export(__webpack_require__(271));
__export(__webpack_require__(276));
__export(__webpack_require__(275));
__export(__webpack_require__(278));
__export(__webpack_require__(277));
__export(__webpack_require__(274));
__export(__webpack_require__(273));
__export(__webpack_require__(289));
__export(__webpack_require__(288));
__export(__webpack_require__(283));
__export(__webpack_require__(282));
__export(__webpack_require__(285));
__export(__webpack_require__(284));
__export(__webpack_require__(291));
__export(__webpack_require__(290));
__export(__webpack_require__(287));
__export(__webpack_require__(286));
__export(__webpack_require__(281));
__export(__webpack_require__(280));
__export(__webpack_require__(279));
__export(__webpack_require__(264));


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(324));
__export(__webpack_require__(299));
__export(__webpack_require__(298));
__export(__webpack_require__(301));
__export(__webpack_require__(300));
__export(__webpack_require__(303));
__export(__webpack_require__(302));
__export(__webpack_require__(305));
__export(__webpack_require__(304));
__export(__webpack_require__(307));
__export(__webpack_require__(306));
__export(__webpack_require__(309));
__export(__webpack_require__(308));
__export(__webpack_require__(311));
__export(__webpack_require__(310));
__export(__webpack_require__(317));
__export(__webpack_require__(316));
__export(__webpack_require__(315));
__export(__webpack_require__(314));
__export(__webpack_require__(313));
__export(__webpack_require__(312));
__export(__webpack_require__(319));
__export(__webpack_require__(318));
__export(__webpack_require__(321));
__export(__webpack_require__(320));
__export(__webpack_require__(323));
__export(__webpack_require__(322));
__export(__webpack_require__(325));


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.NAMED_TAG = "named";
exports.NAME_TAG = "name";
exports.UNMANAGED_TAG = "unmanaged";
exports.OPTIONAL_TAG = "optional";
exports.INJECT_TAG = "inject";
exports.MULTI_INJECT_TAG = "multi_inject";
exports.TAGGED = "inversify:tagged";
exports.TAGGED_PROP = "inversify:tagged_props";
exports.PARAM_TYPES = "inversify:paramtypes";
exports.DESIGN_PARAM_TYPES = "design:paramtypes";


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(247));
__export(__webpack_require__(232));
__export(__webpack_require__(231));
__export(__webpack_require__(230));
__export(__webpack_require__(229));
__export(__webpack_require__(236));
__export(__webpack_require__(235));
__export(__webpack_require__(240));
__export(__webpack_require__(239));
__export(__webpack_require__(242));
__export(__webpack_require__(241));
__export(__webpack_require__(246));
__export(__webpack_require__(244));
__export(__webpack_require__(245));
__export(__webpack_require__(243));
__export(__webpack_require__(238));
__export(__webpack_require__(237));
__export(__webpack_require__(234));
__export(__webpack_require__(233));
__export(__webpack_require__(248));


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, global) {/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;
(function (Reflect) {
    "use strict";
    var hasOwn = Object.prototype.hasOwnProperty;
    // feature test for Symbol support
    var supportsSymbol = typeof Symbol === "function";
    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
    var HashMap;
    (function (HashMap) {
        var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
        var downLevel = !supportsCreate && !supportsProto;
        // create an object in dictionary mode (a.k.a. "slow" mode in v8)
        HashMap.create = supportsCreate
            ? function () { return MakeDictionary(Object.create(null)); }
            : supportsProto
                ? function () { return MakeDictionary({ __proto__: null }); }
                : function () { return MakeDictionary({}); };
        HashMap.has = downLevel
            ? function (map, key) { return hasOwn.call(map, key); }
            : function (map, key) { return key in map; };
        HashMap.get = downLevel
            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
            : function (map, key) { return map[key]; };
    })(HashMap || (HashMap = {}));
    // Load global or shim versions of Map, Set, and WeakMap
    var functionPrototype = Object.getPrototypeOf(Function);
    var usePolyfill = typeof process === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
    var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
    var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
    var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
    // [[Metadata]] internal slot
    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
    var Metadata = new _WeakMap();
    /**
      * Applies a set of decorators to a property of a target object.
      * @param decorators An array of decorators.
      * @param target The target object.
      * @param propertyKey (Optional) The property key to decorate.
      * @param attributes (Optional) The property descriptor for the target key.
      * @remarks Decorators are applied in reverse order.
      * @example
      *
      *     class Example {
      *         // property declarations are not part of ES6, though they are valid in TypeScript:
      *         // static staticProperty;
      *         // property;
      *
      *         constructor(p) { }
      *         static staticMethod(p) { }
      *         method(p) { }
      *     }
      *
      *     // constructor
      *     Example = Reflect.decorate(decoratorsArray, Example);
      *
      *     // property (on constructor)
      *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
      *
      *     // property (on prototype)
      *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
      *
      *     // method (on constructor)
      *     Object.defineProperty(Example, "staticMethod",
      *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
      *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
      *
      *     // method (on prototype)
      *     Object.defineProperty(Example.prototype, "method",
      *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
      *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
      *
      */
    function decorate(decorators, target, propertyKey, attributes) {
        if (!IsUndefined(propertyKey)) {
            if (!IsArray(decorators))
                throw new TypeError();
            if (!IsObject(target))
                throw new TypeError();
            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                throw new TypeError();
            if (IsNull(attributes))
                attributes = undefined;
            propertyKey = ToPropertyKey(propertyKey);
            return DecorateProperty(decorators, target, propertyKey, attributes);
        }
        else {
            if (!IsArray(decorators))
                throw new TypeError();
            if (!IsConstructor(target))
                throw new TypeError();
            return DecorateConstructor(decorators, target);
        }
    }
    Reflect.decorate = decorate;
    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
    /**
      * A default metadata decorator factory that can be used on a class, class member, or parameter.
      * @param metadataKey The key for the metadata entry.
      * @param metadataValue The value for the metadata entry.
      * @returns A decorator function.
      * @remarks
      * If `metadataKey` is already defined for the target and target key, the
      * metadataValue for that key will be overwritten.
      * @example
      *
      *     // constructor
      *     @Reflect.metadata(key, value)
      *     class Example {
      *     }
      *
      *     // property (on constructor, TypeScript only)
      *     class Example {
      *         @Reflect.metadata(key, value)
      *         static staticProperty;
      *     }
      *
      *     // property (on prototype, TypeScript only)
      *     class Example {
      *         @Reflect.metadata(key, value)
      *         property;
      *     }
      *
      *     // method (on constructor)
      *     class Example {
      *         @Reflect.metadata(key, value)
      *         static staticMethod() { }
      *     }
      *
      *     // method (on prototype)
      *     class Example {
      *         @Reflect.metadata(key, value)
      *         method() { }
      *     }
      *
      */
    function metadata(metadataKey, metadataValue) {
        function decorator(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                throw new TypeError();
            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
        }
        return decorator;
    }
    Reflect.metadata = metadata;
    /**
      * Define a unique metadata entry on the target.
      * @param metadataKey A key used to store and retrieve metadata.
      * @param metadataValue A value that contains attached metadata.
      * @param target The target object on which to define metadata.
      * @param propertyKey (Optional) The property key for the target.
      * @example
      *
      *     class Example {
      *         // property declarations are not part of ES6, though they are valid in TypeScript:
      *         // static staticProperty;
      *         // property;
      *
      *         constructor(p) { }
      *         static staticMethod(p) { }
      *         method(p) { }
      *     }
      *
      *     // constructor
      *     Reflect.defineMetadata("custom:annotation", options, Example);
      *
      *     // property (on constructor)
      *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
      *
      *     // property (on prototype)
      *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
      *
      *     // method (on constructor)
      *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
      *
      *     // method (on prototype)
      *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
      *
      *     // decorator factory as metadata-producing annotation.
      *     function MyAnnotation(options): Decorator {
      *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
      *     }
      *
      */
    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
        if (!IsObject(target))
            throw new TypeError();
        if (!IsUndefined(propertyKey))
            propertyKey = ToPropertyKey(propertyKey);
        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
    }
    Reflect.defineMetadata = defineMetadata;
    /**
      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
      * @param metadataKey A key used to store and retrieve metadata.
      * @param target The target object on which the metadata is defined.
      * @param propertyKey (Optional) The property key for the target.
      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
      * @example
      *
      *     class Example {
      *         // property declarations are not part of ES6, though they are valid in TypeScript:
      *         // static staticProperty;
      *         // property;
      *
      *         constructor(p) { }
      *         static staticMethod(p) { }
      *         method(p) { }
      *     }
      *
      *     // constructor
      *     result = Reflect.hasMetadata("custom:annotation", Example);
      *
      *     // property (on constructor)
      *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
      *
      *     // property (on prototype)
      *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
      *
      *     // method (on constructor)
      *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
      *
      *     // method (on prototype)
      *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
      *
      */
    function hasMetadata(metadataKey, target, propertyKey) {
        if (!IsObject(target))
            throw new TypeError();
        if (!IsUndefined(propertyKey))
            propertyKey = ToPropertyKey(propertyKey);
        return OrdinaryHasMetadata(metadataKey, target, propertyKey);
    }
    Reflect.hasMetadata = hasMetadata;
    /**
      * Gets a value indicating whether the target object has the provided metadata key defined.
      * @param metadataKey A key used to store and retrieve metadata.
      * @param target The target object on which the metadata is defined.
      * @param propertyKey (Optional) The property key for the target.
      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
      * @example
      *
      *     class Example {
      *         // property declarations are not part of ES6, though they are valid in TypeScript:
      *         // static staticProperty;
      *         // property;
      *
      *         constructor(p) { }
      *         static staticMethod(p) { }
      *         method(p) { }
      *     }
      *
      *     // constructor
      *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
      *
      *     // property (on constructor)
      *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
      *
      *     // property (on prototype)
      *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
      *
      *     // method (on constructor)
      *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
      *
      *     // method (on prototype)
      *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
      *
      */
    function hasOwnMetadata(metadataKey, target, propertyKey) {
        if (!IsObject(target))
            throw new TypeError();
        if (!IsUndefined(propertyKey))
            propertyKey = ToPropertyKey(propertyKey);
        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
    }
    Reflect.hasOwnMetadata = hasOwnMetadata;
    /**
      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
      * @param metadataKey A key used to store and retrieve metadata.
      * @param target The target object on which the metadata is defined.
      * @param propertyKey (Optional) The property key for the target.
      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
      * @example
      *
      *     class Example {
      *         // property declarations are not part of ES6, though they are valid in TypeScript:
      *         // static staticProperty;
      *         // property;
      *
      *         constructor(p) { }
      *         static staticMethod(p) { }
      *         method(p) { }
      *     }
      *
      *     // constructor
      *     result = Reflect.getMetadata("custom:annotation", Example);
      *
      *     // property (on constructor)
      *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
      *
      *     // property (on prototype)
      *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
      *
      *     // method (on constructor)
      *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
      *
      *     // method (on prototype)
      *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
      *
      */
    function getMetadata(metadataKey, target, propertyKey) {
        if (!IsObject(target))
            throw new TypeError();
        if (!IsUndefined(propertyKey))
            propertyKey = ToPropertyKey(propertyKey);
        return OrdinaryGetMetadata(metadataKey, target, propertyKey);
    }
    Reflect.getMetadata = getMetadata;
    /**
      * Gets the metadata value for the provided metadata key on the target object.
      * @param metadataKey A key used to store and retrieve metadata.
      * @param target The target object on which the metadata is defined.
      * @param propertyKey (Optional) The property key for the target.
      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
      * @example
      *
      *     class Example {
      *         // property declarations are not part of ES6, though they are valid in TypeScript:
      *         // static staticProperty;
      *         // property;
      *
      *         constructor(p) { }
      *         static staticMethod(p) { }
      *         method(p) { }
      *     }
      *
      *     // constructor
      *     result = Reflect.getOwnMetadata("custom:annotation", Example);
      *
      *     // property (on constructor)
      *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
      *
      *     // property (on prototype)
      *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
      *
      *     // method (on constructor)
      *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
      *
      *     // method (on prototype)
      *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
      *
      */
    function getOwnMetadata(metadataKey, target, propertyKey) {
        if (!IsObject(target))
            throw new TypeError();
        if (!IsUndefined(propertyKey))
            propertyKey = ToPropertyKey(propertyKey);
        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
    }
    Reflect.getOwnMetadata = getOwnMetadata;
    /**
      * Gets the metadata keys defined on the target object or its prototype chain.
      * @param target The target object on which the metadata is defined.
      * @param propertyKey (Optional) The property key for the target.
      * @returns An array of unique metadata keys.
      * @example
      *
      *     class Example {
      *         // property declarations are not part of ES6, though they are valid in TypeScript:
      *         // static staticProperty;
      *         // property;
      *
      *         constructor(p) { }
      *         static staticMethod(p) { }
      *         method(p) { }
      *     }
      *
      *     // constructor
      *     result = Reflect.getMetadataKeys(Example);
      *
      *     // property (on constructor)
      *     result = Reflect.getMetadataKeys(Example, "staticProperty");
      *
      *     // property (on prototype)
      *     result = Reflect.getMetadataKeys(Example.prototype, "property");
      *
      *     // method (on constructor)
      *     result = Reflect.getMetadataKeys(Example, "staticMethod");
      *
      *     // method (on prototype)
      *     result = Reflect.getMetadataKeys(Example.prototype, "method");
      *
      */
    function getMetadataKeys(target, propertyKey) {
        if (!IsObject(target))
            throw new TypeError();
        if (!IsUndefined(propertyKey))
            propertyKey = ToPropertyKey(propertyKey);
        return OrdinaryMetadataKeys(target, propertyKey);
    }
    Reflect.getMetadataKeys = getMetadataKeys;
    /**
      * Gets the unique metadata keys defined on the target object.
      * @param target The target object on which the metadata is defined.
      * @param propertyKey (Optional) The property key for the target.
      * @returns An array of unique metadata keys.
      * @example
      *
      *     class Example {
      *         // property declarations are not part of ES6, though they are valid in TypeScript:
      *         // static staticProperty;
      *         // property;
      *
      *         constructor(p) { }
      *         static staticMethod(p) { }
      *         method(p) { }
      *     }
      *
      *     // constructor
      *     result = Reflect.getOwnMetadataKeys(Example);
      *
      *     // property (on constructor)
      *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
      *
      *     // property (on prototype)
      *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
      *
      *     // method (on constructor)
      *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
      *
      *     // method (on prototype)
      *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
      *
      */
    function getOwnMetadataKeys(target, propertyKey) {
        if (!IsObject(target))
            throw new TypeError();
        if (!IsUndefined(propertyKey))
            propertyKey = ToPropertyKey(propertyKey);
        return OrdinaryOwnMetadataKeys(target, propertyKey);
    }
    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;
    /**
      * Deletes the metadata entry from the target object with the provided key.
      * @param metadataKey A key used to store and retrieve metadata.
      * @param target The target object on which the metadata is defined.
      * @param propertyKey (Optional) The property key for the target.
      * @returns `true` if the metadata entry was found and deleted; otherwise, false.
      * @example
      *
      *     class Example {
      *         // property declarations are not part of ES6, though they are valid in TypeScript:
      *         // static staticProperty;
      *         // property;
      *
      *         constructor(p) { }
      *         static staticMethod(p) { }
      *         method(p) { }
      *     }
      *
      *     // constructor
      *     result = Reflect.deleteMetadata("custom:annotation", Example);
      *
      *     // property (on constructor)
      *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
      *
      *     // property (on prototype)
      *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
      *
      *     // method (on constructor)
      *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
      *
      *     // method (on prototype)
      *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
      *
      */
    function deleteMetadata(metadataKey, target, propertyKey) {
        if (!IsObject(target))
            throw new TypeError();
        if (!IsUndefined(propertyKey))
            propertyKey = ToPropertyKey(propertyKey);
        var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);
        if (IsUndefined(metadataMap))
            return false;
        if (!metadataMap.delete(metadataKey))
            return false;
        if (metadataMap.size > 0)
            return true;
        var targetMetadata = Metadata.get(target);
        targetMetadata.delete(propertyKey);
        if (targetMetadata.size > 0)
            return true;
        Metadata.delete(target);
        return true;
    }
    Reflect.deleteMetadata = deleteMetadata;
    function DecorateConstructor(decorators, target) {
        for (var i = decorators.length - 1; i >= 0; --i) {
            var decorator = decorators[i];
            var decorated = decorator(target);
            if (!IsUndefined(decorated) && !IsNull(decorated)) {
                if (!IsConstructor(decorated))
                    throw new TypeError();
                target = decorated;
            }
        }
        return target;
    }
    function DecorateProperty(decorators, target, propertyKey, descriptor) {
        for (var i = decorators.length - 1; i >= 0; --i) {
            var decorator = decorators[i];
            var decorated = decorator(target, propertyKey, descriptor);
            if (!IsUndefined(decorated) && !IsNull(decorated)) {
                if (!IsObject(decorated))
                    throw new TypeError();
                descriptor = decorated;
            }
        }
        return descriptor;
    }
    function GetOrCreateMetadataMap(O, P, Create) {
        var targetMetadata = Metadata.get(O);
        if (IsUndefined(targetMetadata)) {
            if (!Create)
                return undefined;
            targetMetadata = new _Map();
            Metadata.set(O, targetMetadata);
        }
        var metadataMap = targetMetadata.get(P);
        if (IsUndefined(metadataMap)) {
            if (!Create)
                return undefined;
            metadataMap = new _Map();
            targetMetadata.set(P, metadataMap);
        }
        return metadataMap;
    }
    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
    function OrdinaryHasMetadata(MetadataKey, O, P) {
        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
        if (hasOwn)
            return true;
        var parent = OrdinaryGetPrototypeOf(O);
        if (!IsNull(parent))
            return OrdinaryHasMetadata(MetadataKey, parent, P);
        return false;
    }
    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
        if (IsUndefined(metadataMap))
            return false;
        return ToBoolean(metadataMap.has(MetadataKey));
    }
    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
    function OrdinaryGetMetadata(MetadataKey, O, P) {
        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
        if (hasOwn)
            return OrdinaryGetOwnMetadata(MetadataKey, O, P);
        var parent = OrdinaryGetPrototypeOf(O);
        if (!IsNull(parent))
            return OrdinaryGetMetadata(MetadataKey, parent, P);
        return undefined;
    }
    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
        if (IsUndefined(metadataMap))
            return undefined;
        return metadataMap.get(MetadataKey);
    }
    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
        metadataMap.set(MetadataKey, MetadataValue);
    }
    // 3.1.6.1 OrdinaryMetadataKeys(O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
    function OrdinaryMetadataKeys(O, P) {
        var ownKeys = OrdinaryOwnMetadataKeys(O, P);
        var parent = OrdinaryGetPrototypeOf(O);
        if (parent === null)
            return ownKeys;
        var parentKeys = OrdinaryMetadataKeys(parent, P);
        if (parentKeys.length <= 0)
            return ownKeys;
        if (ownKeys.length <= 0)
            return parentKeys;
        var set = new _Set();
        var keys = [];
        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
            var key = ownKeys_1[_i];
            var hasKey = set.has(key);
            if (!hasKey) {
                set.add(key);
                keys.push(key);
            }
        }
        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
            var key = parentKeys_1[_a];
            var hasKey = set.has(key);
            if (!hasKey) {
                set.add(key);
                keys.push(key);
            }
        }
        return keys;
    }
    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
    function OrdinaryOwnMetadataKeys(O, P) {
        var keys = [];
        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
        if (IsUndefined(metadataMap))
            return keys;
        var keysObj = metadataMap.keys();
        var iterator = GetIterator(keysObj);
        var k = 0;
        while (true) {
            var next = IteratorStep(iterator);
            if (!next) {
                keys.length = k;
                return keys;
            }
            var nextValue = IteratorValue(next);
            try {
                keys[k] = nextValue;
            }
            catch (e) {
                try {
                    IteratorClose(iterator);
                }
                finally {
                    throw e;
                }
            }
            k++;
        }
    }
    // 6 ECMAScript Data Typ0es and Values
    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
    function Type(x) {
        if (x === null)
            return 1 /* Null */;
        switch (typeof x) {
            case "undefined": return 0 /* Undefined */;
            case "boolean": return 2 /* Boolean */;
            case "string": return 3 /* String */;
            case "symbol": return 4 /* Symbol */;
            case "number": return 5 /* Number */;
            case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
            default: return 6 /* Object */;
        }
    }
    // 6.1.1 The Undefined Type
    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
    function IsUndefined(x) {
        return x === undefined;
    }
    // 6.1.2 The Null Type
    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
    function IsNull(x) {
        return x === null;
    }
    // 6.1.5 The Symbol Type
    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
    function IsSymbol(x) {
        return typeof x === "symbol";
    }
    // 6.1.7 The Object Type
    // https://tc39.github.io/ecma262/#sec-object-type
    function IsObject(x) {
        return typeof x === "object" ? x !== null : typeof x === "function";
    }
    // 7.1 Type Conversion
    // https://tc39.github.io/ecma262/#sec-type-conversion
    // 7.1.1 ToPrimitive(input [, PreferredType])
    // https://tc39.github.io/ecma262/#sec-toprimitive
    function ToPrimitive(input, PreferredType) {
        switch (Type(input)) {
            case 0 /* Undefined */: return input;
            case 1 /* Null */: return input;
            case 2 /* Boolean */: return input;
            case 3 /* String */: return input;
            case 4 /* Symbol */: return input;
            case 5 /* Number */: return input;
        }
        var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
        if (exoticToPrim !== undefined) {
            var result = exoticToPrim.call(input, hint);
            if (IsObject(result))
                throw new TypeError();
            return result;
        }
        return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
    }
    // 7.1.1.1 OrdinaryToPrimitive(O, hint)
    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
    function OrdinaryToPrimitive(O, hint) {
        if (hint === "string") {
            var toString_1 = O.toString;
            if (IsCallable(toString_1)) {
                var result = toString_1.call(O);
                if (!IsObject(result))
                    return result;
            }
            var valueOf = O.valueOf;
            if (IsCallable(valueOf)) {
                var result = valueOf.call(O);
                if (!IsObject(result))
                    return result;
            }
        }
        else {
            var valueOf = O.valueOf;
            if (IsCallable(valueOf)) {
                var result = valueOf.call(O);
                if (!IsObject(result))
                    return result;
            }
            var toString_2 = O.toString;
            if (IsCallable(toString_2)) {
                var result = toString_2.call(O);
                if (!IsObject(result))
                    return result;
            }
        }
        throw new TypeError();
    }
    // 7.1.2 ToBoolean(argument)
    // https://tc39.github.io/ecma262/2016/#sec-toboolean
    function ToBoolean(argument) {
        return !!argument;
    }
    // 7.1.12 ToString(argument)
    // https://tc39.github.io/ecma262/#sec-tostring
    function ToString(argument) {
        return "" + argument;
    }
    // 7.1.14 ToPropertyKey(argument)
    // https://tc39.github.io/ecma262/#sec-topropertykey
    function ToPropertyKey(argument) {
        var key = ToPrimitive(argument, 3 /* String */);
        if (IsSymbol(key))
            return key;
        return ToString(key);
    }
    // 7.2 Testing and Comparison Operations
    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
    // 7.2.2 IsArray(argument)
    // https://tc39.github.io/ecma262/#sec-isarray
    function IsArray(argument) {
        return Array.isArray
            ? Array.isArray(argument)
            : argument instanceof Object
                ? argument instanceof Array
                : Object.prototype.toString.call(argument) === "[object Array]";
    }
    // 7.2.3 IsCallable(argument)
    // https://tc39.github.io/ecma262/#sec-iscallable
    function IsCallable(argument) {
        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
        return typeof argument === "function";
    }
    // 7.2.4 IsConstructor(argument)
    // https://tc39.github.io/ecma262/#sec-isconstructor
    function IsConstructor(argument) {
        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
        return typeof argument === "function";
    }
    // 7.2.7 IsPropertyKey(argument)
    // https://tc39.github.io/ecma262/#sec-ispropertykey
    function IsPropertyKey(argument) {
        switch (Type(argument)) {
            case 3 /* String */: return true;
            case 4 /* Symbol */: return true;
            default: return false;
        }
    }
    // 7.3 Operations on Objects
    // https://tc39.github.io/ecma262/#sec-operations-on-objects
    // 7.3.9 GetMethod(V, P)
    // https://tc39.github.io/ecma262/#sec-getmethod
    function GetMethod(V, P) {
        var func = V[P];
        if (func === undefined || func === null)
            return undefined;
        if (!IsCallable(func))
            throw new TypeError();
        return func;
    }
    // 7.4 Operations on Iterator Objects
    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
    function GetIterator(obj) {
        var method = GetMethod(obj, iteratorSymbol);
        if (!IsCallable(method))
            throw new TypeError(); // from Call
        var iterator = method.call(obj);
        if (!IsObject(iterator))
            throw new TypeError();
        return iterator;
    }
    // 7.4.4 IteratorValue(iterResult)
    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
    function IteratorValue(iterResult) {
        return iterResult.value;
    }
    // 7.4.5 IteratorStep(iterator)
    // https://tc39.github.io/ecma262/#sec-iteratorstep
    function IteratorStep(iterator) {
        var result = iterator.next();
        return result.done ? false : result;
    }
    // 7.4.6 IteratorClose(iterator, completion)
    // https://tc39.github.io/ecma262/#sec-iteratorclose
    function IteratorClose(iterator) {
        var f = iterator["return"];
        if (f)
            f.call(iterator);
    }
    // 9.1 Ordinary Object Internal Methods and Internal Slots
    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
    // 9.1.1.1 OrdinaryGetPrototypeOf(O)
    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
    function OrdinaryGetPrototypeOf(O) {
        var proto = Object.getPrototypeOf(O);
        if (typeof O !== "function" || O === functionPrototype)
            return proto;
        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
        // Try to determine the superclass constructor. Compatible implementations
        // must either set __proto__ on a subclass constructor to the superclass constructor,
        // or ensure each class has a valid `constructor` property on its prototype that
        // points back to the constructor.
        // If this is not the same as Function.[[Prototype]], then this is definately inherited.
        // This is the case when in ES6 or when using __proto__ in a compatible browser.
        if (proto !== functionPrototype)
            return proto;
        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
        var prototype = O.prototype;
        var prototypeProto = prototype && Object.getPrototypeOf(prototype);
        if (prototypeProto == null || prototypeProto === Object.prototype)
            return proto;
        // If the constructor was not a function, then we cannot determine the heritage.
        var constructor = prototypeProto.constructor;
        if (typeof constructor !== "function")
            return proto;
        // If we have some kind of self-reference, then we cannot determine the heritage.
        if (constructor === O)
            return proto;
        // we have a pretty good guess at the heritage.
        return constructor;
    }
    // naive Map shim
    function CreateMapPolyfill() {
        var cacheSentinel = {};
        var arraySentinel = [];
        var MapIterator = (function () {
            function MapIterator(keys, values, selector) {
                this._index = 0;
                this._keys = keys;
                this._values = values;
                this._selector = selector;
            }
            MapIterator.prototype["@@iterator"] = function () { return this; };
            MapIterator.prototype[iteratorSymbol] = function () { return this; };
            MapIterator.prototype.next = function () {
                var index = this._index;
                if (index >= 0 && index < this._keys.length) {
                    var result = this._selector(this._keys[index], this._values[index]);
                    if (index + 1 >= this._keys.length) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    else {
                        this._index++;
                    }
                    return { value: result, done: false };
                }
                return { value: undefined, done: true };
            };
            MapIterator.prototype.throw = function (error) {
                if (this._index >= 0) {
                    this._index = -1;
                    this._keys = arraySentinel;
                    this._values = arraySentinel;
                }
                throw error;
            };
            MapIterator.prototype.return = function (value) {
                if (this._index >= 0) {
                    this._index = -1;
                    this._keys = arraySentinel;
                    this._values = arraySentinel;
                }
                return { value: value, done: true };
            };
            return MapIterator;
        }());
        return (function () {
            function Map() {
                this._keys = [];
                this._values = [];
                this._cacheKey = cacheSentinel;
                this._cacheIndex = -2;
            }
            Object.defineProperty(Map.prototype, "size", {
                get: function () { return this._keys.length; },
                enumerable: true,
                configurable: true
            });
            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
            Map.prototype.get = function (key) {
                var index = this._find(key, /*insert*/ false);
                return index >= 0 ? this._values[index] : undefined;
            };
            Map.prototype.set = function (key, value) {
                var index = this._find(key, /*insert*/ true);
                this._values[index] = value;
                return this;
            };
            Map.prototype.delete = function (key) {
                var index = this._find(key, /*insert*/ false);
                if (index >= 0) {
                    var size = this._keys.length;
                    for (var i = index + 1; i < size; i++) {
                        this._keys[i - 1] = this._keys[i];
                        this._values[i - 1] = this._values[i];
                    }
                    this._keys.length--;
                    this._values.length--;
                    if (key === this._cacheKey) {
                        this._cacheKey = cacheSentinel;
                        this._cacheIndex = -2;
                    }
                    return true;
                }
                return false;
            };
            Map.prototype.clear = function () {
                this._keys.length = 0;
                this._values.length = 0;
                this._cacheKey = cacheSentinel;
                this._cacheIndex = -2;
            };
            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
            Map.prototype["@@iterator"] = function () { return this.entries(); };
            Map.prototype[iteratorSymbol] = function () { return this.entries(); };
            Map.prototype._find = function (key, insert) {
                if (this._cacheKey !== key) {
                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                }
                if (this._cacheIndex < 0 && insert) {
                    this._cacheIndex = this._keys.length;
                    this._keys.push(key);
                    this._values.push(undefined);
                }
                return this._cacheIndex;
            };
            return Map;
        }());
        function getKey(key, _) {
            return key;
        }
        function getValue(_, value) {
            return value;
        }
        function getEntry(key, value) {
            return [key, value];
        }
    }
    // naive Set shim
    function CreateSetPolyfill() {
        return (function () {
            function Set() {
                this._map = new _Map();
            }
            Object.defineProperty(Set.prototype, "size", {
                get: function () { return this._map.size; },
                enumerable: true,
                configurable: true
            });
            Set.prototype.has = function (value) { return this._map.has(value); };
            Set.prototype.add = function (value) { return this._map.set(value, value), this; };
            Set.prototype.delete = function (value) { return this._map.delete(value); };
            Set.prototype.clear = function () { this._map.clear(); };
            Set.prototype.keys = function () { return this._map.keys(); };
            Set.prototype.values = function () { return this._map.values(); };
            Set.prototype.entries = function () { return this._map.entries(); };
            Set.prototype["@@iterator"] = function () { return this.keys(); };
            Set.prototype[iteratorSymbol] = function () { return this.keys(); };
            return Set;
        }());
    }
    // naive WeakMap shim
    function CreateWeakMapPolyfill() {
        var UUID_SIZE = 16;
        var keys = HashMap.create();
        var rootKey = CreateUniqueKey();
        return (function () {
            function WeakMap() {
                this._key = CreateUniqueKey();
            }
            WeakMap.prototype.has = function (target) {
                var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                return table !== undefined ? HashMap.has(table, this._key) : false;
            };
            WeakMap.prototype.get = function (target) {
                var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                return table !== undefined ? HashMap.get(table, this._key) : undefined;
            };
            WeakMap.prototype.set = function (target, value) {
                var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                table[this._key] = value;
                return this;
            };
            WeakMap.prototype.delete = function (target) {
                var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                return table !== undefined ? delete table[this._key] : false;
            };
            WeakMap.prototype.clear = function () {
                // NOTE: not a real clear, just makes the previous data unreachable
                this._key = CreateUniqueKey();
            };
            return WeakMap;
        }());
        function CreateUniqueKey() {
            var key;
            do
                key = "@@WeakMap@@" + CreateUUID();
            while (HashMap.has(keys, key));
            keys[key] = true;
            return key;
        }
        function GetOrCreateWeakMapTable(target, create) {
            if (!hasOwn.call(target, rootKey)) {
                if (!create)
                    return undefined;
                Object.defineProperty(target, rootKey, { value: HashMap.create() });
            }
            return target[rootKey];
        }
        function FillRandomBytes(buffer, size) {
            for (var i = 0; i < size; ++i)
                buffer[i] = Math.random() * 0xff | 0;
            return buffer;
        }
        function GenRandomBytes(size) {
            if (typeof Uint8Array === "function") {
                if (typeof crypto !== "undefined")
                    return crypto.getRandomValues(new Uint8Array(size));
                if (typeof msCrypto !== "undefined")
                    return msCrypto.getRandomValues(new Uint8Array(size));
                return FillRandomBytes(new Uint8Array(size), size);
            }
            return FillRandomBytes(new Array(size), size);
        }
        function CreateUUID() {
            var data = GenRandomBytes(UUID_SIZE);
            // mark as random - RFC 4122 § 4.4
            data[6] = data[6] & 0x4f | 0x40;
            data[8] = data[8] & 0xbf | 0x80;
            var result = "";
            for (var offset = 0; offset < UUID_SIZE; ++offset) {
                var byte = data[offset];
                if (offset === 4 || offset === 6 || offset === 8)
                    result += "-";
                if (byte < 16)
                    result += "0";
                result += byte.toString(16).toLowerCase();
            }
            return result;
        }
    }
    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
    function MakeDictionary(obj) {
        obj.__ = undefined;
        delete obj.__;
        return obj;
    }
    // patch global Reflect
    (function (__global) {
        if (typeof __global.Reflect !== "undefined") {
            if (__global.Reflect !== Reflect) {
                for (var p in Reflect) {
                    if (hasOwn.call(Reflect, p)) {
                        __global.Reflect[p] = Reflect[p];
                    }
                }
            }
        }
        else {
            __global.Reflect = Reflect;
        }
    })(typeof global !== "undefined" ? global :
        typeof self !== "undefined" ? self :
            Function("return this;")());
})(Reflect || (Reflect = {}));
//# sourceMappingURL=Reflect.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(61), __webpack_require__(332)))

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(263));
__export(__webpack_require__(254));
__export(__webpack_require__(253));
__export(__webpack_require__(256));
__export(__webpack_require__(255));
__export(__webpack_require__(252));
__export(__webpack_require__(251));
__export(__webpack_require__(262));
__export(__webpack_require__(261));
__export(__webpack_require__(250));
__export(__webpack_require__(249));
__export(__webpack_require__(258));
__export(__webpack_require__(257));
__export(__webpack_require__(260));
__export(__webpack_require__(259));


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var METADATA_KEY = __webpack_require__(8);
var Metadata = (function () {
    function Metadata(key, value) {
        this.key = key;
        this.value = value;
    }
    Metadata.prototype.toString = function () {
        if (this.key === METADATA_KEY.NAMED_TAG) {
            return "named: " + this.value.toString() + " ";
        }
        else {
            return "tagged: { key:" + this.key.toString() + ", value: " + this.value + " }";
        }
    };
    return Metadata;
}());
exports.Metadata = Metadata;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.DUPLICATED_INJECTABLE_DECORATOR = "Cannot apply @injectable decorator multiple times.";
exports.DUPLICATED_METADATA = "Metadata key was used more than once in a parameter:";
exports.NULL_ARGUMENT = "NULL argument";
exports.KEY_NOT_FOUND = "Key Not Found";
exports.AMBIGUOUS_MATCH = "Ambiguous match found for serviceIdentifier:";
exports.CANNOT_UNBIND = "Could not unbind serviceIdentifier:";
exports.NOT_REGISTERED = "No matching bindings found for serviceIdentifier:";
exports.MISSING_INJECTABLE_ANNOTATION = "Missing required @injectable annotation in:";
exports.MISSING_INJECT_ANNOTATION = "Missing required @inject or @multiInject annotation in:";
exports.CIRCULAR_DEPENDENCY = "Circular dependency found:";
exports.NOT_IMPLEMENTED = "Sorry, this feature is not fully implemented yet.";
exports.INVALID_BINDING_TYPE = "Invalid binding type:";
exports.NO_MORE_SNAPSHOTS_AVAILABLE = "No snapshot available to restore.";
exports.INVALID_MIDDLEWARE_RETURN = "Invalid return type in middleware. Middleware must return!";
exports.INVALID_FUNCTION_BINDING = "Value provided to function binding must be a function!";
exports.INVALID_TO_SELF_VALUE = "The toSelf function can only be applied when a constructor is " +
    "used as service identifier";
exports.INVALID_DECORATOR_OPERATION = "The @inject @multiInject @tagged and @named decorators " +
    "must be applied to the parameters of a class constructor or a class property.";
exports.ARGUMENTS_LENGTH_MISMATCH_1 = "The number of constructor arguments in the derived class ";
exports.ARGUMENTS_LENGTH_MISMATCH_2 = " must be >= than the number of constructor arguments of its base class.";
exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = "Invalid Container constructor argument. Container options " +
    "must be an object.";
exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = "Invalid Container option. Default scope must " +
    "be a string ('singleton' or 'transient').";
exports.INVALID_BINDING_PROPERTY = "TODO";


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var METADATA_KEY = __webpack_require__(8);
var ERROR_MSGS = __webpack_require__(13);
function tagParameter(annotationTarget, propertyName, parameterIndex, metadata) {
    var metadataKey = METADATA_KEY.TAGGED;
    _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex);
}
exports.tagParameter = tagParameter;
function tagProperty(annotationTarget, propertyName, metadata) {
    var metadataKey = METADATA_KEY.TAGGED_PROP;
    _tagParameterOrProperty(metadataKey, annotationTarget.constructor, propertyName, metadata);
}
exports.tagProperty = tagProperty;
function _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex) {
    var paramsOrPropertiesMetadata = {};
    var isParameterDecorator = (typeof parameterIndex === "number");
    var key = (parameterIndex !== undefined && isParameterDecorator) ? parameterIndex.toString() : propertyName;
    if (isParameterDecorator === true && propertyName !== undefined) {
        throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);
    }
    if (Reflect.hasOwnMetadata(metadataKey, annotationTarget) === true) {
        paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);
    }
    var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];
    if (Array.isArray(paramOrPropertyMetadata) !== true) {
        paramOrPropertyMetadata = [];
    }
    else {
        for (var i = 0; i < paramOrPropertyMetadata.length; i++) {
            var m = paramOrPropertyMetadata[i];
            if (m.key === metadata.key) {
                throw new Error(ERROR_MSGS.DUPLICATED_METADATA + " " + m.key);
            }
        }
    }
    paramOrPropertyMetadata.push(metadata);
    paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;
    Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);
}
function _decorate(decorators, target) {
    Reflect.decorate(decorators, target);
}
function _param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); };
}
function decorate(decorator, target, parameterIndex) {
    if (typeof parameterIndex === "number") {
        _decorate([_param(parameterIndex, decorator)], target);
    }
    else {
        _decorate([decorator], target);
    }
}
exports.decorate = decorate;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BindingScopeEnum = {
    Singleton: "Singleton",
    Transient: "Transient"
};
exports.BindingScopeEnum = BindingScopeEnum;
var BindingTypeEnum = {
    ConstantValue: "ConstantValue",
    Constructor: "Constructor",
    DynamicValue: "DynamicValue",
    Factory: "Factory",
    Function: "Function",
    Instance: "Instance",
    Invalid: "Invalid",
    Provider: "Provider"
};
exports.BindingTypeEnum = BindingTypeEnum;
var TargetTypeEnum = {
    ClassProperty: "ClassProperty",
    ConstructorArgument: "ConstructorArgument",
    Variable: "Variable"
};
exports.TargetTypeEnum = TargetTypeEnum;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(228));
__export(__webpack_require__(227));
__export(__webpack_require__(226));
__export(__webpack_require__(219));
__export(__webpack_require__(218));
__export(__webpack_require__(225));
__export(__webpack_require__(224));
__export(__webpack_require__(222));
__export(__webpack_require__(221));
__export(__webpack_require__(223));
__export(__webpack_require__(220));


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function guid() {
    function s4() {
        return Math.floor((1 + Math.random()) * 0x10000)
            .toString(16)
            .substring(1);
    }
    return s4() + s4() + "-" + s4() + "-" + s4() + "-" +
        s4() + "-" + s4() + s4() + s4();
}
exports.guid = guid;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(213));
__export(__webpack_require__(212));
__export(__webpack_require__(211));
__export(__webpack_require__(208));
__export(__webpack_require__(207));
__export(__webpack_require__(206));
__export(__webpack_require__(205));
__export(__webpack_require__(210));
__export(__webpack_require__(209));


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(204));
__export(__webpack_require__(203));
__export(__webpack_require__(202));
__export(__webpack_require__(199));
__export(__webpack_require__(198));
__export(__webpack_require__(201));
__export(__webpack_require__(200));


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ERROR_MSGS = __webpack_require__(13);
function getServiceIdentifierAsString(serviceIdentifier) {
    if (typeof serviceIdentifier === "function") {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier.name;
    }
    else if (typeof serviceIdentifier === "symbol") {
        return serviceIdentifier.toString();
    }
    else {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier;
    }
}
exports.getServiceIdentifierAsString = getServiceIdentifierAsString;
function listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {
    var registeredBindingsList = "";
    var registeredBindings = getBindings(container, serviceIdentifier);
    if (registeredBindings.length !== 0) {
        registeredBindingsList = "\nRegistered bindings:";
        registeredBindings.forEach(function (binding) {
            var name = "Object";
            if (binding.implementationType !== null) {
                name = getFunctionName(binding.implementationType);
            }
            registeredBindingsList = registeredBindingsList + "\n " + name;
            if (binding.constraint.metaData) {
                registeredBindingsList = registeredBindingsList + " - " + binding.constraint.metaData;
            }
        });
    }
    return registeredBindingsList;
}
exports.listRegisteredBindingsForServiceIdentifier = listRegisteredBindingsForServiceIdentifier;
function circularDependencyToException(request, previousServiceIdentifiers) {
    if (previousServiceIdentifiers === void 0) { previousServiceIdentifiers = []; }
    var parentServiceIdentifier = getServiceIdentifierAsString(request.serviceIdentifier);
    previousServiceIdentifiers.push(parentServiceIdentifier);
    request.childRequests.forEach(function (childRequest) {
        var childServiceIdentifier = getServiceIdentifierAsString(childRequest.serviceIdentifier);
        if (previousServiceIdentifiers.indexOf(childServiceIdentifier) === -1) {
            if (childRequest.childRequests.length > 0) {
                circularDependencyToException(childRequest, previousServiceIdentifiers);
            }
            else {
                previousServiceIdentifiers.push(childServiceIdentifier);
            }
        }
        else {
            previousServiceIdentifiers.push(childServiceIdentifier);
            var services = previousServiceIdentifiers.reduce(function (prev, curr) {
                return (prev !== "") ? prev + " -> " + curr : "" + curr;
            }, "");
            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + " " + services);
        }
    });
}
exports.circularDependencyToException = circularDependencyToException;
function listMetadataForTarget(serviceIdentifierString, target) {
    if (target.isTagged() || target.isNamed()) {
        var m_1 = "";
        var namedTag = target.getNamedTag();
        var otherTags = target.getCustomTags();
        if (namedTag !== null) {
            m_1 += namedTag.toString() + "\n";
        }
        if (otherTags !== null) {
            otherTags.forEach(function (tag) {
                m_1 += tag.toString() + "\n";
            });
        }
        return " " + serviceIdentifierString + "\n " + serviceIdentifierString + " - " + m_1;
    }
    else {
        return " " + serviceIdentifierString;
    }
}
exports.listMetadataForTarget = listMetadataForTarget;
function getFunctionName(v) {
    if (v.name) {
        return v.name;
    }
    else {
        var name_1 = v.toString();
        var match = name_1.match(/^function\s*([^\s(]+)/);
        return match ? match[1] : "Anonymous function: " + name_1;
    }
}
exports.getFunctionName = getFunctionName;


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(297));
__export(__webpack_require__(294));
__export(__webpack_require__(293));
__export(__webpack_require__(296));
__export(__webpack_require__(295));


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(330));
__export(__webpack_require__(328));
__export(__webpack_require__(327));
__export(__webpack_require__(329));
__export(__webpack_require__(326));


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var binding_when_syntax_1 = __webpack_require__(24);
var BindingOnSyntax = (function () {
    function BindingOnSyntax(binding) {
        this._binding = binding;
    }
    BindingOnSyntax.prototype.onActivation = function (handler) {
        this._binding.onActivation = handler;
        return new binding_when_syntax_1.BindingWhenSyntax(this._binding);
    };
    return BindingOnSyntax;
}());
exports.BindingOnSyntax = BindingOnSyntax;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var binding_on_syntax_1 = __webpack_require__(23);
var constraint_helpers_1 = __webpack_require__(29);
var BindingWhenSyntax = (function () {
    function BindingWhenSyntax(binding) {
        this._binding = binding;
    }
    BindingWhenSyntax.prototype.when = function (constraint) {
        this._binding.constraint = constraint;
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {
        this._binding.constraint = constraint_helpers_1.namedConstraint(name);
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetIsDefault = function () {
        this._binding.constraint = function (request) {
            var targetIsDefault = (request.target !== null) &&
                (request.target.isNamed() === false) &&
                (request.target.isTagged() === false);
            return targetIsDefault;
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {
        this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentNamed = function (name) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.namedConstraint(name)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    return BindingWhenSyntax;
}());
exports.BindingWhenSyntax = BindingWhenSyntax;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(82));
__export(__webpack_require__(81));
__export(__webpack_require__(80));


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(217));
__export(__webpack_require__(216));
__export(__webpack_require__(215));


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metadata_1 = __webpack_require__(12);
var queryable_string_1 = __webpack_require__(53);
var guid_1 = __webpack_require__(17);
var METADATA_KEY = __webpack_require__(8);
var Target = (function () {
    function Target(type, name, serviceIdentifier, namedOrTagged) {
        this.guid = guid_1.guid();
        this.type = type;
        this.serviceIdentifier = serviceIdentifier;
        this.name = new queryable_string_1.QueryableString(name || "");
        this.metadata = new Array();
        var metadataItem = null;
        if (typeof namedOrTagged === "string") {
            metadataItem = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);
        }
        else if (namedOrTagged instanceof metadata_1.Metadata) {
            metadataItem = namedOrTagged;
        }
        if (metadataItem !== null) {
            this.metadata.push(metadataItem);
        }
    }
    Target.prototype.hasTag = function (key) {
        for (var i = 0; i < this.metadata.length; i++) {
            var m = this.metadata[i];
            if (m.key === key) {
                return true;
            }
        }
        return false;
    };
    Target.prototype.isArray = function () {
        return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);
    };
    Target.prototype.matchesArray = function (name) {
        return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);
    };
    Target.prototype.isNamed = function () {
        return this.hasTag(METADATA_KEY.NAMED_TAG);
    };
    Target.prototype.isTagged = function () {
        return this.metadata.some(function (m) {
            return (m.key !== METADATA_KEY.INJECT_TAG) &&
                (m.key !== METADATA_KEY.MULTI_INJECT_TAG) &&
                (m.key !== METADATA_KEY.NAME_TAG) &&
                (m.key !== METADATA_KEY.UNMANAGED_TAG) &&
                (m.key !== METADATA_KEY.NAMED_TAG);
        });
    };
    Target.prototype.isOptional = function () {
        return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);
    };
    Target.prototype.getNamedTag = function () {
        if (this.isNamed()) {
            return this.metadata.filter(function (m) { return m.key === METADATA_KEY.NAMED_TAG; })[0];
        }
        return null;
    };
    Target.prototype.getCustomTags = function () {
        if (this.isTagged()) {
            return this.metadata.filter(function (m) {
                return (m.key !== METADATA_KEY.INJECT_TAG) &&
                    (m.key !== METADATA_KEY.MULTI_INJECT_TAG) &&
                    (m.key !== METADATA_KEY.NAME_TAG) &&
                    (m.key !== METADATA_KEY.UNMANAGED_TAG) &&
                    (m.key !== METADATA_KEY.NAMED_TAG);
            });
        }
        return null;
    };
    Target.prototype.matchesNamedTag = function (name) {
        return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);
    };
    Target.prototype.matchesTag = function (key) {
        var _this = this;
        return function (value) {
            for (var i = 0; i < _this.metadata.length; i++) {
                var m = _this.metadata[i];
                if (m.key === key && m.value === value) {
                    return true;
                }
            }
            return false;
        };
    };
    return Target;
}());
exports.Target = Target;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var binding_when_syntax_1 = __webpack_require__(24);
var binding_on_syntax_1 = __webpack_require__(23);
var BindingWhenOnSyntax = (function () {
    function BindingWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
    }
    BindingWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    return BindingWhenOnSyntax;
}());
exports.BindingWhenOnSyntax = BindingWhenOnSyntax;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metadata_1 = __webpack_require__(12);
var METADATA_KEY = __webpack_require__(8);
var traverseAncerstors = function (request, constraint) {
    var parent = request.parentRequest;
    if (parent !== null) {
        return constraint(parent) ? true : traverseAncerstors(parent, constraint);
    }
    else {
        return false;
    }
};
exports.traverseAncerstors = traverseAncerstors;
var taggedConstraint = function (key) { return function (value) {
    var constraint = function (request) {
        return request !== null && request.target !== null && request.target.matchesTag(key)(value);
    };
    constraint.metaData = new metadata_1.Metadata(key, value);
    return constraint;
}; };
exports.taggedConstraint = taggedConstraint;
var namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);
exports.namedConstraint = namedConstraint;
var typeConstraint = function (type) { return function (request) {
    var binding = null;
    if (request !== null) {
        binding = request.bindings[0];
        if (typeof type === "string") {
            var serviceIdentifier = binding.serviceIdentifier;
            return serviceIdentifier === type;
        }
        else {
            var constructor = request.bindings[0].implementationType;
            return type === constructor;
        }
    }
    return false;
}; };
exports.typeConstraint = typeConstraint;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(74));
__export(__webpack_require__(75));
__export(__webpack_require__(71));


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleClient
 * @description Baasic Articles Client provides an easy way to consume Baasic Articles REST API end-points. In order to obtain needed routes `baasicArticleClient` uses `baasicArticleRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleClient = (function () {
    function BaasicArticleClient(baasicArticleInstanceCommentsClient, baasicArticleInstanceFilesClient, baasicArticleInstanceRatingsClient, baasicArticleInstanceTagsClient, baasicArticleInstanceSubscriptionsClient, baasicArticleRouteDefinition, baasicArticleACLClient, baasicApiClient) {
        this.baasicArticleInstanceCommentsClient = baasicArticleInstanceCommentsClient;
        this.baasicArticleInstanceFilesClient = baasicArticleInstanceFilesClient;
        this.baasicArticleInstanceRatingsClient = baasicArticleInstanceRatingsClient;
        this.baasicArticleInstanceTagsClient = baasicArticleInstanceTagsClient;
        this.baasicArticleInstanceSubscriptionsClient = baasicArticleInstanceSubscriptionsClient;
        this.baasicArticleRouteDefinition = baasicArticleRouteDefinition;
        this.baasicArticleACLClient = baasicArticleACLClient;
        this.baasicApiClient = baasicApiClient;
        this.utility = new common_1.Utility();
        this.articleUtility = new article_1.BaasicArticleUtility();
        this.statuses = article_1.ArticleStatus;
        this.commentStatuses = article_1.CommentStatus;
    }
    Object.defineProperty(BaasicArticleClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicArticleRouteDefinition`.
         * @method
         * @example baasicArticleClient.routeDefinition.get();
         **/
        get: function () {
            return this.baasicArticleRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleClient.prototype, "comments", {
        get: function () {
            return this.baasicArticleInstanceCommentsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleClient.prototype, "files", {
        get: function () {
            return this.baasicArticleInstanceFilesClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleClient.prototype, "tags", {
        get: function () {
            return this.baasicArticleInstanceTagsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleClient.prototype, "ratings", {
        get: function () {
            return this.baasicArticleInstanceRatingsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleClient.prototype, "subscriptions", {
        get: function () {
            return this.baasicArticleInstanceSubscriptionsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleClient.prototype, "acl", {
        get: function () {
            return this.baasicArticleACLClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of article resources matching the given criteria.
     * @method
     * @param options A promise that is resolved once the find action has been performed.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicArticleClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicArticleClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicArticleRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns a single article resource.
     * @method
     * @param id Article slug or id which uniquely identifies article resource that needs to be retrieved.
     * @param options Options object that contains embed items.
     * @returns a promise that is resolved once the get action has been performed.
     * @example baasicArticleClient.get('<article-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicArticleRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create article action has been performed, this action creates a new article resource.
     * @method
     * @param data An article object that needs to be inserted into the system.
     * @returns a promise that is resolved once the create article action has been performed.
     * @example baasicArticleClient.create({
                    publishDate : new Date(),
                    title : '<title>',
                    content : '<content>',
                    slug : '',
                    status : baasicArticleService.statuses.draft,
                    $tags : ['<tag1>', '<tag2>']
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicArticleClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicArticleRouteDefinition.create(), this.baasicArticleRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update article action has been performed; this action updates an article resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(article);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An article object that needs to be updated into the system.
     * @returns A promise that is resolved once the update article action has been performed.
     * @example // article is a resource previously fetched using get action.
                    article.title = '<title>';
                    baasicArticleClient.update(article)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleRouteDefinition.update(data), this.baasicArticleRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the saveDraft article action has been performed. This action saves an article with "draft" status. If an article does not exist it will create a new article resource otherwise it will update an existing article resource.
     * @method
     * @param data An article object that needs to be inserted into the system.
     * @returns A promise that is resolved once the saveDraft article action has been performed.
     * @example // article is a resource previously fetched using get action.
                        baasicArticleClient.saveDraft(article)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicArticleClient.prototype.saveDraft = function (data) {
        if (this.utility.isUndefined(data.id)) {
            // Create new draft
            return this.create(data);
        }
        // Update draft
        return this.update(data);
    };
    /**
     * Returns a promise that is resolved once the remove article action has been performed. If the action is successfully completed, the article resource will be permanently removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(article);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An article object that needs to be removed from the system.
     * @returns A promise that is resolved once the remove article action has been performed.
     * @example // article is a resource previously fetched using get action.
                    baasicArticleClient.remove(article)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the archive article action has been performed. This action sets the status of an article from "published" to "archive". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(article);
     * let uri = params['model'].links('archive').href;
     * ```
     * @method
     * @param data An article object.
     * @param options Notification options.
     * @returns A promise that is resolved once the archive article action has been performed.
     * @example // article is a resource previously fetched using get action.
                    baasicArticleClient.archive(article, articleOptions)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleClient.prototype.archive = function (data, options) {
        return this.baasicApiClient.put(this.baasicArticleRouteDefinition.archive(data), this.baasicArticleRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the restore article action has been performed. This action sets the status of an article from "archive" to "published". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRouteService` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(article);
     * let uri = params['model'].links('restore').href;
     * ```
     * @method
     * @param data Article object.
     * @returns A promise that is resolved once the restore article action has been performed.
     * @example // article is a resource previously fetched using get action.
                        baasicArticleClient.restore(article)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicArticleClient.prototype.restore = function (data) {
        return this.baasicApiClient.put(this.baasicArticleRouteDefinition.restore(data), this.baasicArticleRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unpublish article action has been performed. This action sets the status of an article from "published" to "draft". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(article);
     * let uri = params['model'].links('unpublish').href;
     * ```
     * @method
     * @param data An article object.
     * @returns A promise that is resolved once the unpublish article action has been performed.
     * @example 	// article is a resource previously fetched using get action.
                        baasicArticleClient.unpublish(article)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicArticleClient.prototype.unpublish = function (data) {
        return this.baasicApiClient.put(this.baasicArticleRouteDefinition.unpublish(data), this.baasicArticleRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the publish article action has been performed. This action sets the status of an article from "draft" to "published".
     * @method
     * @param data An article object.
     * @param articleOptions Notification options.
     * @returns A promise that is resolved once the unpublish article action has been performed.
     * @example baasicArticleClient.publish(article, articleOptions)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleClient.prototype.publish = function (data, articleOptions) {
        return this.baasicApiClient.put(this.baasicArticleRouteDefinition.publish(data), this.baasicArticleRouteDefinition.updateParams(articleOptions));
    };
    /**
     * Returns a promise that is resolved once the purge articles action has been performed. Please note that all article resources will be deleted from the system once the action is successfully completed and therefore it can only be executed by user assigned to account owner role.
     * @method
     * @example baasicArticleClient.purge({})
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleClient.prototype.purge = function (options) {
        return this.baasicApiClient.delete(this.baasicArticleRouteDefinition.purge(options));
    };
    return BaasicArticleClient;
}());
BaasicArticleClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceCommentsClient)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceFilesClient)),
    __param(2, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceRatingsClient)),
    __param(3, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceTagsClient)),
    __param(4, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceSubscriptionsClient)),
    __param(5, inversify_1.inject(article_1.TYPES.BaasicArticleRouteDefinition)),
    __param(6, inversify_1.inject(article_1.TYPES.BaasicArticleACLClient)),
    __param(7, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleInstanceCommentsClient,
        article_1.BaasicArticleInstanceFilesClient,
        article_1.BaasicArticleInstanceRatingsClient,
        article_1.BaasicArticleInstanceTagsClient,
        article_1.BaasicArticleInstanceSubscriptionsClient,
        article_1.BaasicArticleRouteDefinition,
        article_1.BaasicArticleACLClient,
        httpApi_1.BaasicApiClient])
], BaasicArticleClient);
exports.BaasicArticleClient = BaasicArticleClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(155));
__export(__webpack_require__(165));
__export(__webpack_require__(160));
__export(__webpack_require__(176));
__export(__webpack_require__(181));
__export(__webpack_require__(186));
__export(__webpack_require__(191));
__export(__webpack_require__(170));
__export(__webpack_require__(171));


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var core_1 = __webpack_require__(30);
var _1 = __webpack_require__(35);
var httpApi_1 = __webpack_require__(3);
var modules = __webpack_require__(214);
var BaasicApp = (function () {
    function BaasicApp(apiKey, options) {
        this.apiKey = apiKey;
        this.options = options;
        this.utility = new common_1.Utility();
        if (!this.apiKey) {
            throw new Error("API Key is required.");
        }
        this.settings = this.utility.extendAs({}, BaasicApp.defaultSettings, options || {});
        this.diModule = new _1.DIModule();
        this.diModule.init(this, [common_1.diModule, core_1.diModule, httpApi_1.diModule, modules]);
        this.tokenHandler = this.diModule.kernel.get(contracts_1.TYPES.ITokenHandler);
        this.userHandler = this.diModule.kernel.get(contracts_1.TYPES.IUserHandler);
        this.eventHandler = this.diModule.kernel.get(contracts_1.TYPES.IEventHandler);
        this.baasicApiClient = this.diModule.kernel.get(httpApi_1.TYPES.BaasicApiClient);
        this.membershipModule = this.diModule.kernel.get(modules.Membership.TYPES.Root);
        //Modules
        this.applicationSettingModule = this.diModule.kernel.get(modules.ApplicationSettings.TYPES.BaasicApplicationSettingsClient);
        this.keyValueModule = this.diModule.kernel.get(modules.KeyValue.TYPES.BaasicKeyValueClient);
        this.valueSetModule = this.diModule.kernel.get(modules.ValueSet.TYPES.BaasicValueSetClient);
        this.userProfileModule = this.diModule.kernel.get(modules.UserProfile.TYPES.Root);
        this.templatingModule = this.diModule.kernel.get(modules.Templating.TYPES.BaasicTemplatingClient);
        this.meteringModule = this.diModule.kernel.get(modules.Metering.TYPES.BaasicMeteringClient);
        this.mediaVaultModule = this.diModule.kernel.get(modules.MediaVault.TYPES.BaasicMediaVaultClient);
        this.fileModule = this.diModule.kernel.get(modules.Files.TYPES.BaasicFilesClient);
        this.dynamicResourceModule = this.diModule.kernel.get(modules.DynamicResource.TYPES.BaasicDynamicResourceClient);
        this.notificationModule = this.diModule.kernel.get(modules.Notifications.TYPES.BaasicNotificationsClient);
        this.articleModule = this.diModule.kernel.get(modules.Article.TYPES.Root);
        this.commerceModule = this.diModule.kernel.get(modules.Commerce.TYPES.BaasicCommerceClient);
    }
    BaasicApp.prototype.getAccessToken = function () {
        return this.tokenHandler.get(contracts_1.TokenTypes.Access);
    };
    BaasicApp.prototype.updateAccessToken = function (value) {
        this.tokenHandler.store(value);
    };
    BaasicApp.prototype.getApiKey = function () {
        return this.apiKey;
    };
    BaasicApp.prototype.getApiUrl = function () {
        return this.settings.apiUrl;
    };
    BaasicApp.prototype.getUser = function () {
        return this.userHandler.getUser();
    };
    BaasicApp.prototype.setUser = function (userInfo) {
        this.userHandler.setUser(userInfo);
    };
    return BaasicApp;
}());
BaasicApp.defaultSettings = {
    useSSL: true,
    apiRootUrl: 'api.baasic.com',
    apiVersion: 'v1',
    enableHALJSON: false
};
exports.BaasicApp = BaasicApp;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var httpApi_1 = __webpack_require__(3);
var contracts_1 = __webpack_require__(1);
var jQuery_1 = __webpack_require__(78);
var localStorage_1 = __webpack_require__(73);
var browserEvents_1 = __webpack_require__(68);
var DIModule = (function () {
    function DIModule() {
        this.diModules = [];
        this.kernel = new inversify_1.Container();
    }
    DIModule.prototype.init = function (app, modules) {
        var _this = this;
        var diModule = new inversify_1.ContainerModule(function (bind) {
            var apiKey = app.getApiKey();
            if (app.settings) {
                var appOptions = {
                    apiKey: apiKey,
                    apiUrl: new URL((app.settings.useSSL ? 'https' : 'http') + "://" + app.settings.apiRootUrl + "/" + app.settings.apiVersion + "/" + apiKey + "/"),
                    enableHALJSON: app.settings.enableHALJSON
                };
                app.settings.apiUrl = appOptions.apiUrl;
                _this.kernel.bind(contracts_1.TYPES.IAppOptions).toConstantValue(appOptions);
                _this.kernel.bind(contracts_1.TYPES.IBaasicAppOptions).toConstantValue(app.settings);
            }
            _this.bindHandler(httpApi_1.TYPES.IHttpClient, app.settings.httpClient, jQuery_1.JQueryHttpClient);
            _this.bindHandlerWithOptions(contracts_1.TYPES.IStorageHandler, contracts_1.TYPES.IDefaultStorageConfig, app.settings.storageHandler, localStorage_1.LocalStorageHandler);
            _this.bindHandler(contracts_1.TYPES.IEventHandler, app.settings.eventHandler, browserEvents_1.BrowserEventHandler);
            _this.kernel.bind(contracts_1.TYPES.IBaasicApp).toConstantValue(app);
        });
        this.diModules.push(diModule);
        for (var _i = 0, modules_1 = modules; _i < modules_1.length; _i++) {
            var m = modules_1[_i];
            this.addModule(m);
        }
        (_a = this.kernel).load.apply(_a, this.diModules);
        var _a;
    };
    DIModule.prototype.bindHandler = function (type, value, defaultBinding) {
        if (value) {
            this.kernel.bind(type).toConstantValue(value());
        }
        else {
            this.kernel.bind(type).to(defaultBinding);
        }
    };
    DIModule.prototype.bindHandlerWithOptions = function (type, optionType, value, defaultBinding) {
        if (value) {
            if (value instanceof Function) {
                this.kernel.bind(type).toConstantValue(value());
                return;
            }
            else {
                this.kernel.bind(optionType).toConstantValue(value);
            }
        }
        this.kernel.bind(type).to(defaultBinding);
    };
    DIModule.prototype.addModule = function (module) {
        if (module instanceof inversify_1.ContainerModule) {
            this.diModules.push(module);
        }
        else if (module instanceof Object && !(module instanceof Function)) {
            for (var mod in module) {
                this.addModule(module[mod]);
            }
        }
    };
    return DIModule;
}());
exports.DIModule = DIModule;
;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(34));
__export(__webpack_require__(33));
var contracts_1 = __webpack_require__(1);
exports.TokenTypes = contracts_1.TokenTypes;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metadata_1 = __webpack_require__(12);
var decorator_utils_1 = __webpack_require__(14);
var METADATA_KEY = __webpack_require__(8);
function inject(serviceIdentifier) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.inject = inject;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var METADATA_KEY = __webpack_require__(8);
var ERRORS_MSGS = __webpack_require__(13);
function injectable() {
    return function (target) {
        if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target) === true) {
            throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);
        }
        var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];
        Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);
        return target;
    };
}
exports.injectable = injectable;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metadata_1 = __webpack_require__(12);
var decorator_utils_1 = __webpack_require__(14);
var METADATA_KEY = __webpack_require__(8);
function multiInject(serviceIdentifier) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.MULTI_INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.multiInject = multiInject;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metadata_1 = __webpack_require__(12);
var decorator_utils_1 = __webpack_require__(14);
var METADATA_KEY = __webpack_require__(8);
function named(name) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, name);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.named = named;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metadata_1 = __webpack_require__(12);
var decorator_utils_1 = __webpack_require__(14);
var METADATA_KEY = __webpack_require__(8);
function optional() {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.OPTIONAL_TAG, true);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.optional = optional;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metadata_1 = __webpack_require__(12);
var decorator_utils_1 = __webpack_require__(14);
function tagged(metadataKey, metadataValue) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(metadataKey, metadataValue);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.tagged = tagged;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metadata_1 = __webpack_require__(12);
var decorator_utils_1 = __webpack_require__(14);
var METADATA_KEY = __webpack_require__(8);
function targetName(name) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.NAME_TAG, name);
        decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    };
}
exports.targetName = targetName;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metadata_1 = __webpack_require__(12);
var decorator_utils_1 = __webpack_require__(14);
var METADATA_KEY = __webpack_require__(8);
function unmanaged() {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.UNMANAGED_TAG, true);
        decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    };
}
exports.unmanaged = unmanaged;


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var guid_1 = __webpack_require__(17);
var literal_types_1 = __webpack_require__(15);
var Binding = (function () {
    function Binding(serviceIdentifier, defaultScope) {
        this.guid = guid_1.guid();
        this.activated = false;
        this.serviceIdentifier = serviceIdentifier;
        this.scope = defaultScope;
        this.type = literal_types_1.BindingTypeEnum.Invalid;
        this.constraint = function (request) { return true; };
        this.implementationType = null;
        this.cache = null;
        this.factory = null;
        this.provider = null;
        this.onActivation = null;
        this.dynamicValue = null;
    }
    Binding.prototype.clone = function () {
        var clone = new Binding(this.serviceIdentifier, this.scope);
        clone.activated = false;
        clone.implementationType = this.implementationType;
        clone.dynamicValue = this.dynamicValue;
        clone.scope = this.scope;
        clone.type = this.type;
        clone.factory = this.factory;
        clone.provider = this.provider;
        clone.constraint = this.constraint;
        clone.onActivation = this.onActivation;
        clone.cache = this.cache;
        return clone;
    };
    return Binding;
}());
exports.Binding = Binding;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BindingCount = {
    MultipleBindingsAvailable: 2,
    NoBindingsAvailable: 0,
    OnlyOneBindingAvailable: 1
};
exports.BindingCount = BindingCount;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var binding_1 = __webpack_require__(44);
var lookup_1 = __webpack_require__(49);
var planner_1 = __webpack_require__(52);
var resolver_1 = __webpack_require__(57);
var binding_to_syntax_1 = __webpack_require__(60);
var serialization_1 = __webpack_require__(20);
var container_snapshot_1 = __webpack_require__(48);
var guid_1 = __webpack_require__(17);
var ERROR_MSGS = __webpack_require__(13);
var METADATA_KEY = __webpack_require__(8);
var literal_types_1 = __webpack_require__(15);
var Container = (function () {
    function Container(containerOptions) {
        if (containerOptions !== undefined) {
            if (typeof containerOptions !== "object") {
                throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT);
            }
            else if (containerOptions.defaultScope === undefined) {
                throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);
            }
            else if (containerOptions.defaultScope !== literal_types_1.BindingScopeEnum.Singleton &&
                containerOptions.defaultScope !== literal_types_1.BindingScopeEnum.Transient) {
                throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);
            }
            this.options = {
                defaultScope: containerOptions.defaultScope
            };
        }
        else {
            this.options = {
                defaultScope: literal_types_1.BindingScopeEnum.Transient
            };
        }
        this.guid = guid_1.guid();
        this._bindingDictionary = new lookup_1.Lookup();
        this._snapshots = [];
        this._middleware = null;
        this.parent = null;
    }
    Container.merge = function (container1, container2) {
        var container = new Container();
        var bindingDictionary = planner_1.getBindingDictionary(container);
        var bindingDictionary1 = planner_1.getBindingDictionary(container1);
        var bindingDictionary2 = planner_1.getBindingDictionary(container2);
        function copyDictionary(origing, destination) {
            origing.traverse(function (key, value) {
                value.forEach(function (binding) {
                    destination.add(binding.serviceIdentifier, binding.clone());
                });
            });
        }
        copyDictionary(bindingDictionary1, bindingDictionary);
        copyDictionary(bindingDictionary2, bindingDictionary);
        return container;
    };
    Container.prototype.load = function () {
        var _this = this;
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var setModuleId = function (bindingToSyntax, moduleId) {
            bindingToSyntax._binding.moduleId = moduleId;
        };
        var getBindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _bind = _this.bind.bind(_this);
                var bindingToSyntax = _bind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        var getUnbindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _unbind = _this.unbind.bind(_this);
                _unbind(serviceIdentifier);
            };
        };
        var getIsboundFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _isBound = _this.isBound.bind(_this);
                return _isBound(serviceIdentifier);
            };
        };
        var getRebindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _rebind = _this.rebind.bind(_this);
                var bindingToSyntax = _rebind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        modules.forEach(function (module) {
            var bindFunction = getBindFunction(module.guid);
            var unbindFunction = getUnbindFunction(module.guid);
            var isboundFunction = getIsboundFunction(module.guid);
            var rebindFunction = getRebindFunction(module.guid);
            module.registry(bindFunction, unbindFunction, isboundFunction, rebindFunction);
        });
    };
    Container.prototype.unload = function () {
        var _this = this;
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var conditionFactory = function (expected) { return function (item) {
            return item.moduleId === expected;
        }; };
        modules.forEach(function (module) {
            var condition = conditionFactory(module.guid);
            _this._bindingDictionary.removeByCondition(condition);
        });
    };
    Container.prototype.bind = function (serviceIdentifier) {
        var defaultScope = literal_types_1.BindingScopeEnum.Transient;
        defaultScope = (this.options.defaultScope === defaultScope) ? defaultScope : literal_types_1.BindingScopeEnum.Singleton;
        var binding = new binding_1.Binding(serviceIdentifier, defaultScope);
        this._bindingDictionary.add(serviceIdentifier, binding);
        return new binding_to_syntax_1.BindingToSyntax(binding);
    };
    Container.prototype.rebind = function (serviceIdentifier) {
        this.unbind(serviceIdentifier);
        return this.bind(serviceIdentifier);
    };
    Container.prototype.unbind = function (serviceIdentifier) {
        try {
            this._bindingDictionary.remove(serviceIdentifier);
        }
        catch (e) {
            throw new Error(ERROR_MSGS.CANNOT_UNBIND + " " + serialization_1.getServiceIdentifierAsString(serviceIdentifier));
        }
    };
    Container.prototype.unbindAll = function () {
        this._bindingDictionary = new lookup_1.Lookup();
    };
    Container.prototype.isBound = function (serviceIdentifier) {
        return this._bindingDictionary.hasKey(serviceIdentifier);
    };
    Container.prototype.isBoundNamed = function (serviceIdentifier, named) {
        return this.isBoundTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.isBoundTagged = function (serviceIdentifier, key, value) {
        var bindings = this._bindingDictionary.get(serviceIdentifier);
        var request = planner_1.createMockRequest(this, serviceIdentifier, key, value);
        return bindings.some(function (b) { return b.constraint(request); });
    };
    Container.prototype.snapshot = function () {
        this._snapshots.push(container_snapshot_1.ContainerSnapshot.of(this._bindingDictionary.clone(), this._middleware));
    };
    Container.prototype.restore = function () {
        var snapshot = this._snapshots.pop();
        if (snapshot === undefined) {
            throw new Error(ERROR_MSGS.NO_MORE_SNAPSHOTS_AVAILABLE);
        }
        this._bindingDictionary = snapshot.bindings;
        this._middleware = snapshot.middleware;
    };
    Container.prototype.createChild = function () {
        var child = new Container();
        child.parent = this;
        return child;
    };
    Container.prototype.applyMiddleware = function () {
        var middlewares = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            middlewares[_i] = arguments[_i];
        }
        var initial = (this._middleware) ? this._middleware : this._planAndResolve();
        this._middleware = middlewares.reduce(function (prev, curr) {
            return curr(prev);
        }, initial);
    };
    Container.prototype.get = function (serviceIdentifier) {
        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
    };
    Container.prototype.getTagged = function (serviceIdentifier, key, value) {
        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
    };
    Container.prototype.getNamed = function (serviceIdentifier, named) {
        return this.getTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.getAll = function (serviceIdentifier) {
        return this._get(true, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
    };
    Container.prototype.getAllTagged = function (serviceIdentifier, key, value) {
        return this._get(false, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
    };
    Container.prototype.getAllNamed = function (serviceIdentifier, named) {
        return this.getAllTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype._get = function (avoidConstraints, isMultiInject, targetType, serviceIdentifier, key, value) {
        var result = null;
        var defaultArgs = {
            avoidConstraints: avoidConstraints,
            contextInterceptor: function (context) { return context; },
            isMultiInject: isMultiInject,
            key: key,
            serviceIdentifier: serviceIdentifier,
            targetType: targetType,
            value: value
        };
        if (this._middleware) {
            result = this._middleware(defaultArgs);
            if (result === undefined || result === null) {
                throw new Error(ERROR_MSGS.INVALID_MIDDLEWARE_RETURN);
            }
        }
        else {
            result = this._planAndResolve()(defaultArgs);
        }
        return result;
    };
    Container.prototype._planAndResolve = function () {
        var _this = this;
        return function (args) {
            var context = planner_1.plan(_this, args.isMultiInject, args.targetType, args.serviceIdentifier, args.key, args.value, args.avoidConstraints);
            context = args.contextInterceptor(context);
            var result = resolver_1.resolve(context);
            return result;
        };
    };
    return Container;
}());
exports.Container = Container;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var guid_1 = __webpack_require__(17);
var ContainerModule = (function () {
    function ContainerModule(registry) {
        this.guid = guid_1.guid();
        this.registry = registry;
    }
    return ContainerModule;
}());
exports.ContainerModule = ContainerModule;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ContainerSnapshot = (function () {
    function ContainerSnapshot() {
    }
    ContainerSnapshot.of = function (bindings, middleware) {
        var snapshot = new ContainerSnapshot();
        snapshot.bindings = bindings;
        snapshot.middleware = middleware;
        return snapshot;
    };
    return ContainerSnapshot;
}());
exports.ContainerSnapshot = ContainerSnapshot;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ERROR_MSGS = __webpack_require__(13);
var Lookup = (function () {
    function Lookup() {
        this._map = new Map();
    }
    Lookup.prototype.getMap = function () {
        return this._map;
    };
    Lookup.prototype.add = function (serviceIdentifier, value) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        ;
        if (value === null || value === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        ;
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            entry.push(value);
            this._map.set(serviceIdentifier, entry);
        }
        else {
            this._map.set(serviceIdentifier, [value]);
        }
    };
    Lookup.prototype.get = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            return entry;
        }
        else {
            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.remove = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        if (!this._map.delete(serviceIdentifier)) {
            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.removeByCondition = function (condition) {
        var _this = this;
        this._map.forEach(function (entries, key) {
            var updatedEntries = entries.filter(function (entry) { return !condition(entry); });
            if (updatedEntries.length > 0) {
                _this._map.set(key, updatedEntries);
            }
            else {
                _this._map.delete(key);
            }
        });
    };
    Lookup.prototype.hasKey = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        return this._map.has(serviceIdentifier);
    };
    Lookup.prototype.clone = function () {
        var copy = new Lookup();
        this._map.forEach(function (value, key) {
            value.forEach(function (b) { return copy.add(key, b.clone()); });
        });
        return copy;
    };
    Lookup.prototype.traverse = function (func) {
        this._map.forEach(function (value, key) {
            func(key, value);
        });
    };
    ;
    return Lookup;
}());
exports.Lookup = Lookup;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var guid_1 = __webpack_require__(17);
var Context = (function () {
    function Context(container) {
        this.guid = guid_1.guid();
        this.container = container;
    }
    Context.prototype.addPlan = function (plan) {
        this.plan = plan;
    };
    return Context;
}());
exports.Context = Context;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Plan = (function () {
    function Plan(parentContext, rootRequest) {
        this.parentContext = parentContext;
        this.rootRequest = rootRequest;
    }
    return Plan;
}());
exports.Plan = Plan;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var plan_1 = __webpack_require__(51);
var context_1 = __webpack_require__(50);
var request_1 = __webpack_require__(55);
var target_1 = __webpack_require__(27);
var binding_count_1 = __webpack_require__(45);
var reflection_utils_1 = __webpack_require__(54);
var metadata_1 = __webpack_require__(12);
var ERROR_MSGS = __webpack_require__(13);
var METADATA_KEY = __webpack_require__(8);
var literal_types_1 = __webpack_require__(15);
var serialization_1 = __webpack_require__(20);
function getBindingDictionary(cntnr) {
    return cntnr._bindingDictionary;
}
exports.getBindingDictionary = getBindingDictionary;
function _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {
    var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;
    var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);
    var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);
    if (key !== undefined) {
        var tagMetadata = new metadata_1.Metadata(key, value);
        target.metadata.push(tagMetadata);
    }
    return target;
}
function _getActiveBindings(avoidConstraints, context, parentRequest, target) {
    var bindings = getBindings(context.container, target.serviceIdentifier);
    var activeBindings = [];
    if (avoidConstraints === false) {
        activeBindings = bindings.filter(function (binding) {
            var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);
            return binding.constraint(request);
        });
    }
    else {
        activeBindings = bindings;
    }
    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);
    return activeBindings;
}
function _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {
    switch (bindings.length) {
        case binding_count_1.BindingCount.NoBindingsAvailable:
            if (target.isOptional() === true) {
                return bindings;
            }
            else {
                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
                var msg = ERROR_MSGS.NOT_REGISTERED;
                msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);
                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
        case binding_count_1.BindingCount.OnlyOneBindingAvailable:
            if (target.isArray() === false) {
                return bindings;
            }
        case binding_count_1.BindingCount.MultipleBindingsAvailable:
        default:
            if (target.isArray() === false) {
                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier), msg = ERROR_MSGS.AMBIGUOUS_MATCH + " " + serviceIdentifierString;
                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
            else {
                return bindings;
            }
    }
}
function _createSubRequests(avoidConstraints, serviceIdentifier, context, parentRequest, target) {
    try {
        var activeBindings = void 0;
        var childRequest_1;
        if (parentRequest === null) {
            activeBindings = _getActiveBindings(avoidConstraints, context, null, target);
            childRequest_1 = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);
            var plan_2 = new plan_1.Plan(context, childRequest_1);
            context.addPlan(plan_2);
        }
        else {
            activeBindings = _getActiveBindings(avoidConstraints, context, parentRequest, target);
            childRequest_1 = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);
        }
        activeBindings.forEach(function (binding) {
            var subChildRequest = null;
            if (target.isArray()) {
                subChildRequest = childRequest_1.addChildRequest(binding.serviceIdentifier, binding, target);
            }
            else {
                subChildRequest = childRequest_1;
            }
            if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {
                var dependencies = reflection_utils_1.getDependencies(binding.implementationType);
                dependencies.forEach(function (dependency) {
                    _createSubRequests(false, dependency.serviceIdentifier, context, subChildRequest, dependency);
                });
            }
        });
    }
    catch (error) {
        if (error instanceof RangeError && parentRequest !== null) {
            serialization_1.circularDependencyToException(parentRequest.parentContext.plan.rootRequest);
        }
        else {
            throw new Error(error.message);
        }
    }
}
function getBindings(container, serviceIdentifier) {
    var bindings = [];
    var bindingDictionary = getBindingDictionary(container);
    if (bindingDictionary.hasKey(serviceIdentifier)) {
        bindings = bindingDictionary.get(serviceIdentifier);
    }
    else if (container.parent !== null) {
        bindings = getBindings(container.parent, serviceIdentifier);
    }
    return bindings;
}
function plan(container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {
    if (avoidConstraints === void 0) { avoidConstraints = false; }
    var context = new context_1.Context(container);
    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, "", key, value);
    _createSubRequests(avoidConstraints, serviceIdentifier, context, null, target);
    return context;
}
exports.plan = plan;
function createMockRequest(container, serviceIdentifier, key, value) {
    var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, "", serviceIdentifier, new metadata_1.Metadata(key, value));
    var context = new context_1.Context(container);
    var request = new request_1.Request(serviceIdentifier, context, null, [], target);
    return request;
}
exports.createMockRequest = createMockRequest;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var QueryableString = (function () {
    function QueryableString(str) {
        this.str = str;
    }
    QueryableString.prototype.startsWith = function (searchString) {
        return this.str.indexOf(searchString) === 0;
    };
    QueryableString.prototype.endsWith = function (searchString) {
        var reverseString = "";
        var reverseSearchString = searchString.split("").reverse().join("");
        reverseString = this.str.split("").reverse().join("");
        return this.startsWith.call({ str: reverseString }, reverseSearchString);
    };
    QueryableString.prototype.contains = function (searchString) {
        return (this.str.indexOf(searchString) !== -1);
    };
    QueryableString.prototype.equals = function (compareString) {
        return this.str === compareString;
    };
    QueryableString.prototype.value = function () {
        return this.str;
    };
    return QueryableString;
}());
exports.QueryableString = QueryableString;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var serialization_1 = __webpack_require__(20);
var target_1 = __webpack_require__(27);
var ERROR_MSGS = __webpack_require__(13);
var METADATA_KEY = __webpack_require__(8);
var literal_types_1 = __webpack_require__(15);
function getDependencies(func) {
    var constructorName = serialization_1.getFunctionName(func);
    var targets = getTargets(func, false);
    var baseClassDepencencyCount = getBaseClassDepencencyCount(func);
    if (targets.length < baseClassDepencencyCount) {
        var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH_1 +
            constructorName + ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH_2;
        throw new Error(error);
    }
    return targets;
}
exports.getDependencies = getDependencies;
function getTargets(func, isBaseClass) {
    var constructorName = serialization_1.getFunctionName(func);
    var serviceIdentifiers = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, func);
    if (serviceIdentifiers === undefined) {
        var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + " " + constructorName + ".";
        throw new Error(msg);
    }
    var constructorArgsMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED, func) || [];
    var targets = (getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, func.length)).concat((getClassPropsAsTargets(func)));
    return targets;
}
function getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, constructorLength) {
    var targets = [];
    for (var i = 0; i < constructorLength; i++) {
        var targetMetadata = constructorArgsMetadata[i.toString()] || [];
        var metadata = formatTargetMetadata(targetMetadata);
        var serviceIndentifier = serviceIdentifiers[i];
        var hasInjectAnnotations = (metadata.inject || metadata.multiInject);
        serviceIndentifier = (hasInjectAnnotations) ? (hasInjectAnnotations) : serviceIndentifier;
        var isObject = serviceIndentifier === Object;
        var isFunction = serviceIndentifier === Function;
        var isUndefined = serviceIndentifier === undefined;
        var isUnknownType = (isObject || isFunction || isUndefined);
        if (isBaseClass === false && isUnknownType) {
            var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + " argument " + i + " in class " + constructorName + ".";
            throw new Error(msg);
        }
        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIndentifier);
        target.metadata = targetMetadata;
        targets.push(target);
    }
    return targets;
}
function getClassPropsAsTargets(func) {
    var classPropsMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED_PROP, func) || [];
    var targets = [];
    var keys = Object.keys(classPropsMetadata);
    for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var targetMetadata = classPropsMetadata[key];
        var metadata = formatTargetMetadata(classPropsMetadata[key]);
        var targetName = metadata.targetName || key;
        var serviceIndentifier = (metadata.inject || metadata.multiInject);
        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ClassProperty, targetName, serviceIndentifier);
        target.metadata = targetMetadata;
        targets.push(target);
    }
    var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseTargets = getClassPropsAsTargets(baseConstructor);
        targets = targets.concat(baseTargets);
    }
    return targets;
}
function getBaseClassDepencencyCount(func) {
    var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;
    if (baseConstructor !== Object) {
        var targets = getTargets(baseConstructor, true);
        var metadata = targets.map(function (t) {
            return t.metadata.filter(function (m) {
                return m.key === METADATA_KEY.UNMANAGED_TAG;
            });
        });
        var unmanagedCount = [].concat.apply([], metadata).length;
        var dependencyCount = targets.length - unmanagedCount;
        if (dependencyCount > 0) {
            return dependencyCount;
        }
        else {
            return getBaseClassDepencencyCount(baseConstructor);
        }
    }
    else {
        return 0;
    }
}
function formatTargetMetadata(targetMetadata) {
    var targetMetadataMap = {};
    targetMetadata.forEach(function (m) {
        targetMetadataMap[m.key.toString()] = m.value;
    });
    return {
        inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],
        multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],
        targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],
        unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]
    };
}


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var guid_1 = __webpack_require__(17);
var Request = (function () {
    function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {
        this.guid = guid_1.guid();
        this.serviceIdentifier = serviceIdentifier;
        this.parentContext = parentContext;
        this.parentRequest = parentRequest;
        this.target = target;
        this.childRequests = [];
        this.bindings = (Array.isArray(bindings) ? bindings : [bindings]);
    }
    Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {
        var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);
        this.childRequests.push(child);
        return child;
    };
    return Request;
}());
exports.Request = Request;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var literal_types_1 = __webpack_require__(15);
function _injectProperties(instance, childRequests, resolveRequest) {
    var propertyInjectionsRequests = childRequests.filter(function (childRequest) {
        return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ClassProperty);
    });
    var propertyInjections = propertyInjectionsRequests.map(function (childRequest) {
        return resolveRequest(childRequest);
    });
    propertyInjectionsRequests.forEach(function (r, index) {
        var propertyName = "";
        propertyName = r.target.name.value();
        var injection = propertyInjections[index];
        instance[propertyName] = injection;
    });
    return instance;
}
function _createInstance(Func, injections) {
    return new (Func.bind.apply(Func, [void 0].concat(injections)))();
}
function resolveInstance(constr, childRequests, resolveRequest) {
    var result = null;
    if (childRequests.length > 0) {
        var constructorInjectionsRequests = childRequests.filter(function (childRequest) {
            return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ConstructorArgument);
        });
        var constructorInjections = constructorInjectionsRequests.map(function (childRequest) {
            return resolveRequest(childRequest);
        });
        result = _createInstance(constr, constructorInjections);
        result = _injectProperties(result, childRequests, resolveRequest);
    }
    else {
        result = new constr();
    }
    return result;
}
exports.resolveInstance = resolveInstance;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var literal_types_1 = __webpack_require__(15);
var serialization_1 = __webpack_require__(20);
var instantiation_1 = __webpack_require__(56);
var ERROR_MSGS = __webpack_require__(13);
function _resolveRequest(request) {
    var bindings = request.bindings;
    var childRequests = request.childRequests;
    var targetIsAnAray = request.target && request.target.isArray();
    var targetParentIsNotAnArray = !request.parentRequest ||
        !request.parentRequest.target ||
        !request.target ||
        !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);
    if (targetIsAnAray && targetParentIsNotAnArray) {
        return childRequests.map(function (childRequest) {
            return _resolveRequest(childRequest);
        });
    }
    else {
        var result = null;
        if (request.target.isOptional() === true && bindings.length === 0) {
            return undefined;
        }
        var binding = bindings[0];
        var isSingleton = binding.scope === literal_types_1.BindingScopeEnum.Singleton;
        if (isSingleton && binding.activated === true) {
            return binding.cache;
        }
        if (binding.type === literal_types_1.BindingTypeEnum.ConstantValue) {
            result = binding.cache;
        }
        else if (binding.type === literal_types_1.BindingTypeEnum.Function) {
            result = binding.cache;
        }
        else if (binding.type === literal_types_1.BindingTypeEnum.Constructor) {
            result = binding.implementationType;
        }
        else if (binding.type === literal_types_1.BindingTypeEnum.DynamicValue && binding.dynamicValue !== null) {
            result = binding.dynamicValue(request.parentContext);
        }
        else if (binding.type === literal_types_1.BindingTypeEnum.Factory && binding.factory !== null) {
            result = binding.factory(request.parentContext);
        }
        else if (binding.type === literal_types_1.BindingTypeEnum.Provider && binding.provider !== null) {
            result = binding.provider(request.parentContext);
        }
        else if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {
            result = instantiation_1.resolveInstance(binding.implementationType, childRequests, _resolveRequest);
        }
        else {
            var serviceIdentifier = serialization_1.getServiceIdentifierAsString(request.serviceIdentifier);
            throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + " " + serviceIdentifier);
        }
        if (typeof binding.onActivation === "function") {
            result = binding.onActivation(request.parentContext, result);
        }
        if (isSingleton) {
            binding.cache = result;
            binding.activated = true;
        }
        return result;
    }
}
function resolve(context) {
    return _resolveRequest(context.plan.rootRequest);
}
exports.resolve = resolve;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var literal_types_1 = __webpack_require__(15);
var binding_when_on_syntax_1 = __webpack_require__(28);
var BindingInSyntax = (function () {
    function BindingInSyntax(binding) {
        this._binding = binding;
    }
    BindingInSyntax.prototype.inSingletonScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inTransientScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Transient;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    return BindingInSyntax;
}());
exports.BindingInSyntax = BindingInSyntax;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var binding_in_syntax_1 = __webpack_require__(58);
var binding_when_syntax_1 = __webpack_require__(24);
var binding_on_syntax_1 = __webpack_require__(23);
var BindingInWhenOnSyntax = (function () {
    function BindingInWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
        this._bindingInSyntax = new binding_in_syntax_1.BindingInSyntax(binding);
    }
    BindingInWhenOnSyntax.prototype.inSingletonScope = function () {
        return this._bindingInSyntax.inSingletonScope();
    };
    BindingInWhenOnSyntax.prototype.inTransientScope = function () {
        return this._bindingInSyntax.inTransientScope();
    };
    BindingInWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    return BindingInWhenOnSyntax;
}());
exports.BindingInWhenOnSyntax = BindingInWhenOnSyntax;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var binding_in_when_on_syntax_1 = __webpack_require__(59);
var binding_when_on_syntax_1 = __webpack_require__(28);
var literal_types_1 = __webpack_require__(15);
var ERROR_MSGS = __webpack_require__(13);
var BindingToSyntax = (function () {
    function BindingToSyntax(binding) {
        this._binding = binding;
    }
    BindingToSyntax.prototype.to = function (constructor) {
        this._binding.type = literal_types_1.BindingTypeEnum.Instance;
        this._binding.implementationType = constructor;
        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toSelf = function () {
        if (typeof this._binding.serviceIdentifier !== "function") {
            throw new Error("" + ERROR_MSGS.INVALID_TO_SELF_VALUE);
        }
        var self = this._binding.serviceIdentifier;
        return this.to(self);
    };
    BindingToSyntax.prototype.toConstantValue = function (value) {
        this._binding.type = literal_types_1.BindingTypeEnum.ConstantValue;
        this._binding.cache = value;
        this._binding.dynamicValue = null;
        this._binding.implementationType = null;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toDynamicValue = function (func) {
        this._binding.type = literal_types_1.BindingTypeEnum.DynamicValue;
        this._binding.cache = null;
        this._binding.dynamicValue = func;
        this._binding.implementationType = null;
        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toConstructor = function (constructor) {
        this._binding.type = literal_types_1.BindingTypeEnum.Constructor;
        this._binding.implementationType = constructor;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFactory = function (factory) {
        this._binding.type = literal_types_1.BindingTypeEnum.Factory;
        this._binding.factory = factory;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFunction = function (func) {
        if (typeof func !== "function") {
            throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);
        }
        ;
        var bindingWhenOnSyntax = this.toConstantValue(func);
        this._binding.type = literal_types_1.BindingTypeEnum.Function;
        return bindingWhenOnSyntax;
    };
    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {
        this._binding.type = literal_types_1.BindingTypeEnum.Factory;
        this._binding.factory = function (context) {
            return function () {
                return context.container.get(serviceIdentifier);
            };
        };
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toProvider = function (provider) {
        this._binding.type = literal_types_1.BindingTypeEnum.Provider;
        this._binding.provider = provider;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    return BindingToSyntax;
}());
exports.BindingToSyntax = BindingToSyntax;


/***/ }),
/* 61 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var inversify_1 = __webpack_require__(0);
var uritemplate = __webpack_require__(331);
var common_1 = __webpack_require__(2);
var BaasicBaseRouteDefinition = (function () {
    function BaasicBaseRouteDefinition(appOptions) {
        this.appOptions = appOptions;
        this.utility = new common_1.Utility();
        this.modelMapper = new common_1.ModelMapper();
    }
    /**
     * Parses resources route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain resource subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the resource property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @returns Query resources uri with search params
     * @example baasicBaseDefinition.find();
     **/
    BaasicBaseRouteDefinition.prototype.baseFind = function (route, options) {
        var params = this.modelMapper.findParams(options);
        return uritemplate.parse(route).expand(params);
    };
    /**
      * Parses get resource route which must be expanded with the Id of the previously created resource in the system.
      * @returns get resource uri
      * @method
      * @example baasicBaseRouteDefinition.get(route, id);
      **/
    BaasicBaseRouteDefinition.prototype.baseGet = function (route, id, options, propName) {
        return uritemplate.parse(route).expand(this.modelMapper.getParams(id, options, propName));
    };
    /**
      * Parses get resource route which must be expanded with the Id of the previously created resource in the system.
      * @returns get resource uri
      * @method
      * @example baasicBaseRouteDefinition.create();
      **/
    BaasicBaseRouteDefinition.prototype.baseCreate = function (route, data) {
        return uritemplate.parse(route).expand(data);
    };
    /**
     * Parses get resource route.
     * @returns update resource uri
     * @method
     * @example baasicBaseRouteDefinition.update();
     */
    BaasicBaseRouteDefinition.prototype.baseUpdate = function (route, data, options, linkName) {
        var link = linkName ? linkName : 'put';
        var params = this.modelMapper.updateParams(data);
        var model = params[this.modelMapper.modelPropertyName];
        if (typeof options === 'undefined') {
            if (this.appOptions.enableHALJSON && model.links) {
                return model.links(link).href;
            }
            else {
                return uritemplate.parse(route).expand(model);
            }
        }
        else {
            var opt = this.utility.extend(model, options);
            if (this.appOptions.enableHALJSON && model.links) {
                return uritemplate.parse(model.links(link).href).expand(opt);
            }
            else {
                return uritemplate.parse(route).expand(opt);
            }
        }
    };
    /**
     * Parses delete resource route.
     * @returns delete resource uri.
     * @method
     * @example baasicBaseRouteDefinition.delete();
     */
    BaasicBaseRouteDefinition.prototype.baseDelete = function (route, data, options, linkName) {
        var link = linkName ? linkName : 'delete';
        var params = this.modelMapper.removeParams(data);
        var model = params[this.modelMapper.modelPropertyName];
        if (typeof options === 'undefined') {
            if (this.appOptions.enableHALJSON && model.links) {
                return model.links(link).href;
            }
            else {
                return uritemplate.parse(route).expand(model);
            }
        }
        else {
            var opt = this.utility.extend(model, options);
            if (this.appOptions.enableHALJSON && model.links) {
                return uritemplate.parse(model.links(link).href).expand(opt);
            }
            else {
                return uritemplate.parse(route).expand(opt);
            }
        }
    };
    BaasicBaseRouteDefinition.prototype.createParams = function (data, prop) {
        return this.modelMapper.createParams(data)[this.modelMapper.modelPropertyName];
    };
    BaasicBaseRouteDefinition.prototype.updateParams = function (data) {
        return this.modelMapper.updateParams(data)[this.modelMapper.modelPropertyName];
    };
    BaasicBaseRouteDefinition.prototype.deleteParams = function (data) {
        return this.modelMapper.removeParams(data)[this.modelMapper.modelPropertyName];
    };
    /**
     * Parses and expands URI templates based on [RFC6570](http://tools.ietf.org/html/rfc6570) specifications. For more information please visit the project [GitHub](https://github.com/Baasic/uritemplate-js) page.
     * @method
     * @example baasicBaseRouteDefinition.parse('<route>/{?embed,fields,options}').expand({embed: '<embedded-resource>'});
     **/
    BaasicBaseRouteDefinition.prototype.parse = function (route) {
        return uritemplate.parse(route);
    };
    return BaasicBaseRouteDefinition;
}());
BaasicBaseRouteDefinition = __decorate([
    inversify_1.injectable(),
    __metadata("design:paramtypes", [Object])
], BaasicBaseRouteDefinition);
exports.BaasicBaseRouteDefinition = BaasicBaseRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var TYPES = {
    Utility: Symbol("Utility"),
    ModelMapper: Symbol("ModelMapper"),
    IHALParser: Symbol("IHALParser")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.Utility).to(common_1.Utility);
    bind(TYPES.ModelMapper).to(common_1.ModelMapper);
    bind(TYPES.IHALParser).toConstantValue(common_1.HALParser);
});
exports.diModule = diModule;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var common_1 = __webpack_require__(2);
var utility = new common_1.Utility();
//HAL Parser is based on https://github.com/Baasic/angular-hal & https://github.com/jasonaden/angular-hal implementation. Parser is used to parse [HAL (Hyptertext Application Language)](http://stateless.co/hal_specification.html) JSON structures into usable JavaScript objects.
var __bind = function (fn, me) { return function () { return fn.apply(me, arguments); }; };
var removeNamespace;
removeNamespace = function (name, ns) {
    ns = ns ? ns + ':' : '';
    if (name.substr(0, ns.length) === ns) {
        return name.substr(ns.length);
    }
    else {
        return name;
    }
};
var Link, Links, Resource;
function Parser(ns) {
    this.ns = ns;
    this.parse = __bind(this.parse, this);
}
Parser.prototype.parse = function (hal) {
    var json, _embedded, _links;
    json = utility.extend(hal);
    _links = json._links, _embedded = json._embedded;
    delete json._links;
    delete json._embedded;
    return new Resource(json, _links, _embedded, this.ns);
};
Resource = (function () {
    function Resource(data, links, embedded, ns) {
        var em, name, prop, resourceLinks;
        ns = ns ? ns : '';
        utility.extend(this, data);
        resourceLinks = links ? new Links(links) : {};
        for (name in embedded) {
            prop = embedded[name];
            this[removeNamespace(name, ns)] = (function () {
                var _i, _len, _results;
                if (prop) {
                    if (Array.isArray(prop)) {
                        _results = [];
                        for (_i = 0, _len = prop.length; _i < _len; _i++) {
                            em = prop[_i];
                            _results.push(new Parser(ns).parse(em, ns));
                        }
                        return _results;
                    }
                    else {
                        return new Parser(ns).parse(prop, ns);
                    }
                }
            })();
        }
        this.links = function (name) {
            var key;
            if (name == null) {
                name = '';
            }
            key = name === 'self' ? name : resourceLinks[name] ? name : ns + ':' + name;
            if (resourceLinks[key]) {
                return resourceLinks[key];
            }
            else {
                return resourceLinks;
            }
        };
    }
    return Resource;
})();
Links = (function () {
    function Links(links, ns) {
        var link, lk, name;
        if (!(links != null ? links.self : void 0)) {
            console.log('Self link is missing.');
        }
        for (name in links) {
            link = links[name];
            this[name] = (function () {
                var _i, _len, _results;
                if (Array.isArray(link)) {
                    _results = [];
                    for (_i = 0, _len = link.length; _i < _len; _i++) {
                        lk = link[_i];
                        _results.push(new Link(lk, ns));
                    }
                    return _results;
                }
                else {
                    return new Link(link, ns);
                }
            })();
        }
    }
    return Links;
})();
Link = (function () {
    function Link(link, ns) {
        if (!(link != null ? link.href : void 0)) {
            throw 'href is required for all links';
        }
        this.href = link.href, this.name = link.name, this.profile = link.profile;
        this.templated = !!link.templated;
        this.title = link.title || '';
    }
    return Link;
})();
var HALParser;
exports.HALParser = HALParser;
exports.HALParser = HALParser = new Parser('JavaScriptSDK');


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module modelMapper
 * @description This service is used to perform low level model or option transformations before they are sent to the Baasic back-end.
 **/

var common_1 = __webpack_require__(2);
var ModelMapper = (function () {
    function ModelMapper() {
        this.idPropertyName = 'id';
        this.modelPropertyName = 'model';
        this.utility = new common_1.Utility();
    }
    ModelMapper.prototype.FindParams = function (options) {
        var object = {};
        if (this.utility.isObject(options)) {
            this.utility.extend(object, options);
            if (options.hasOwnProperty('orderBy') && options.hasOwnProperty('orderDirection')) {
                object.sort = options.orderBy ? options.orderBy + '|' + options.orderDirection : null;
            }
            if (options.hasOwnProperty('search')) {
                object.searchQuery = options.search;
            }
            if (options.hasOwnProperty('pageNumber')) {
                object.page = options.pageNumber;
            }
            if (options.hasOwnProperty('pageSize')) {
                object.rpp = options.pageSize;
            }
        }
        else {
            object.searchQuery = options;
        }
        return object;
    };
    ModelMapper.prototype.KeyParams = function (id, options, propName) {
        var object = {};
        if (this.utility.isObject(id)) {
            this.utility.extend(object, id);
        }
        else {
            if (propName !== undefined) {
                object[propName] = id;
            }
            else {
                object[this.idPropertyName] = id;
            }
        }
        if (options !== undefined && this.utility.isObject(options)) {
            this.utility.extend(object, options);
        }
        return object;
    };
    ModelMapper.prototype.ModelParams = function (data) {
        var object = {};
        if (data && data.hasOwnProperty(this.modelPropertyName)) {
            this.utility.extend(object, data);
        }
        else {
            object[this.modelPropertyName] = data;
        }
        return object;
    };
    /**
     * Parses Baasic Api pagination, sorting and search parameters.
     * @param options query resources options object
     * @method
     * @example modelMapper.findParams({ pageNumber:1, pageSize:10 });
     **/
    ModelMapper.prototype.findParams = function (options) {
        return this.FindParams(options);
    };
    /**
     * Parses specified key parameters; initial object can be expanded with additional parameters.
     * @param id Resources unique identifier
     * @param options query resources options object
     * @param propName property name
     * @method
     * @example modelMapper.getParams(('<value>', {additionalOptions: '<option>'},'<property-name>'));
     **/
    ModelMapper.prototype.getParams = function (id, options, propName) {
        return this.KeyParams(id, options, propName);
    };
    /**
     * Performs create resource transforms on an object so that it can be safely expanded with additional properties.
     * @param data data object
     * @method
     * @example modelMapper.createParams({});
     **/
    ModelMapper.prototype.createParams = function (data) {
        return this.ModelParams(data);
    };
    /**
     * Performs update resource transforms on transforms an object so that it can be safely expanded with additional properties.
     * @param data data object
     * @method
     * @example modelMapper.updateParams({});
     **/
    ModelMapper.prototype.updateParams = function (data) {
        return this.ModelParams(data);
    };
    /**
     * Performs remove resource transforms on transforms an object so that it can be safely expanded with additional properties.
     * @param data data object
     * @method
     * @example modelMapper.removeParams({});
     **/
    ModelMapper.prototype.removeParams = function (data) {
        return this.ModelParams(data);
    };
    return ModelMapper;
}());
exports.ModelMapper = ModelMapper;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var inversify_1 = __webpack_require__(0);
var Utility = (function () {
    function Utility() {
    }
    /**
     * Order an array by specified order type.
     * @param values of T type
     * @param orderType property name
     * @returns ordered array.
     */
    Utility.prototype.OrderByArray = function (values, orderType) {
        return values.sort(function (a, b) {
            if (a[orderType] < b[orderType]) {
                return -1;
            }
            if (a[orderType] > b[orderType]) {
                return 1;
            }
            return 0;
        });
    };
    /**
     * Checks if provided value is javascript object.
     * @param value any given value
     * @returns true if provided value is object, otherwise false.
     */
    Utility.prototype.isObject = function (value) {
        return value !== null && typeof value === 'object';
    };
    Utility.prototype.isUndefined = function (value) {
        return typeof value === 'undefined';
    };
    /**
     * Copies properties from source object to destination object.
     * @param dstObj destination object
     * @param srcObj source object
     * @returns destination object with new properties from source object.
     */
    Utility.prototype.extend = function (dstObj) {
        var srcObj = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            srcObj[_i - 1] = arguments[_i];
        }
        var newObj = dstObj;
        for (var _a = 0, srcObj_1 = srcObj; _a < srcObj_1.length; _a++) {
            var obj = srcObj_1[_a];
            for (var key in obj) {
                //copy all the fields
                newObj[key] = obj[key];
            }
        }
        return newObj;
    };
    /**
     * Copies properties from source object to destination object.
     * @param dstObj destination object
     * @param srcObj source object
     * @returns destination object with new properties from source object.
     */
    Utility.prototype.extendAs = function (dstObj) {
        var srcObj = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            srcObj[_i - 1] = arguments[_i];
        }
        srcObj.unshift(dstObj);
        return this.extend.apply(this, srcObj);
    };
    return Utility;
}());
Utility = __decorate([
    inversify_1.injectable(),
    __metadata("design:paramtypes", [])
], Utility);
exports.Utility = Utility;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var utility = new common_1.Utility();
var BrowserEventHandler = (function () {
    function BrowserEventHandler(storageHandler, application) {
        this.storageHandler = storageHandler;
        this.application = application;
        this.messageBusKey = 'baasic-message-bus-' + this.application.getApiKey();
        this.initEventing();
    }
    BrowserEventHandler.prototype.pushMessage = function (message, args) {
        this.storageHandler.remove(this.messageBusKey);
        this.storageHandler.set(this.messageBusKey, JSON.stringify({
            message: message,
            args: args
        }));
    };
    BrowserEventHandler.prototype.triggerEvent = function (eventName, data) {
        var element = document;
        $ !== undefined ?
            function (element, eventName, additionalData) {
                var event = utility.extend($.Event(eventName), additionalData);
                $(element).trigger(event);
            } :
            function (element, eventName, additionalData) {
                var event; // The custom event that will be created
                if (CustomEvent && typeof CustomEvent === 'function') {
                    event = utility.extend(new CustomEvent(eventName));
                    element.dispatchEvent(event);
                }
                else if (document.createEvent) {
                    event = document.createEvent('CustomEvent');
                    event.initEvent(eventName, true, true);
                    if (additionalData) {
                        utility.extend(event, additionalData);
                    }
                    if (element.dispatchEvent) {
                        element.dispatchEvent(event);
                    }
                    else {
                        document.dispatchEvent(event);
                    }
                }
                else {
                    event = document.createEvent('CustomEvent');
                    event.eventType = eventName;
                    if (additionalData) {
                        utility.extend(event, additionalData);
                    }
                    element.fireEvent('on' + event.eventType, event);
                }
            };
    };
    BrowserEventHandler.prototype.addEvent = function (eventName, func) {
        var elem = window;
        $ !== undefined ?
            function (evnt, elem, func) {
                $(elem).on(evnt, func);
            } :
            function (evnt, elem, func) {
                if (elem.addEventListener) {
                    elem.addEventListener(evnt, func, false);
                }
                else if (elem.attachEvent) {
                    elem.attachEvent('on' + evnt, func);
                }
                else {
                    elem['on' + evnt] = func;
                }
            };
    };
    BrowserEventHandler.prototype.initEventing = function () {
        this.addEvent('storage', function (e) {
            e = e || event;
            if (e.originalEvent) {
                e = e.originalEvent;
            }
            if (e.key === this.messageBusKey) {
                var value = e.newValue;
                if (value && value !== '') {
                    var data = JSON.parse(value);
                    this.eventHandler.triggerEvent(data.message.type, this.utility.extend(data.args, { app: this.application }));
                }
            }
        });
    };
    return BrowserEventHandler;
}());
BrowserEventHandler = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IStorageHandler)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IBaasicApp)),
    __metadata("design:paramtypes", [Object, Object])
], BrowserEventHandler);
exports.BrowserEventHandler = BrowserEventHandler;
;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(67));


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.TokenTypes = {
    Access: 'access',
    Refresh: 'refresh'
};


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TYPES = {
    IBaasicAppOptions: Symbol("IBaasicAppOptions"),
    IAppOptions: Symbol("IAppOptions"),
    IStorageHandler: Symbol("IStorageHandler"),
    IEventHandler: Symbol("IEventHandler"),
    ITokenHandler: Symbol("ITokenHandler"),
    IUserHandler: Symbol("IUserHandler"),
    IBaasicApp: Symbol("IBaasicApp"),
    IDefaultStorageConfig: Symbol("IDefaultStorageConfig")
};
exports.TYPES = TYPES;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var contracts_1 = __webpack_require__(1);
var core_1 = __webpack_require__(30);
__webpack_require__(10);
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(contracts_1.TYPES.ITokenHandler).to(core_1.TokenHandler);
    bind(contracts_1.TYPES.IUserHandler).to(core_1.UserHandler);
});
exports.diModule = diModule;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var contracts_1 = __webpack_require__(1);
var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var LocalStorageHandler = (function () {
    function LocalStorageHandler(config) {
        config = config || {};
        if (!localStorage) {
            throw new Error("Local storage not found.");
        }
        var parseKey = config.keyGenerator;
        var getHandler;
        if (parseKey) {
            getHandler = function (fn) { return function () { arguments[0] = parseKey(arguments[0]); return fn.apply(this, arguments); }; };
        }
        else {
            getHandler = function (fn) { return fn; };
        }
        this.clear = localStorage.clear;
        this.remove = getHandler(this.removeItem);
        this.set = getHandler(this.setItem);
        this.get = getHandler(this.getItem);
    }
    LocalStorageHandler.prototype.removeItem = function (key) {
        localStorage.removeItem(key);
    };
    LocalStorageHandler.prototype.getItem = function (key) {
        return JSON.parse(localStorage.getItem(key));
    };
    LocalStorageHandler.prototype.setItem = function (key, data) {
        localStorage.setItem(key, JSON.stringify(data));
    };
    return LocalStorageHandler;
}());
LocalStorageHandler = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IDefaultStorageConfig)), __param(0, inversify_1.optional()),
    __metadata("design:paramtypes", [Object])
], LocalStorageHandler);
exports.LocalStorageHandler = LocalStorageHandler;
;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(72));


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var TokenHandler = (function () {
    function TokenHandler(eventHandler, storageHandler, application) {
        this.eventHandler = eventHandler;
        this.storageHandler = storageHandler;
        this.application = application;
        this.utility = new common_1.Utility();
        this.messageTypes = {
            tokenExpired: 'tokenExpired',
            tokenUpdated: 'tokenUpdated'
        };
        this.initEventing();
        this.tokenKey = 'baasic-auth-token-' + this.application.getApiKey();
        this.token = this.get(contracts_1.TokenTypes.Access);
        if (this.token) {
            this.userAccessTokenTimerHandle = this.setExpirationTimer(this.token);
        }
    }
    TokenHandler.prototype.store = function (token) {
        //Type guard for plain JavaScript
        var anyToken = token;
        if (anyToken && !this.utility.isUndefined(anyToken.access_token)) {
            var t = {
                token: anyToken.access_token,
                expires_in: anyToken.expires_in,
                sliding_window: anyToken.sliding_window,
                tokenUrl: anyToken.access_url_token,
                type: anyToken.token_type
            };
            token = t;
        }
        this.syncToken(token);
        if (token === undefined || token === null) {
            this.storageHandler.remove(this.tokenKey);
        }
        else {
            this.storageHandler.set(this.tokenKey, JSON.stringify(token));
        }
        if (token === undefined || token === null) {
            this.triggerTokenExpired(this.application);
        }
        else {
            this.triggerTokenUpdated(this.application);
        }
    };
    TokenHandler.prototype.get = function (type) {
        return JSON.parse(this.storageHandler.get(this.tokenKey));
    };
    TokenHandler.prototype.triggerTokenExpired = function (app) {
        var data = { app: app };
        this.eventHandler.triggerEvent('tokenExpired', data);
        this.eventHandler.pushMessage({
            type: this.messageTypes.tokenExpired
        }, {});
    };
    TokenHandler.prototype.triggerTokenUpdated = function (app) {
        var data = { app: app };
        this.eventHandler.triggerEvent('tokenUpdated', data);
        this.eventHandler.pushMessage({
            type: this.messageTypes.tokenUpdated
        }, {});
    };
    TokenHandler.prototype.setExpirationTimer = function (token) {
        if (token && token.expireTime) {
            var expiresIn = token.expireTime - new Date().getTime();
            if (expiresIn > 0) {
                var self = this;
                return setTimeout(function () {
                    self.store(null);
                    self.triggerTokenExpired(self.application);
                }, expiresIn);
            }
            else {
                this.store(null);
            }
        }
        return null;
    };
    TokenHandler.prototype.syncToken = function (newToken) {
        clearTimeout(this.userAccessTokenTimerHandle);
        if (newToken !== undefined && newToken !== null) {
            if (!newToken.expireTime) {
                var expiresIn = newToken.expires_in;
                var slidingWindow = newToken.sliding_window;
                /*jshint camelcase: true */
                if (expiresIn) {
                    newToken.expireTime = new Date().getTime() + (expiresIn * 1000);
                }
                else if (slidingWindow) {
                    newToken.expireTime = new Date().getTime() + (slidingWindow * 1000);
                }
            }
            this.userAccessTokenTimerHandle = this.setExpirationTimer(newToken);
        }
    };
    TokenHandler.prototype.initEventing = function () {
        this.eventHandler.addEvent('tokenExpired', function (e) {
            e = e || event;
            if (e.originalEvent) {
                e = e.originalEvent;
            }
            this.syncToken(null);
        });
    };
    return TokenHandler;
}());
TokenHandler = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IEventHandler)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IStorageHandler)),
    __param(2, inversify_1.inject(contracts_1.TYPES.IBaasicApp)),
    __metadata("design:paramtypes", [Object, Object, Object])
], TokenHandler);
exports.TokenHandler = TokenHandler;
;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var contracts_1 = __webpack_require__(1);
var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var UserHandler = (function () {
    function UserHandler(eventHandler, storageHandler, application) {
        this.eventHandler = eventHandler;
        this.storageHandler = storageHandler;
        this.application = application;
        this.messageTypes = {
            userChanged: 'userChanged'
        };
        this.userInfoKey = 'baasic-user-info-' + this.application.getApiKey();
        this.user = {
            isAuthenticated: function () {
                var token = this.application.getAccessToken();
                return token !== undefined && token !== null && (token.expireTime === undefined || token.expireTime === null || (token.expireTime - new Date().getTime()) > 0);
            }
        };
    }
    UserHandler.prototype.getUser = function () {
        var userInfo = JSON.parse(this.storageHandler.get(this.userInfoKey));
        if (userInfo) {
            this.user.user = userInfo;
        }
        else {
            delete this.user.user;
        }
        return this.user;
    };
    UserHandler.prototype.setUser = function (userInfo) {
        if (userInfo === undefined || userInfo === null) {
            this.storageHandler.remove(this.userInfoKey);
        }
        else {
            this.storageHandler.set(this.userInfoKey, JSON.stringify(userInfo));
        }
        this.eventHandler.pushMessage({
            type: this.messageTypes.userChanged
        }, {
            user: this.getUser()
        });
    };
    return UserHandler;
}());
UserHandler = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IEventHandler)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IStorageHandler)),
    __param(2, inversify_1.inject(contracts_1.TYPES.IBaasicApp)),
    __metadata("design:paramtypes", [Object, Object, Object])
], UserHandler);
exports.UserHandler = UserHandler;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var httpApi_1 = __webpack_require__(3);
var contracts_1 = __webpack_require__(1);
var common_1 = __webpack_require__(2);
var BaasicApiClient = (function () {
    function BaasicApiClient(appOptions, httpClient, tokenHandler, halParser) {
        this.appOptions = appOptions;
        this.httpClient = httpClient;
        this.tokenHandler = tokenHandler;
        this.halParser = halParser;
        this.wwwAuthenticateTokenizer = (function () {
            var ws = '(?:(?:\\r\\n)?[ \\t])+', token = '(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2E\\x30-\\x39\\x3F\\x41-\\x5A\\x5E-\\x7A\\x7C\\x7E]+)', quotedString = '"(?:[\\x00-\\x0B\\x0D-\\x21\\x23-\\x5B\\\\x5D-\\x7F]|' + ws + '|\\\\[\\x00-\\x7F])*"';
            return new RegExp(token + '(?:=(?:' + quotedString + '|' + token + '))?', 'g');
        })();
        this.createPromise = httpClient.createPromise;
    }
    BaasicApiClient.prototype.request = function (request) {
        var _this = this;
        if (request && request.url) {
            request.url = this.compileUrl(request.url);
        }
        var headers = request.headers || (request.headers = {});
        var authToken = this.tokenHandler.get();
        if (authToken) {
            /*jshint camelcase: false */
            headers["AUTHORIZATION"] = "BEARER " + authToken.token;
        }
        if (request.data && !this.headerExists(headers, 'Content-Type')) {
            headers['Content-Type'] = 'application/json; charset=UTF-8';
        }
        if (this.appOptions.enableHALJSON) {
            if (!this.headerExists(headers, 'Accept')) {
                headers["Accept"] = 'application/hal+json; charset=UTF-8';
            }
        }
        var self = this;
        var promise = this.httpClient.request(request);
        promise.then(function (data) {
            var contentType = self.getHeader(data.headers, 'Content-Type');
            if (contentType && contentType.toLowerCase().indexOf('application/hal+json') !== -1) {
                data.data = self.halParser.parse(data.data);
            }
            return data;
        }, function (response) {
            var wwwAuthenticate = _this.parseWWWAuthenticateHeader(response.headers['WWW-Authenticate']);
            if (wwwAuthenticate) {
                if (wwwAuthenticate.scheme.toLowerCase() === 'bearer') {
                    var details = wwwAuthenticate.details;
                    if (details) {
                        if (details.error) {
                            switch (details.error) {
                                case 'invalid_token':
                                    _this.tokenHandler.store(null);
                                    break;
                                case 'invalid_request':
                                    /*jshint camelcase: false */
                                    switch (details.error_description) {
                                        /*jshint camelcase: true */
                                        case 'Missing or invalid session':
                                            _this.tokenHandler.store(null);
                                            break;
                                    }
                                    break;
                            }
                        }
                    }
                }
            }
            return response;
        });
        return promise;
    };
    BaasicApiClient.prototype.get = function (url, headers) {
        return this.internalRequest(url, "GET", undefined, headers);
    };
    BaasicApiClient.prototype.delete = function (url, headers, data) {
        return this.internalRequest(url, "DELETE", data, headers);
    };
    BaasicApiClient.prototype.post = function (url, data, headers) {
        return this.internalRequest(url, "POST", data, headers);
    };
    BaasicApiClient.prototype.put = function (url, data, headers) {
        return this.internalRequest(url, "PUT", data, headers);
    };
    BaasicApiClient.prototype.patch = function (url, data, headers) {
        return this.internalRequest(url, "PATCH", data, headers);
    };
    BaasicApiClient.prototype.compileUrl = function (url) {
        if (typeof url === "string") {
            var rootUrl = this.appOptions.apiUrl.toString();
            if (url.indexOf(rootUrl) < 0) {
                return new URL("" + rootUrl + url);
            }
        }
        return url;
    };
    BaasicApiClient.prototype.internalRequest = function (url, method, data, headers) {
        url = this.compileUrl(url);
        var request = {
            url: url,
            method: method
        };
        if (data) {
            request.data = data;
        }
        if (headers) {
            request.headers = headers;
        }
        return this.request(request);
    };
    BaasicApiClient.prototype.unquote = function (quotedString) {
        return quotedString.substr(1, quotedString.length - 2).replace(/(?:(?:\r\n)?[ \t])+/g, ' ');
    };
    BaasicApiClient.prototype.headerExists = function (headers, key) {
        return headers && (headers.hasOwnProperty(key) || headers.hasOwnProperty(key.toLowerCase()));
    };
    BaasicApiClient.prototype.getHeader = function (headers, key) {
        if (headers) {
            return headers[key] || headers[key.toLowerCase()];
        }
        return undefined;
    };
    BaasicApiClient.prototype.parseWWWAuthenticateHeader = function (value) {
        if (value) {
            var tokens = value.match(this.wwwAuthenticateTokenizer);
            if (tokens && tokens.length > 0) {
                var wwwAutheniticate = {
                    scheme: tokens[0]
                };
                if (tokens.length > 1) {
                    var details = {};
                    for (var i = 1, l = tokens.length; i < l; i++) {
                        var values = tokens[i].split('=');
                        details[values[0]] = this.unquote(values[1]);
                    }
                    wwwAutheniticate.details = details;
                }
                return wwwAutheniticate;
            }
        }
    };
    return BaasicApiClient;
}());
BaasicApiClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.IHttpClient)),
    __param(2, inversify_1.inject(contracts_1.TYPES.ITokenHandler)),
    __param(3, inversify_1.inject(common_1.TYPES.IHALParser)),
    __metadata("design:paramtypes", [Object, Object, Object, Object])
], BaasicApiClient);
exports.BaasicApiClient = BaasicApiClient;
;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var TYPES = {
    BaasicApiClient: Symbol("BaasicApiClient"),
    IHttpClient: Symbol("IHttpClient")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicApiClient).to(httpApi_1.BaasicApiClient);
});
exports.diModule = diModule;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(79));


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var JQueryHttpClient = (function () {
    function JQueryHttpClient() {
    }
    JQueryHttpClient.prototype.request = function (request) {
        var jqueryParams = {
            method: request.method,
            xhrFields: {
                withCredentials: true
            }
        };
        if (request.headers) {
            jqueryParams.headers = request.headers;
        }
        if (request.data) {
            jqueryParams.data = request.data;
        }
        return $.ajax(request.url.toString(), jqueryParams)
            .then(function (data, textStatus, jqXHR) {
            return {
                request: request,
                statusText: textStatus,
                statusCode: jqXHR.status,
                headers: parseHeaders(jqXHR.getAllResponseHeaders()),
                data: data
            };
        }, function (jqXHR, textStatus, errorThrown) {
            return {
                request: request,
                statusText: textStatus,
                statusCode: jqXHR.status,
                headers: parseHeaders(jqXHR.getAllResponseHeaders()),
                data: jqXHR.responseText || jqXHR.responseXML
            };
        });
    };
    JQueryHttpClient.prototype.createPromise = function (deferFn) {
        var deferred = $.Deferred();
        deferFn(deferred.resolve, deferred.reject);
        return deferred.promise();
    };
    return JQueryHttpClient;
}());
JQueryHttpClient = __decorate([
    inversify_1.injectable()
], JQueryHttpClient);
exports.JQueryHttpClient = JQueryHttpClient;
function parseHeaders(headers) {
    var result = {};
    if (headers) {
        var arrayOfLines = headers.match(/[^\r\n]+/g);
        for (var i = 0; i < arrayOfLines.length; i++) {
            var line = arrayOfLines[i];
            var keyValue = line.split(':');
            if (keyValue.length === 2) {
                result[keyValue[0]] = keyValue[1].trim();
            }
            else if (keyValue.length === 1) {
                result[keyValue[0]] = null;
            }
        }
    }
    return result;
}


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicApplicationSettingsClient
 * @description Baasic Application Settings Client provides an easy way to consume Baasic Application Settings REST API end-points. In order to obtain needed routes `baasicApplicationSettingsClient` uses `baasicApplicationSettingsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var applicationSettings_1 = __webpack_require__(25);
var BaasicApplicationSettingsClient = (function () {
    function BaasicApplicationSettingsClient(baasicApplicationSettingsRouteDefinition, baasicApiClient) {
        this.baasicApplicationSettingsRouteDefinition = baasicApplicationSettingsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicApplicationSettingsClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicApplicationSettingsRouteDefinition`.
         * @method
         * @example BaasicApplicationSettingsClient.routeDefinition.get(options)
         **/
        get: function () {
            return this.baasicApplicationSettingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the application settings resource.
     * @method
     * @param options Query resource options object.
     * @example baasicApplicationSettingsClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicApplicationSettingsClient.prototype.get = function (options) {
        return this.baasicApiClient.get(this.baasicApplicationSettingsRouteDefinition.get(options));
    };
    /**
     * Returns a promise that is resolved once the update application settings action has been performed. This action updates the application setting resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't use `baasicApplicationSettingsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(appSettings);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An application object used to update application settings of the specified application resource.
     * @example // appSettings is a resource previously fetched using get action.
                    appSettings.allowAnyOrigin = true;
                    baasicApplicationSettingsClient.update(appSettings)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicApplicationSettingsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicApplicationSettingsRouteDefinition.update(data), this.baasicApplicationSettingsRouteDefinition.updateParams(data));
    };
    return BaasicApplicationSettingsClient;
}());
BaasicApplicationSettingsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(applicationSettings_1.TYPES.BaasicApplicationSettingsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [applicationSettings_1.BaasicApplicationSettingsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicApplicationSettingsClient);
exports.BaasicApplicationSettingsClient = BaasicApplicationSettingsClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicApplicationSettingsRouteDefinition
 * @description Baasic Application Settings Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Application Settings Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicApplicationSettingsRouteDefinition = (function (_super) {
    __extends(BaasicApplicationSettingsRouteDefinition, _super);
    function BaasicApplicationSettingsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'applications/{?embed,fields}';
        _this.updateRoute = 'applications/';
        return _this;
    }
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @param options Query resource options object.
     * @example baasicApplicationSettingsRouteDefinition.get();
     **/
    BaasicApplicationSettingsRouteDefinition.prototype.get = function (options) {
        return _super.prototype.baseGet.call(this, this.getRoute, undefined, options);
    };
    /**
     * Parses update route; this route doesn't expose any properties.
     * @method
     * @param data An application object used to update application settings of the specified application resource.
     * @example baasicApplicationSettingsRouteDefinition.update();
     **/
    BaasicApplicationSettingsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicApplicationSettingsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicApplicationSettingsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicApplicationSettingsRouteDefinition);
exports.BaasicApplicationSettingsRouteDefinition = BaasicApplicationSettingsRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var applicationSettings_1 = __webpack_require__(25);
var TYPES = {
    BaasicApplicationSettingsClient: Symbol("BaasicApplicationSettingsClient"),
    BaasicApplicationSettingsRouteDefinition: Symbol("BaasicApplicationSettingsRouteDefinition")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicApplicationSettingsRouteDefinition).to(applicationSettings_1.BaasicApplicationSettingsRouteDefinition);
    bind(TYPES.BaasicApplicationSettingsClient).to(applicationSettings_1.BaasicApplicationSettingsClient);
});
exports.diModule = diModule;


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ALPHABET = {
    a: /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/ig,
    aa: /[\uA733]/ig,
    ae: /[\u00E6\u01FD\u01E3]/ig,
    ao: /[\uA735]/ig,
    au: /[\uA737]/ig,
    av: /[\uA739\uA73B]/ig,
    ay: /[\uA73D]/ig,
    b: /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/ig,
    c: /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/ig,
    d: /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/ig,
    dz: /[\u01F3\u01C6]/ig,
    e: /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/ig,
    f: /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/ig,
    g: /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/ig,
    h: /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/ig,
    hv: /[\u0195]/ig,
    i: /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/ig,
    j: /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/ig,
    k: /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/ig,
    l: /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/ig,
    lj: /[\u01C9]/ig,
    m: /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/ig,
    n: /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/ig,
    nj: /[\u01CC]/ig,
    o: /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/ig,
    oi: /[\u01A3]/ig,
    ou: /[\u0223]/ig,
    oo: /[\uA74F]/ig,
    p: /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/ig,
    q: /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/ig,
    r: /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/ig,
    s: /[\u0073\u24E2\uFF53\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/ig,
    ss: /[\u00DF\u1E9E]/ig,
    t: /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/ig,
    tz: /[\uA729]/ig,
    u: /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/ig,
    v: /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/ig,
    vy: /[\uA761]/ig,
    w: /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/ig,
    x: /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/ig,
    y: /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/ig,
    z: /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/ig,
    '': /[\u0300\u0301\u0302\u0303\u0308]/ig
};
exports.ALPHABET = ALPHABET;


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceCommentsClient
 * @description Baasic Article Instance Comments Client provides an easy way to consume Baasic Article Comments REST API end-points. `baasicArticleCommentsClient` functions enable performing standard CRUD operations directly on article comment resources, whereas the `baasicArticleClient` functions allow management between article and article comments. In order to obtain needed routes `baasicArticleCommentsClient` uses `baasicArticleCommentsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceCommentsClient = (function () {
    function BaasicArticleInstanceCommentsClient(baasicArticleInstanceCommentsRouteDefinition, baasicArticleInstanceCommentsRepliesClient, baasicApiClient) {
        this.baasicArticleInstanceCommentsRouteDefinition = baasicArticleInstanceCommentsRouteDefinition;
        this.baasicArticleInstanceCommentsRepliesClient = baasicArticleInstanceCommentsRepliesClient;
        this.baasicApiClient = baasicApiClient;
        /**
       * Contains a reference to valid list of article comment states. It returns an object containing all article comment states.
       * @method
       * @example baasicArticleInstanceCommentsClient.statuses.approved;
       **/
        this.statuses = article_1.CommentStatus;
    }
    Object.defineProperty(BaasicArticleInstanceCommentsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleInstanceCommentsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleInstanceCommentsClient.prototype, "replies", {
        get: function () {
            return this.baasicArticleInstanceCommentsRepliesClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the approve article comment action has been performed. This action sets the state of an article comment to "approved". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-approve').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @param options Notification configuration used to control the article comment recourse access when managing notification distribution.
     * @returns A promise that is resolved once the approve article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleInstanceCommentsClient.approve(articleComment, commentOptions)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentsClient.prototype.approve = function (data, options) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentsRouteDefinition.approve(data), this.baasicArticleInstanceCommentsRouteDefinition.createParams(options));
    };
    /**
     * Returns a promise that is resolved once the unapprove article comment action has been performed. This action sets the state of an article comment to "unapproved". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-unapprove').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the unapprove article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleInstanceCommentsClient.unapprove(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentsClient.prototype.unapprove = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentsRouteDefinition.unapprove(data), this.baasicArticleInstanceCommentsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the create article comment action has been performed; this action creates a new comment for an article.
     * @method
     * @param data An article comment object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create article comment action has been performed.
     * @example baasicArticleInstanceCommentsClient.create({
                        articleId : '<article-id>',
                        comment : <comment>,
                        userId : '<user-id>' })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleInstanceCommentsClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicArticleInstanceCommentsRouteDefinition.create(data), this.baasicArticleInstanceCommentsRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of article comment resources matching the given criteria.
     * @method
     * @param articleId Article slug or id which uniquely identifies article whose comment resources need to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicArticleInstanceCommentsClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .success(function (collection) {
                    // perform success action here
                })
                .error(function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleInstanceCommentsClient.prototype.find = function (articleId, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceCommentsRouteDefinition.find(articleId, options));
    };
    /**
     * Returns a promise that is resolved once the flag article comment action has been performed. This action sets the state of an article comment to "flagged". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-flag').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the flag article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleInstanceCommentsClient.flag(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentsClient.prototype.flag = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentsRouteDefinition.flag(data), this.baasicArticleInstanceCommentsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unflag article comment action has been performed. This action removes the "flagged" comment mark. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-unflag').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the unflag article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleInstanceCommentsClient.unflag(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentsClient.prototype.unflag = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentsRouteDefinition.unflag(data), this.baasicArticleInstanceCommentsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified article comment resource.
     * @method
     * @param articleId Article slug or id which uniquely identifies article whose comment resource needs to be retrieved.
     * @param commentId Id which identifies article comment resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicArticleInstanceCommentsClient.get('<article-id>', '<comment-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                       // perform error handling here
                   });
    **/
    BaasicArticleInstanceCommentsClient.prototype.get = function (articleId, commentId, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceCommentsRouteDefinition.get(articleId, commentId, options));
    };
    /**
     * Returns a promise that is resolved once the remove article comment action has been performed. If the action is successfully completed, the article comment resource and its replies will be permanently removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     ```
     let params = modelMapper.removeParams(articleComment);
     let uri = params['model'].links('delete').href;
     ```
     * @method
     * @param data An article comment object used to delete specified article comment resource.
     * @returns A promise that is resolved once the remove article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                       baasicArticleInstanceCommentsClient.remove(articleComment)
                           .then(function (data) {
                               // perform success action here
                           },
                            function (response, status, headers, config) {
                               // perform error handling here
                           });
    **/
    BaasicArticleInstanceCommentsClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceCommentsRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the removeAll article comment action has been performed. This action will remove all comments and comment replies from an article if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleInstanceRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(articleComment);
     * let uri = params['model'].links('delete-comments-by-article').href;
     * ```
     * @method
     * @param data An article object used to delete specified article comment resource.
     * @returns A promise that is resolved once the removeAll article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleInstanceCommentsClient.removeAll(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentsClient.prototype.removeAll = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceCommentsRouteDefinition.deleteAll(data));
    };
    /**
     * Returns a promise that is resolved once the report article comment action has been performed. This action sets the state of an article comment to "reported". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-report').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @param options Notification configuration used to control the article comment recourse access when managing notification distribution.
     * @returns A promise that is resolved once the report article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleInstanceCommentsClient.report(articleComment, commentOptions)
                        .success(function (data) {
                            // perform success action here
                        })
                        .error(function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentsClient.prototype.report = function (data, options) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentsRouteDefinition.report(data), this.baasicArticleInstanceCommentsRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the unreport article comment action has been performed. This action removes the "reported" comment mark. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-unreport').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the unreport article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleInstanceCommentsClient.unreport(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentsClient.prototype.unreport = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentsRouteDefinition.unreport(data), this.baasicArticleInstanceCommentsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the update article comment action has been performed; this action updates an article comment resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An article comments object used to update specified article comment resource.
     * @returns A promise that is resolved once the update article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleInstanceCommentsClient.update(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentsRouteDefinition.update(data), this.baasicArticleInstanceCommentsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the mark as spam article comment action has been performed. This action sets the state of an article comment to "spam". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleInstanceRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-spam').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the mark as spam article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleInstanceClient.spam(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentsClient.prototype.spam = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentsRouteDefinition.spam(data), this.baasicArticleInstanceCommentsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unspam article comment action has been performed. This action removes the "spam" comment state. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleInstanceRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-unspam').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the unspam article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                        baasicArticleInstanceClient.unspam(articleComment)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicArticleInstanceCommentsClient.prototype.unspam = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentsRouteDefinition.unspam(data), this.baasicArticleInstanceCommentsRouteDefinition.updateParams(data));
    };
    return BaasicArticleInstanceCommentsClient;
}());
BaasicArticleInstanceCommentsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceCommentsRouteDefinition)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleCommentRepliesClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleInstanceCommentsRouteDefinition,
        article_1.BaasicArticleInstanceCommentRepliesClient,
        httpApi_1.BaasicApiClient])
], BaasicArticleInstanceCommentsClient);
exports.BaasicArticleInstanceCommentsClient = BaasicArticleInstanceCommentsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceCommentRepliesClient
 * @description Baasic Article Instance Comment Replies Client provides an easy way to consume Baasic Article Comment Replies REST API end-points. `baasicArticleCommentRepliesService` functions enable performing standard CRUD operations directly on article comment reply resources, whereas the `baasicArticleClient` functions allow management between article and article comment reply. In order to obtain needed routes `baasicArticleCommentRepliesService` uses `baasicArticleCommentRepliesRouteDefinition`.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceCommentRepliesClient = (function () {
    function BaasicArticleInstanceCommentRepliesClient(baasicArticleInstanceCommentRepliesRouteDefinition, baasicApiClient) {
        this.baasicArticleInstanceCommentRepliesRouteDefinition = baasicArticleInstanceCommentRepliesRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        /**
         * Contains a reference to valid list of article comment reply states. It returns an object containing all article comment reply states.
         * @method
         * @example baasicArticleCommentRepliesClient.statuses.approved;
         **/
        this.statuses = article_1.CommentStatus;
    }
    Object.defineProperty(BaasicArticleInstanceCommentRepliesClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicArticleCommentRepliesRouteDefinition`.
         * @method
         * @example baasicArticleInstanceCommentRepliesClient.routeDefinition.get();
         **/
        get: function () {
            return this.baasicArticleInstanceCommentRepliesRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the approve article comment reply action has been performed. This action sets the state of an article comment reply to "approved". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-approve').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @param options Notification configuration used to control the article comment recourse access when managing notification distribution.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleInstanceCommentRepliesClient.approve(articleCommentReply, commentOptions)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.approve = function (data, options) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentRepliesRouteDefinition.approve(data), this.baasicArticleInstanceCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unapprove article comment reply action has been performed. This action sets the state of an article comment reply to "unapproved". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-unapprove').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the unapprove article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleInstanceCommentRepliesClient.unapprove(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.unapprove = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentRepliesRouteDefinition.unapprove(data), this.baasicArticleInstanceCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the create article comment reply action has been performed; this action creates a new comment reply for an article.
     * @method
     * @param articleId Article id which uniquely identifies article that needs to be updated with new comment reply resource.
     * @param data An article comment reply object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create article comment reply action has been performed.
     * @example baasicArticleInstanceCommentRepliesClient.create('<article-id>', {
                    commentId : '<comment-id>',
                    comment : <comment>,
                    userId : '<user-id>' })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.create = function (articleId, data) {
        return this.baasicApiClient.post(this.baasicArticleInstanceCommentRepliesRouteDefinition.create(articleId, data), this.baasicArticleInstanceCommentRepliesRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of article comment reply resources matching the given criteria.
     * @method
     * @param articleId Article id which uniquely identifies article whose comment reply resources need to be retrieved.
     * @param commentId Comment id which uniquely identifies comment whose reply resources need to be retrieved.
     * @param options Query resource options.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicArticleInstanceCommentRepliesClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.find = function (articleId, commentId, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceCommentRepliesRouteDefinition.find(articleId, commentId, options));
    };
    /**
     * Returns a promise that is resolved once the flag article comment reply action has been performed. This action sets the state of an article comment reply to "flagged". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-flag').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the flag article comment reply action has been performed.
     * @example     // articleCommentReply is a resource previously fetched using get action.
                        baasicArticleInstanceCommentRepliesClient.flag(articleCommentReply)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                // perform error handling here
                            });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.flag = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentRepliesRouteDefinition.flag(data), this.baasicArticleInstanceCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unflag article comment reply action has been performed. This action removes the "flagged" comment reply state. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-unflag').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the unflag article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleInstanceCommentRepliesClient.unflag(articleCommentReply)
                        .success(function (data) {
                            // perform success action here
                        }).error(function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.unflag = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentRepliesRouteDefinition.unflag(data), this.baasicArticleInstanceCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified article comment reply resource.
     * @method
     * @param articleId Article id which uniquely identifies article whose comment reply resource needs to be retrieved.
     * @param commentId Comment id which uniquely identifies comment whose reply resource needs to be retrieved.
     * @param replyId Id which uniquely identifies article comment reply resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicArticleInstanceCommentRepliesClient.get('<comment-reply-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.get = function (articleId, commentId, replyId, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceCommentRepliesRouteDefinition.get(articleId, commentId, replyId, options));
    };
    /**
     * Returns a promise that is resolved once the remove article comment reply action has been performed. If the action is successfully completed, the article comment reply resource will be permanently removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = baasicApiClient.removeParams(articleCommentReply);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An article comment object used to delete specified article comment reply resource.
     * @returns A promise that is resolved once the remove article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleInstanceCommentRepliesClient.remove(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceCommentRepliesRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the removeAll article comment reply action has been performed. This action will remove all comment replies from an article comment if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleInstanceCommentsRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(articleCommentReply);
     * let uri = params['model'].links('delete-comments-by-article').href;
     * ```
     * @method
     * @param data Article object used to delete all article comments in the system.
     * @returns a promise that is resolved once the removeAll article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleInstanceCommentRepliesClient.removeAll(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.removeAll = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceCommentRepliesRouteDefinition.deleteAll(data));
    };
    /**
     * Returns a promise that is resolved once the report article comment reply action has been performed. This action sets the state of an article comment reply to "reported". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-report').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @param options Notification configuration used to control the article comment recourse access when managing notification distribution.
     * @returns A promise that is resolved once the report article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleInstanceCommentRepliesClient.report(articleCommentReply, commentOptions)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.report = function (data, options) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentRepliesRouteDefinition.report(data), this.baasicArticleInstanceCommentRepliesRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the unreport article comment reply action has been performed. This action removes the "reported" comment reply state. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-unreport').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the unreport article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleInstanceCommentRepliesClient.unreport(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.unreport = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentRepliesRouteDefinition.unreport(data), this.baasicArticleInstanceCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the mark as spam article comment reply action has been performed. This action sets the state of an article comment reply to "spam". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-spam').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the mark as spam article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleInstanceCommentRepliesClient.spam(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.spam = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentRepliesRouteDefinition.spam(data), this.baasicArticleInstanceCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unspam article comment reply action has been performed. This action removes the "spam" comment reply state. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-unspam').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns a promise that is resolved once the unspam article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                      baasicArticleInstanceCommentRepliesClient.unspam(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.unspam = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentRepliesRouteDefinition.unspam(data), this.baasicArticleInstanceCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the update article comment reply action has been performed; this action updates an article comment reply resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An article comment object used to update specified article comment reply resource.
     * @returns A promise that is resolved once the update article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleInstanceCommentRepliesClient.update(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceCommentRepliesClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceCommentRepliesRouteDefinition.update(data), this.baasicArticleInstanceCommentRepliesRouteDefinition.updateParams(data));
    };
    return BaasicArticleInstanceCommentRepliesClient;
}());
BaasicArticleInstanceCommentRepliesClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceCommentRepliesRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleInstanceCommentRepliesRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleInstanceCommentRepliesClient);
exports.BaasicArticleInstanceCommentRepliesClient = BaasicArticleInstanceCommentRepliesClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceCommentRepliesRouteDefinition
 * @description Baasic Article Instance Comment Replies Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Instance Comment Replies Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleInstanceCommentRepliesRouteDefinition = (function (_super) {
    __extends(BaasicArticleInstanceCommentRepliesRouteDefinition, _super);
    function BaasicArticleInstanceCommentRepliesRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'articles/{articleId}/comments/{commentId}/replies/{?searchQuery,statuses,page,rpp,sort,embed,fields}';
        _this.getRoute = 'articles/{articleId}/comments/{commentId}/replies/{id}/{?embed,fields}';
        _this.createRoute = 'articles/{articleId}/comments/{commentId}/replies';
        _this.updateRoute = 'articles/{articleId}/comments/{id}';
        _this.approveRoute = 'articles/{articleId}/comments/{commentId}/replies/{id}/approve';
        _this.unapproveRoute = '/articles/{articleId}/comments/{commentId}/replies/{id}/unapprove';
        _this.flagRoute = 'articles/{articleId}/comments/{commentId}/replies/{id}/flag';
        _this.unflagRoute = 'articles/{articleId}/comments/{commentId}/replies/{id}/unflag';
        _this.reportRoute = 'articles/{articleId}/comments/{commentId}/replies/{id}/report';
        _this.deleteRoute = 'articles/{articleId}/comments/{id}';
        _this.deleteAllRoute = 'articles/{articleId}/comments';
        _this.unreportRoute = 'articles/{articleId}/comments/{commentId}/replies/{id}/unreport';
        _this.spamRoute = 'articles/{articleId}/comments/{commentId}/replies/{id}/spam';
        _this.unspamRoute = '/articles/{articleId}/comments/{commentId}/replies/{id}/unspam';
        return _this;
    }
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify article comment reply resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article comment reply subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article comment reply property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * - `statuses` - Comma separated list of article comment reply states that specify where search should be done (Allowed states: Approved, Spam, Reported, Flagged and UnApproved).
     * @method
     * @param articleId Article id which uniquely identifies article whose comment reply resources need to be retrieved.
     * @param commentId Comment id which uniquely identifies comment whose reply resources need to be retrieved.
     * @param options Query resource options.
     * @example baasicArticleCommentRepliesRouteDefinition.find({ searchQuery: '<search-phrase>' });
     **/
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.find = function (articleId, commentId, options) {
        var params = this.modelMapper.findParams(options);
        params.articleId = articleId;
        params.commentId = commentId;
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route which can be expanded with additional options. Supported items are:
     * - `id` - Id which uniquely identifies article comment reply resource that needs to be retrieved.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicArticleCommentRepliesRouteDefinition.get({ id: '<comment-reply-id>' });
     **/
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.get = function (articleId, commentId, replyId, options) {
        var params = this.utility.extend({}, options);
        params.articleId = articleId;
        params.commentId = commentId;
        return _super.prototype.baseGet.call(this, this.getRoute, replyId, params);
    };
    /**
     * Parses create article comment reply route; this URI template does not support any additional items.
     * @method
     * @example baasicArticleCommentRepliesRouteDefinition.create(data);
     **/
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.create = function (articleId, data) {
        var params = this.utility.extend({}, data);
        params.articleId = articleId;
        return _super.prototype.baseCreate.call(this, this.createRoute, params);
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.approve = function (data) {
        return _super.prototype.baseUpdate.call(this, this.approveRoute, data, undefined, 'comment-approve');
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.unapprove = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unapproveRoute, data, undefined, 'comment-unapprove');
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.flag = function (data) {
        return _super.prototype.baseUpdate.call(this, this.flagRoute, data, undefined, 'comment-flag');
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.unflag = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unflagRoute, data, undefined, 'comment-unflag');
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.report = function (data) {
        return _super.prototype.baseUpdate.call(this, this.reportRoute, data, undefined, 'comment-report');
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.deleteAll = function (data) {
        return _super.prototype.baseUpdate.call(this, this.deleteAllRoute, data, undefined, 'delete-comments-by-article');
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.unreport = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unreportRoute, data, undefined, 'comment-unreport');
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.spam = function (data) {
        return _super.prototype.baseUpdate.call(this, this.spamRoute, data, undefined, 'comment-spam');
    };
    BaasicArticleInstanceCommentRepliesRouteDefinition.prototype.unspam = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unspamRoute, data, undefined, 'comment-unspam');
    };
    return BaasicArticleInstanceCommentRepliesRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleInstanceCommentRepliesRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleInstanceCommentRepliesRouteDefinition);
exports.BaasicArticleInstanceCommentRepliesRouteDefinition = BaasicArticleInstanceCommentRepliesRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceCommentsRouteDefinition
 * @description Baasic Article Instance Comments Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Instance Comments Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceCommentsRouteDefinition = (function (_super) {
    __extends(BaasicArticleInstanceCommentsRouteDefinition, _super);
    function BaasicArticleInstanceCommentsRouteDefinition(baasicArticleInstanceCommentRepliesRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicArticleInstanceCommentRepliesRouteDefinition = baasicArticleInstanceCommentRepliesRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'articles/{articleId}/comments/{?searchQuery,statuses,page,rpp,sort,embed,fields}';
        _this.getRoute = 'articles/{articleId}/comments/{id}/{?embed,fields}';
        _this.createRoute = 'articles/{articleId}/comments/';
        _this.updateRoute = 'articles/{articleId}/comments/{id}';
        _this.deleteRoute = 'articles/{articleId}/comments/{id}';
        _this.deleteAllRoute = 'articles/{articleId}/comments/{id}';
        _this.approveRoute = 'articles/{articleId}/comments/{id}/approve';
        _this.unapproveRoute = 'articles/{articleId}/comments/{id}/unapprove';
        _this.flagRoute = 'articles/{articleId}/comments/{id}/flag';
        _this.unflagRoute = 'articles/{articleId}/comments/{id}/unflag';
        _this.reportRoute = 'articles/{articleId}/comments/{id}/report';
        _this.unreportRoute = 'articles/{articleId}/comments/{id}/unreport';
        _this.spamRoute = 'articles/{articleId}/comments/{id}/spam';
        _this.unspamRoute = 'articles/{articleId}/comments/{id}/unspam';
        return _this;
    }
    Object.defineProperty(BaasicArticleInstanceCommentsRouteDefinition.prototype, "replies", {
        get: function () {
            return this.baasicArticleInstanceCommentRepliesRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify article comment resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article comment subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article comment property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * - `statuses` - Comma separated list of article comment states that specify where search should be done (Allowed states: Approved, Spam, Reported, Flagged and UnApproved).
     * @method
     * @param articleId Article slug or id which uniquely identifies article whose comment resources need to be retrieved.
     * @param options Query resource options object.
     * @example baasicArticleInstanceCommentsRouteDefinition.find({ searchQuery: '<search-phrase>' });
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.find = function (articleId, options) {
        var params = this.modelMapper.findParams(options);
        params.articleId = articleId;
        return _super.prototype.baseCreate.call(this, this.findRoute, params);
    };
    /**
     * Parses get route which can be expanded with additional options. Supported items are:
     * - `id` - Id which uniquely identifies article comment resource that needs to be retrieved.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param articleId Article slug or id which uniquely identifies article whose comment resource needs to be retrieved.
     * @param commentId Id which identifies article comment resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @example baasicArticleInstanceCommentsRouteDefinition.get().expand({ id: '<comment-id>' });
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.get = function (articleId, commentId, options) {
        var params = this.utility.extend({}, options);
        params.articleId = articleId;
        params.id = commentId;
        return _super.prototype.baseGet.call(this, this.getRoute, params);
    };
    /**
     * Parses create route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comment object that needs to be inserted into the system.
     * @example baasicArticleInstanceCommentsRouteDefinition.create(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses update route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comments object used to update specified article comment resource.
     * @example baasicArticleInstanceCommentsRouteDefinition.update(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comments object used to delete specified article comment resource.
     * @example baasicArticleInstanceCommentsRouteDefinition.delete(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
     * Parses delete all route; this URI template doesnt support any additional options.
     * @method
     * @param data An article object used to delete specified article comment resource.
     * @example baasicArticleInstanceCommentsRouteDefinition.deleteAll(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.deleteAll = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteAllRoute, data, undefined, 'delete-comments-by-article');
    };
    /**
     * Parses approve route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comment object.
     * @example baasicArticleInstanceCommentsRouteDefinition.approve(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.approve = function (data) {
        return _super.prototype.baseUpdate.call(this, this.approveRoute, data, undefined, 'comment-approve');
    };
    /**
     * Parses unapprove route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comment object.
     * @example baasicArticleInstanceCommentsRouteDefinition.unapprove(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.unapprove = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unapproveRoute, data, undefined, 'comment-unapprove');
    };
    /**
     * Parses flag route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comment object.
     * @example baasicArticleInstanceCommentsRouteDefinition.flag(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.flag = function (data) {
        return _super.prototype.baseUpdate.call(this, this.flagRoute, data, undefined, 'comment-flag');
    };
    /**
     * Parses unflag route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comment object.
     * @example baasicArticleInstanceCommentsRouteDefinition.unflag(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.unflag = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unflagRoute, data, undefined, 'comment-unflag');
    };
    /**
     * Parses report route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comment object.
     * @example baasicArticleInstanceCommentsRouteDefinition.report(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.report = function (data) {
        return _super.prototype.baseUpdate.call(this, this.reportRoute, data, undefined, 'comment-report');
    };
    /**
     * Parses unreport route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comment object.
     * @example baasicArticleInstanceCommentsRouteDefinition.unreport(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.unreport = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unreportRoute, data, undefined, 'comment-unreport');
    };
    /**
     * Parses spam route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comment object.
     * @example baasicArticleInstanceCommentsRouteDefinition.spam(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.spam = function (data) {
        return _super.prototype.baseUpdate.call(this, this.spamRoute, data, undefined, 'comment-spam');
    };
    /**
     * Parses unspam route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comment object.
     * @example baasicArticleInstanceCommentsRouteDefinition.unspam(data);
     **/
    BaasicArticleInstanceCommentsRouteDefinition.prototype.unspam = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unspamRoute, data, undefined, 'comment-unspam');
    };
    return BaasicArticleInstanceCommentsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleInstanceCommentsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceCommentRepliesRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [article_1.BaasicArticleInstanceCommentRepliesRouteDefinition, Object])
], BaasicArticleInstanceCommentsRouteDefinition);
exports.BaasicArticleInstanceCommentsRouteDefinition = BaasicArticleInstanceCommentsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(86));
__export(__webpack_require__(85));
__export(__webpack_require__(87));
__export(__webpack_require__(84));


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceFilesBatchClient
 * @description Baasic Article Instance Files Batch Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceFilesBatchClient = (function () {
    function BaasicArticleInstanceFilesBatchClient(baasicArticleInstanceFilesBatchRouteDefinition, baasicApiClient) {
        this.baasicArticleInstanceFilesBatchRouteDefinition = baasicArticleInstanceFilesBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleInstanceFilesBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleInstanceFilesBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the unlink action has been performed. This action will remove file resources from the system if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will remove just derived resource. Otherwise, specified file and all its accompanying derived resources will be removed from the system.
     * @method
     * @example // Remove original file resources
                   baasicArticleInstanceFilesBatchClient.unlink([{ id: '<file-id>' }])
                       .then(function (data) {
                           // perform success action here
                       },
                        function (response, status, headers, config) {
                           // perform error handling here
                       });
               // Remove derived file resources
                   baasicArticleInstanceFilesBatchClient.unlink([{ id: '<file-id>', fileFormat: { width: <width>, height: <height> } }])
                       .then(function (data) {
                           // perform success action here
                       },
                        function (response, status, headers, config) {
                           // perform error handling here
                       });
    **/
    BaasicArticleInstanceFilesBatchClient.prototype.unlink = function (articleId, data) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceFilesBatchRouteDefinition.unlink(articleId), undefined, data);
    };
    /**
     * Returns a promise that is resolved once the update action has been performed; this action updates specified file resources.
     * @method batch.update
     * @example baasicArticleInstanceFilesClient.batch.update(files)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleInstanceFilesBatchClient.prototype.update = function (articleId, data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceFilesBatchRouteDefinition.update(articleId), this.baasicArticleInstanceFilesBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the link action has been performed; this action links file resources from other modules into the Files module (For example: file resources from the Media Vault module can be linked directly into the Files module).
     * @method batch.link
     * @example baasicArticleInstanceFilesClient.batch.link(files)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleInstanceFilesBatchClient.prototype.link = function (articleId, data) {
        return this.baasicApiClient.post(this.baasicArticleInstanceFilesBatchRouteDefinition.link(articleId), this.baasicArticleInstanceFilesBatchRouteDefinition.createParams(data));
    };
    return BaasicArticleInstanceFilesBatchClient;
}());
BaasicArticleInstanceFilesBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceFilesBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleInstanceFilesBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleInstanceFilesBatchClient);
exports.BaasicArticleInstanceFilesBatchClient = BaasicArticleInstanceFilesBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceFilesBatchRouteDefinition
 * @description Baasic Article Instance Files Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Files Batch Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleInstanceFilesBatchRouteDefinition = (function (_super) {
    __extends(BaasicArticleInstanceFilesBatchRouteDefinition, _super);
    function BaasicArticleInstanceFilesBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.unlinkRoute = 'articles/{articleId}/files/batch/unlink';
        _this.updateRoute = 'articles/{articleId}/files/batch';
        _this.linkRoute = 'articles/{articleId}/files/batch/link';
        return _this;
    }
    /**
     * Parses unlink route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleInstanceFilesBatchRouteDefinition.unlink(articleId);
     **/
    BaasicArticleInstanceFilesBatchRouteDefinition.prototype.unlink = function (articleId) {
        var params = { articleId: articleId };
        return _super.prototype.baseCreate.call(this, this.unlinkRoute, params);
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleInstanceFilesStreamsRouteDefinition.update(articleId);
     **/
    BaasicArticleInstanceFilesBatchRouteDefinition.prototype.update = function (articleId) {
        var params = { articleId: articleId };
        return _super.prototype.baseCreate.call(this, this.updateRoute, params);
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleInstanceFilesStreamsRouteDefinition.link(articleId);
     **/
    BaasicArticleInstanceFilesBatchRouteDefinition.prototype.link = function (articleId) {
        var params = { articleId: articleId };
        return _super.prototype.baseCreate.call(this, this.linkRoute, params);
    };
    return BaasicArticleInstanceFilesBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleInstanceFilesBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleInstanceFilesBatchRouteDefinition);
exports.BaasicArticleInstanceFilesBatchRouteDefinition = BaasicArticleInstanceFilesBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceFilesClient
 * @description Baasic Article Instance Files Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceFilesClient = (function () {
    function BaasicArticleInstanceFilesClient(baasicArticleInstanceFilesRouteDefinition, baasicArticleInstanceFilesStreamsClient, BaasicArticleInstanceFilesBatchClient, baasicApiClient) {
        this.baasicArticleInstanceFilesRouteDefinition = baasicArticleInstanceFilesRouteDefinition;
        this.baasicArticleInstanceFilesStreamsClient = baasicArticleInstanceFilesStreamsClient;
        this.BaasicArticleInstanceFilesBatchClient = BaasicArticleInstanceFilesBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleInstanceFilesClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleInstanceFilesRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleInstanceFilesClient.prototype, "streams", {
        get: function () {
            return this.baasicArticleInstanceFilesStreamsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleInstanceFilesClient.prototype, "batch", {
        get: function () {
            return this.BaasicArticleInstanceFilesBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of file resources matching the given criteria.
     * @method
     * @example baasicArticleInstanceFilesClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleInstanceFilesClient.prototype.find = function (articleId, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceFilesRouteDefinition.find(articleId, options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns requested file resource.
     * @method
     * @example baasicArticleInstanceFilesClient.get('<file-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                       // perform error handling here
                   });
    **/
    BaasicArticleInstanceFilesClient.prototype.get = function (articleId, id, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceFilesRouteDefinition.get(articleId, id, options));
    };
    /**
     * Returns a promise that is resolved once the unlink action has been performed. This action will remove one or many file resources from the system if successfully completed. Specified file and all its accompanying derived resources will be removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply baasicArticleFilesRouteService route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(fileEntry);
     * let uri = params['model'].links('unlink').href;
     * ```
     * @method
     * @example // fileEntry is a file resource previously fetched using get action. The following action will remove the original file resource and all accompanying derived file resources.
                    baasicArticleInstanceFilesRouteDefinition.remove(fileEntry)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceFilesClient.prototype.unlink = function (articleId, data, options) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceFilesRouteDefinition.unlink(articleId, data, options));
    };
    /**
     * Returns a promise that is resolved once the unlink by article action has been performed. This action will remove all file resources from the system related to the requested article if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply baasicArticleService route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(fileEntry);
     * let uri = params['model'].links('unlink-by-article').href;
     * ```
     * @method
     * @example // fileEntry is a file resource previously fetched using get action.
                    baasicArticleInstanceFilesClient.unlinkByArticle(fileEntry)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleInstanceFilesClient.prototype.unlinkByArticle = function (articleId, data, options) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceFilesRouteDefinition.unlink(articleId, data, options));
    };
    /**
     * Returns a promise that is resolved once the update file action has been performed; this action will update a file resource if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleFilesRouteService` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     ```
     let params = modelMapper.updateParams(fileEntry);
     let uri = params['model'].links('put').href;
     ```
     * @method
     * @example // fileEntry is a file resource previously fetched using get action.
                   fileEntry.description = '<description>';
                   baasicArticleInstanceFilesClient.update(fileEntry)
                       .then(function (data) {
                           // perform success action here
                       },
                        function (response, status, headers, config) {
                           // perform error handling here
                       });
    **/
    BaasicArticleInstanceFilesClient.prototype.update = function (articleId, data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceFilesRouteDefinition.update(articleId, data), this.baasicArticleInstanceFilesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the link action has been performed; this action links file resource from other modules into the Article Files module (For example: file resources from the Media Vault module can be linked directly into the Article Files module).
     * @method
     * @example baasicArticleInstanceFilesClient.link(fileObject)
                    .then(function (response, status, headers, config) {
                        // perform success handling here
                    },
                        function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleInstanceFilesClient.prototype.link = function (articleId, data) {
        return this.baasicApiClient.post(this.baasicArticleInstanceFilesRouteDefinition.link(articleId, data), this.baasicArticleInstanceFilesRouteDefinition.createParams(data));
    };
    return BaasicArticleInstanceFilesClient;
}());
BaasicArticleInstanceFilesClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceFilesRouteDefinition)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceFilesStreamsClient)),
    __param(2, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceFilesBatchClient)),
    __param(3, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleInstanceFilesRouteDefinition,
        article_1.BaasicArticleInstanceFilesStreamsClient,
        article_1.BaasicArticleInstanceFilesBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicArticleInstanceFilesClient);
exports.BaasicArticleInstanceFilesClient = BaasicArticleInstanceFilesClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceFilesRouteDefinition
 * @description Baasic Article Instance Files Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Files Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceFilesRouteDefinition = (function (_super) {
    __extends(BaasicArticleInstanceFilesRouteDefinition, _super);
    function BaasicArticleInstanceFilesRouteDefinition(baasicArticleInstanceFilesStreamsRouteDefinition, baasicArticleInstanceFilesBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicArticleInstanceFilesStreamsRouteDefinition = baasicArticleInstanceFilesStreamsRouteDefinition;
        _this.baasicArticleInstanceFilesBatchRouteDefinition = baasicArticleInstanceFilesBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'articles/{articleId}/files/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'articles/{articleId}/files/{id}/{?embed,fields}';
        _this.linkRoute = 'articles/{articleId}/files/link';
        _this.unlinkRoute = 'articles/{articleId}/files/unlink/{id}';
        _this.unlinkByArticleRoute = 'articles/{articleId}/files/unlink/{id}';
        _this.updateRoute = 'articles/{articleId}/comments/{id}';
        return _this;
    }
    Object.defineProperty(BaasicArticleInstanceFilesRouteDefinition.prototype, "streams", {
        get: function () {
            return this.baasicArticleInstanceFilesStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleInstanceFilesRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicArticleInstanceFilesBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing file properties using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain file subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the file property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicArticleInstanceFilesRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicArticleInstanceFilesRouteDefinition.prototype.find = function (articleId, options) {
        var params = this.modelMapper.findParams(options);
        params.articleId = articleId;
        return _super.prototype.baseCreate.call(this, this.findRoute, params);
    };
    /**
     * Parses get route; this route should be expanded with the Id of the file resource.
     * @method
     * @example baasicArticleInstanceFilesRouteDefinition.get({id: '<file-id>'});
     **/
    BaasicArticleInstanceFilesRouteDefinition.prototype.get = function (articleId, id, options) {
        var params = this.utility.extend({}, options);
        params.articleId = articleId;
        params.id = id;
        return _super.prototype.baseGet.call(this, this.getRoute, params);
    };
    /**
     * Parses link route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleInstanceFilesRouteDefinition.link();
     **/
    BaasicArticleInstanceFilesRouteDefinition.prototype.link = function (articleId, data) {
        var params = this.utility.extend({}, data);
        params.articleId = articleId;
        return _super.prototype.baseCreate.call(this, this.linkRoute, {});
    };
    /**
     * Parses unlink route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleFilesRouteDefinition.unlink(data);
     **/
    BaasicArticleInstanceFilesRouteDefinition.prototype.unlink = function (articleId, data, options) {
        if (!options) {
            options = {};
        }
        var params = this.modelMapper.removeParams(data);
        params.articleId = articleId;
        return _super.prototype.baseDelete.call(this, this.unlinkRoute, params, options, 'unlink');
    };
    BaasicArticleInstanceFilesRouteDefinition.prototype.unlinkByArticle = function (articleId, data, options) {
        if (!options) {
            options = {};
        }
        var params = this.modelMapper.removeParams(data);
        params.articleId = articleId;
        return _super.prototype.baseDelete.call(this, this.unlinkByArticleRoute, params, options, 'unlink-by-article');
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleInstanceFilesRouteDefinition.update(data);
     **/
    BaasicArticleInstanceFilesRouteDefinition.prototype.update = function (articleId, data) {
        var params = this.modelMapper.updateParams(data);
        params.articleId = articleId;
        return _super.prototype.baseUpdate.call(this, this.updateRoute, params);
    };
    return BaasicArticleInstanceFilesRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleInstanceFilesRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceFilesStreamsRouteDefinition)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceFilesBatchRouteDefinition)),
    __param(2, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [article_1.BaasicArticleInstanceFilesStreamsRouteDefinition,
        article_1.BaasicArticleInstanceFilesBatchRouteDefinition, Object])
], BaasicArticleInstanceFilesRouteDefinition);
exports.BaasicArticleInstanceFilesRouteDefinition = BaasicArticleInstanceFilesRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceFilesStreamsClient
 * @description Baasic Article Instance Files Streams Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Streams Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceFilesStreamsClient = (function () {
    function BaasicArticleInstanceFilesStreamsClient(baasicArticleInstanceFilesStreamsRouteDefinition, baasicApiClient) {
        this.baasicArticleInstanceFilesStreamsRouteDefinition = baasicArticleInstanceFilesStreamsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleInstanceFilesStreamsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleInstanceFilesStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the file stream if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will return a stream of the derived resource. Otherwise, stream of the original file resource will be retrieved.
     * @method streams.get
     * @example // Request the original file stream
                    baasicArticleInstanceFilesStreamsClient.get({id: '<file-id>'})
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });

                // Request derived file stream
                        baasicArticleInstanceFilesStreamsClient.get({id: '<file-id>', width: <width>, height: <height>})
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicArticleInstanceFilesStreamsClient.prototype.get = function (articleId, data) {
        return this.baasicApiClient.get(this.baasicArticleInstanceFilesStreamsRouteDefinition.get(articleId, data));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the file stream as a blob. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will return a blob of the derived file resource. Otherwise, blob of the original file resource will be retrieved. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method streams.getBlob
     * @example // Request the original blob
                    baasicArticleInstanceFilesStreamsClient.getBlob('<file-id>')
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
                        
                // Request derived blob
                        baasicArticleInstanceFilesStreamsClient.getBlob({
                            id: '<file-id>',
                            width: <width>,
                            height: <height>
                        })
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceFilesStreamsClient.prototype.getBlob = function (articleId, data) {
        return this.baasicApiClient.get(this.baasicArticleInstanceFilesStreamsRouteDefinition.get(articleId, data), { 'Accept': 'application/octet-stream' });
    };
    /**
     * Returns a promise that is resolved once the update file stream action has been performed; this action will replace the existing stream with a new one. Alternatively, if a derived stream is being updated it will either create a new derived stream or replace the existing one. In order to update a derived stream, format needs to be passed (For example: `width` and `height` for the image type of file stream data type).
     * @method streams.update
     * @example // Update original file stream
                    baasicArticleInstanceFilesStreamsClient.update('<file-id>', <file-stream>)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
                // Update derived file stream
                    baasicArticleInstanceFilesStreamsClient.update({id: '<file-id>', width: <width>, height: <height>}, <file-stream>)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceFilesStreamsClient.prototype.update = function (articleId, data, stream) {
        var formData = new FormData();
        formData.append('file', stream);
        return this.baasicApiClient.put(this.baasicArticleInstanceFilesStreamsRouteDefinition.update(articleId, data), formData, { 'Content-Type': undefined });
    };
    /**
     * Returns a promise that is resolved once the create file stream action has been performed; this action will upload the specified blob. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method streams.create
     * @example baasicArticleInstanceFilesStreamsClient.create('<file-id>', <blob>)
                   .then(function (data) {
                        // perform success action here
                   },
                    function (response, status, headers, config) {
                       // perform error handling here
                   });
    **/
    BaasicArticleInstanceFilesStreamsClient.prototype.create = function (articleId, data, stream) {
        var formData = new FormData();
        formData.append('file', stream);
        return this.baasicApiClient.post(this.baasicArticleInstanceFilesStreamsRouteDefinition.create(articleId, data), formData, { 'Content-Type': undefined });
    };
    return BaasicArticleInstanceFilesStreamsClient;
}());
BaasicArticleInstanceFilesStreamsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceFilesStreamsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleInstanceFilesStreamsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleInstanceFilesStreamsClient);
exports.BaasicArticleInstanceFilesStreamsClient = BaasicArticleInstanceFilesStreamsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceFilesStreamsRouteDefinition
 * @description Baasic Article Instance Files Streams Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Files Streams Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleInstanceFilesStreamsRouteDefinition = (function (_super) {
    __extends(BaasicArticleInstanceFilesStreamsRouteDefinition, _super);
    function BaasicArticleInstanceFilesStreamsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'articles/{articleId}/file-streams/{id}/{?width,height}';
        _this.createRoute = 'articles/{articleId}/file-streams/{filename}';
        _this.updateRoute = 'articles/{articleId}/file-streams/{id}';
        return _this;
    }
    /**
     * Parses get route; this route should be expanded with id of desired file stream. Additional supported items are:
     * - `width` - width of desired derived image.
     * - `height` - height of desired derived image.
     * @method
     * @example baasicArticleInstanceFilesRouteDefinition.get({id: '<filename>'});
     **/
    BaasicArticleInstanceFilesStreamsRouteDefinition.prototype.get = function (articleId, data) {
        if (!this.utility.isObject(data)) {
            data = {
                id: data
            };
        }
        var params = this.utility.extend({}, data);
        params.articleId = articleId;
        return _super.prototype.baseCreate.call(this, this.getRoute, params);
    };
    /**
     * Parses create route; this route should be expanded with the filename which indicates where the stream will be saved.
     * @method
     * @example baasicArticleInstanceFilesRouteDefinition.create({filename: '<filename>'});
     **/
    BaasicArticleInstanceFilesStreamsRouteDefinition.prototype.create = function (articleId, data) {
        var params = this.utility.extend({}, data);
        params.articleId = articleId;
        return _super.prototype.baseCreate.call(this, this.createRoute, params);
    };
    /**
     * Parses update route; this route should be expanded with the id of the previously saved resource. Additional supported items are:
     * - `width` - width of derived image to update.
     * - `height` - height of derived image to update.
     * @method
     * @example baasicArticleFilesRouteDefinition.update({id: '<filename>'});
     **/
    BaasicArticleInstanceFilesStreamsRouteDefinition.prototype.update = function (articleId, data) {
        var params = this.utility.extend({}, data);
        params.articleId = articleId;
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicArticleInstanceFilesStreamsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleInstanceFilesStreamsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleInstanceFilesStreamsRouteDefinition);
exports.BaasicArticleInstanceFilesStreamsRouteDefinition = BaasicArticleInstanceFilesStreamsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(94));
__export(__webpack_require__(93));
__export(__webpack_require__(90));
__export(__webpack_require__(89));
__export(__webpack_require__(92));
__export(__webpack_require__(91));


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSubRatingsClient
 * @description Baasic Article Sub Ratings Client provides an easy way to consume Baasic Article Ratings REST API end-points. `baasicArticleRatingsClient` functions enable performing standard CRUD operations directly on article rating resources, whereas the `baasicArticleService` functions allow management between article and article rating. In order to obtain needed routes `baasicArticleRatingsClient` uses `baasicArticleRatingsRouteDefinition`.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceRatingsClient = (function () {
    function BaasicArticleInstanceRatingsClient(baasicArticleInstanceRatingsRouteDefinition, baasicApiClient) {
        this.baasicArticleInstanceRatingsRouteDefinition = baasicArticleInstanceRatingsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleInstanceRatingsClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicArticleRatingsRouteDefinition`.
         * @method
         * @example baasicArticleInstanceRatingsClient.routeDefinition.get(id);
         **/
        get: function () {
            return this.baasicArticleInstanceRatingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create article rating action has been performed; this action creates a new rating for an article.
     * @method
     * @example baasicArticleInstanceRatingsClient.create({ articleId : '<article-id>', rating : 5, userId : '<user-id>' })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleInstanceRatingsClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicArticleInstanceRatingsRouteDefinition.create(data), this.baasicArticleInstanceRatingsRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of article rating resources matching the given criteria.
     * @method
     * @example baasicArticleInstanceRatingsClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleInstanceRatingsClient.prototype.find = function (articleId, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceRatingsRouteDefinition.find(articleId, options));
    };
    /**
     * Returns a promise that is resolved once the findByUser action has been performed. Success response returns a list of article rating resources filtered by username.
     * @method
     * @example baasicArticleInstanceRatingsClient.find('<username>', {
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleInstanceRatingsClient.prototype.findByUser = function (articleId, username, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceRatingsRouteDefinition.findByUser(articleId, username, options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified article rating resource.
     * @method
     * @example baasicArticleInstanceRatingsClient.get('<articleRating-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleInstanceRatingsClient.prototype.get = function (articleId, id, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceRatingsRouteDefinition.get(articleId, id, options));
    };
    /**
     * Returns a promise that is resolved once the update article rating action has been performed; this action updates an article rating. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRatingsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(articleRating);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // articleRating is a resource previously fetched using get action.
                    articleRating.rating = 4;
                    baasicArticleInstanceRatingsClient.update(articleRating)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceRatingsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleInstanceRatingsRouteDefinition.update(data), this.baasicArticleInstanceRatingsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove article rating action has been performed. If the action is successfully completed, the article rating resource will be permanently removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRatingsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(articleRating);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // articleRating is a resource previously fetched using get action.
                    baasicArticleInstanceRatingsClient.remove(articleRating)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceRatingsClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceRatingsRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the removeAll article rating action has been performed. If the action is successfully completed, the article rating resources will be permanently removed from the system for a specified article resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleInstanceRouteClient` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     *  ```
     * let params = modelMapper.removeParams(article);
     * let uri = params['model'].links('delete-ratings-by-article').href;
     * ```
     * @method
     * @example // article is a resource previously fetched using get action.
                    baasicArticleInstanceRatingsClient.removeAll(article)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleInstanceRatingsClient.prototype.removeAll = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceRatingsRouteDefinition.deleteAll(data));
    };
    return BaasicArticleInstanceRatingsClient;
}());
BaasicArticleInstanceRatingsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceRatingsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleInstanceRatingsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleInstanceRatingsClient);
exports.BaasicArticleInstanceRatingsClient = BaasicArticleInstanceRatingsClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceRatingsRouteDefinition
 * @description Baasic Article Instance Ratings Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Sub Ratings Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleInstanceRatingsRouteDefinition = (function (_super) {
    __extends(BaasicArticleInstanceRatingsRouteDefinition, _super);
    function BaasicArticleInstanceRatingsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'articles/{articleId}/ratings/';
        _this.findRoute = 'articles/{articleId}/ratings{?page,rpp,sort,embed,fields}';
        _this.findByUserRoute = 'articles/{articleId}/users/{username}/ratings/{?embed,fields}';
        _this.getRoute = 'articles/{articleId}/ratings/{id}/{?embed,fields}';
        _this.updateRoute = 'articles/{articleId}/ratings/{id}';
        _this.deleteRoute = 'articles/{articleId}/ratings/{id}';
        _this.deleteAllRoute = 'articles/{articleId}/ratings';
        return _this;
    }
    /**
     * Parses create article rating route; this URI does not support any additional embed items.
     * @method
     * @example baasicArticleInstanceRatingsRouteDefinition.create(data);
     **/
    BaasicArticleInstanceRatingsRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses find article rating route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing article rating properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article rating subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article rating property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicArticleInstanceRatingsRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicArticleInstanceRatingsRouteDefinition.prototype.find = function (articleId, options) {
        var params = this.utility.extend({}, options);
        params.articleId = articleId;
        return _super.prototype.baseFind.call(this, this.findRoute, params);
    };
    /**
     * Parses findByUser article rating route which can be expanded with additional options. Supported items are:
     * - `username` - A value that uniquely identifies a user which has created an article rating.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article rating subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article rating property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicArticleInstanceRatingsRouteDefinition.find({username: '<username>'});
     **/
    BaasicArticleInstanceRatingsRouteDefinition.prototype.findByUser = function (articleId, username, options) {
        var params = this.utility.extend({}, options);
        params.username = username;
        params.articleId = articleId;
        return _super.prototype.baseFind.call(this, this.findByUserRoute, params);
    };
    /**
     * Parses get article rating route which must be expanded with the Id of the previously created article rating resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicArticleInstanceRatingsRouteDefinition.get({id: '<articleRating-id>'});
     **/
    BaasicArticleInstanceRatingsRouteDefinition.prototype.get = function (articleId, id, options) {
        var params = this.utility.extend({}, options);
        params.articleId = articleId;
        return _super.prototype.baseGet.call(this, this.getRoute, id, params);
    };
    /**
     * Parses update article rating route; this URI does not support any additional embed items.
     * @method
     * @example baasicArticleInstanceRatingsRouteDefinition.update(data);
     **/
    BaasicArticleInstanceRatingsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
    * Parses delete article rating route; this URI does not support any additional embed items.
    * @method
    * @example baasicArticleInstanceRatingsRouteDefinition.delete(data);
    **/
    BaasicArticleInstanceRatingsRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
    * Parses delete article rating route; this URI does not support any additional embed items.
    * @method
    * @example baasicArticleInstanceRatingsRouteDefinition.deleteAll(data);
    **/
    BaasicArticleInstanceRatingsRouteDefinition.prototype.deleteAll = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteAllRoute, data, undefined, 'delete-ratings-by-article');
    };
    return BaasicArticleInstanceRatingsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleInstanceRatingsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleInstanceRatingsRouteDefinition);
exports.BaasicArticleInstanceRatingsRouteDefinition = BaasicArticleInstanceRatingsRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(97));
__export(__webpack_require__(96));


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSubscriptionsClient
 * @description Baasic Articles Subscriptions Client provides an easy way to consume Baasic Articles REST API end-points. In order to obtain needed routes `baasicArticleSubscriptionsClient` uses `baasicArticleSubscriptionsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceSubscriptionsClient = (function () {
    function BaasicArticleInstanceSubscriptionsClient(baasicArticleSubscriptionsCommentReportedClient, baasicArticleSubscriptionsArticleClient, baasicArticleSubscriptionsCommentRequiresModerationClient, baasicArticleInstanceSubscriptionsRouteDefinition) {
        this.baasicArticleSubscriptionsCommentReportedClient = baasicArticleSubscriptionsCommentReportedClient;
        this.baasicArticleSubscriptionsArticleClient = baasicArticleSubscriptionsArticleClient;
        this.baasicArticleSubscriptionsCommentRequiresModerationClient = baasicArticleSubscriptionsCommentRequiresModerationClient;
        this.baasicArticleInstanceSubscriptionsRouteDefinition = baasicArticleInstanceSubscriptionsRouteDefinition;
    }
    Object.defineProperty(BaasicArticleInstanceSubscriptionsClient.prototype, "commentReported", {
        get: function () {
            return this.baasicArticleSubscriptionsCommentReportedClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleInstanceSubscriptionsClient.prototype, "article", {
        get: function () {
            return this.baasicArticleSubscriptionsArticleClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleInstanceSubscriptionsClient.prototype, "commentRequiresModeration", {
        get: function () {
            return this.baasicArticleSubscriptionsCommentRequiresModerationClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleInstanceSubscriptionsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleInstanceSubscriptionsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    return BaasicArticleInstanceSubscriptionsClient;
}());
BaasicArticleInstanceSubscriptionsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsCommentReportedClient)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsArticleClient)),
    __param(2, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsCommentRequiresModerationClient)),
    __param(3, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceSubscriptionsRouteDefinition)),
    __metadata("design:paramtypes", [article_1.BaasicArticleSubscriptionsCommentReportedClient,
        article_1.BaasicArticleSubscriptionsArticleClient,
        article_1.BaasicArticleSubscriptionsCommentRequiresModerationClient,
        article_1.BaasicArticleInstanceSubscriptionsRouteDefinition])
], BaasicArticleInstanceSubscriptionsClient);
exports.BaasicArticleInstanceSubscriptionsClient = BaasicArticleInstanceSubscriptionsClient;


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSubscriptionsRouteDefinition
 * @description Baasic Article Subscriptions Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Subscriptions Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceSubscriptionsRouteDefinition = (function (_super) {
    __extends(BaasicArticleInstanceSubscriptionsRouteDefinition, _super);
    function BaasicArticleInstanceSubscriptionsRouteDefinition(baasicArticleSubscriptionsCommentReportedRouteDefinition, baasicArticleSubscriptionsArticleRouteDefinition, baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicArticleSubscriptionsCommentReportedRouteDefinition = baasicArticleSubscriptionsCommentReportedRouteDefinition;
        _this.baasicArticleSubscriptionsArticleRouteDefinition = baasicArticleSubscriptionsArticleRouteDefinition;
        _this.baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition = baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition;
        _this.appOptions = appOptions;
        return _this;
    }
    Object.defineProperty(BaasicArticleInstanceSubscriptionsRouteDefinition.prototype, "commentReported", {
        get: function () {
            return this.baasicArticleSubscriptionsCommentReportedRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleInstanceSubscriptionsRouteDefinition.prototype, "article", {
        get: function () {
            return this.baasicArticleSubscriptionsArticleRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleInstanceSubscriptionsRouteDefinition.prototype, "commentRequiresModeration", {
        get: function () {
            return this.baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    return BaasicArticleInstanceSubscriptionsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleInstanceSubscriptionsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsCommentReportedRouteDefinition)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsArticleRouteDefinition)),
    __param(2, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition)),
    __param(3, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [article_1.BaasicArticleSubscriptionsCommentReportedRouteDefinition,
        article_1.BaasicArticleSubscriptionsArticleRouteDefinition,
        article_1.BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition, Object])
], BaasicArticleInstanceSubscriptionsRouteDefinition);
exports.BaasicArticleInstanceSubscriptionsRouteDefinition = BaasicArticleInstanceSubscriptionsRouteDefinition;


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSubscriptionsArticleClient
 * @description Baasic Article Subscriptions Article Client provides an easy way to consume Baasic Articles REST API end-points. In order to obtain needed routes `baasicArticleSubscriptionsArticleClient` uses `baasicArticleSubscriptionsArticleRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleSubscriptionsArticleClient = (function () {
    function BaasicArticleSubscriptionsArticleClient(baasicArticleSubscriptionsArticleRouteDefinition, baasicApiClient) {
        this.baasicArticleSubscriptionsArticleRouteDefinition = baasicArticleSubscriptionsArticleRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleSubscriptionsArticleClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleSubscriptionsArticleRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the subscribe action has been performed. This action subscribes an user to the specified article.
     * @method
     * @example baasicArticleSubscriptionsArticleClient.subscribe(article, user)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleSubscriptionsArticleClient.prototype.subscribe = function (article, data) {
        return this.baasicApiClient.post(this.baasicArticleSubscriptionsArticleRouteDefinition.subscribe(article, data), this.baasicArticleSubscriptionsArticleRouteDefinition.subscribeParams(article, data));
    };
    /**
     * Returns a promise that is resolved once the isSubscribed action has been performed. This action checks if a user is subscribed to the specified article.
     * @method
     * @example baasicArticleSubscriptionsArticleClient.subscribe(article, user)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleSubscriptionsArticleClient.prototype.isSubscribed = function (article, data) {
        return this.baasicApiClient.get(this.baasicArticleSubscriptionsArticleRouteDefinition.isSubscribed(article, data));
    };
    /**
     * Returns a promise that is resolved once the unSubscribe action has been performed. This action unsubscribes a user from the specified article.
     * @method
     * @example baasicArticleSubscriptionsArticleClient.subscribe(article, user)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleSubscriptionsArticleClient.prototype.unSubscribe = function (article, data) {
        return this.baasicApiClient.delete(this.baasicArticleSubscriptionsArticleRouteDefinition.unSubscribe(article, data));
    };
    return BaasicArticleSubscriptionsArticleClient;
}());
BaasicArticleSubscriptionsArticleClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsArticleRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleSubscriptionsArticleRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleSubscriptionsArticleClient);
exports.BaasicArticleSubscriptionsArticleClient = BaasicArticleSubscriptionsArticleClient;


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSubscriptionsArticleRouteDefinition
 * @description Baasic Article Subscriptions Article Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Subscriptions Article Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleSubscriptionsArticleRouteDefinition = (function (_super) {
    __extends(BaasicArticleSubscriptionsArticleRouteDefinition, _super);
    function BaasicArticleSubscriptionsArticleRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.subscribeRoute = 'articles/{articleId}/subscriptions';
        _this.isSubscribedRoute = 'articles/{articleId}/subscriptions/{subscriberId}';
        _this.unSubscribeRoute = 'articles/{articleId}/subscriptions';
        return _this;
    }
    /**
     * Parses article subscribe route which must be expanded with id of the article.
     * @method subscriptions.article.subscribe
     * @example baasicArticleSubscriptionsArticleRouteDefinition.subscribe({id: '<article-id>'});
     **/
    BaasicArticleSubscriptionsArticleRouteDefinition.prototype.subscribe = function (article, data) {
        var params = this.utility.extend(article, data);
        return _super.prototype.baseCreate.call(this, this.subscribeRoute, params);
    };
    /**
     * Parses article isSubscribed route which must be expanded with subscriber Id and the id of the article.
     * @method subscriptions.article.isSubscribed
     * @example baasicArticleRouteDefinition.subscriptions.article.isSubscribed.expand({id: '<article-id>', subscriberId: '<subscriber-id>' });
     **/
    BaasicArticleSubscriptionsArticleRouteDefinition.prototype.isSubscribed = function (article, data) {
        var params = this.utility.extend(article, data);
        return _super.prototype.baseCreate.call(this, this.isSubscribedRoute, params);
    };
    /**
     * Parses article unSubscribe route which must be expanded with the id of the article.
     * @method subscriptions.articleModule.unSubscribe
     * @example baasicArticleSubscriptionsArticleRouteDefinition.unSubscribe({id: '<article-id>'});
     **/
    BaasicArticleSubscriptionsArticleRouteDefinition.prototype.unSubscribe = function (article, data) {
        var params = this.utility.extend(article, data);
        return _super.prototype.baseCreate.call(this, this.unSubscribeRoute, params);
    };
    BaasicArticleSubscriptionsArticleRouteDefinition.prototype.subscribeParams = function (article, data) {
        return this.utility.extend(article, data);
    };
    return BaasicArticleSubscriptionsArticleRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleSubscriptionsArticleRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleSubscriptionsArticleRouteDefinition);
exports.BaasicArticleSubscriptionsArticleRouteDefinition = BaasicArticleSubscriptionsArticleRouteDefinition;


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSubscriptionsCommentReportedClient
 * @description Baasic Article Subscriptions Comment Reported Client provides an easy way to consume Baasic Articles REST API end-points. In order to obtain needed routes `baasicArticleSubscriptionsCommentReportedClient` uses `baasicArticleSubscriptionsCommentReportedRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleSubscriptionsCommentReportedClient = (function () {
    function BaasicArticleSubscriptionsCommentReportedClient(baasicArticleSubscriptionsCommentReportedRouteDefinition, baasicApiClient) {
        this.baasicArticleSubscriptionsCommentReportedRouteDefinition = baasicArticleSubscriptionsCommentReportedRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleSubscriptionsCommentReportedClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleSubscriptionsCommentReportedRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the subscribe action has been performed.
     * @method
     * @example baasicArticleSubscriptionsCommentReportedClient.subscribe(data)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleSubscriptionsCommentReportedClient.prototype.subscribe = function (data) {
        return this.baasicApiClient.post(this.baasicArticleSubscriptionsCommentReportedRouteDefinition.subscribe(data), data);
    };
    /**
     * Returns a promise that is resolved once the isSubscribed action has been performed.
     * @method
     * @example baasicArticleSubscriptionsCommentReportedClient.isSubscribed(data)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleSubscriptionsCommentReportedClient.prototype.isSubscribed = function (data) {
        return this.baasicApiClient.get(this.baasicArticleSubscriptionsCommentReportedRouteDefinition.isSubscribed(data));
    };
    /**
     * Returns a promise that is commentReported once the unSubscribe action has been performed.
     * @method
     * @example baasicArticleSubscriptionsCommentReportedClient.isSubscribed(data)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleSubscriptionsCommentReportedClient.prototype.unSubscribe = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleSubscriptionsCommentReportedRouteDefinition.unSubscribe(data), undefined, data);
    };
    return BaasicArticleSubscriptionsCommentReportedClient;
}());
BaasicArticleSubscriptionsCommentReportedClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsCommentReportedRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleSubscriptionsCommentReportedRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleSubscriptionsCommentReportedClient);
exports.BaasicArticleSubscriptionsCommentReportedClient = BaasicArticleSubscriptionsCommentReportedClient;


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSubscriptionsCommentReportedRouteDefinition
 * @description Baasic Article Subscriptions Comment Reported Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Subscriptions Comment Reported Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleSubscriptionsCommentReportedRouteDefinition = (function (_super) {
    __extends(BaasicArticleSubscriptionsCommentReportedRouteDefinition, _super);
    function BaasicArticleSubscriptionsCommentReportedRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.subscribeRoute = 'articles/subscriptions/comment-reported';
        _this.isSubscribedRoute = 'articles/subscriptions/comment-reported/{subscriberId}';
        _this.unSubscribeRoute = 'articles/subscriptions/comment-reported';
        return _this;
    }
    /**
     * Parses commentReported subscribe route which doesn't support any additional options.
     * @method subscriptions.commentReported.subscribe
     * @example baasicArticleSubscriptionsCommentReportedRouteDefinition.subscribe(data);
     **/
    BaasicArticleSubscriptionsCommentReportedRouteDefinition.prototype.subscribe = function (data) {
        return _super.prototype.baseCreate.call(this, this.subscribeRoute, data);
    };
    /**
     * Parses commentReported isSubscribed route which must be expanded with subscriber Id.
     * @method
     * @example baasicArticleSubscriptionsCommentReportedRouteDefinition.isSubscribed({subscriberId: '<subscriber-id>'});
     **/
    BaasicArticleSubscriptionsCommentReportedRouteDefinition.prototype.isSubscribed = function (data) {
        return _super.prototype.baseCreate.call(this, this.isSubscribedRoute, data);
    };
    /**
     * Parses commentReported unSubscribe route which doesn't support any additional options.
     * @method subscriptions.commentReported.unSubscribe
     * @example baasicArticleSubscriptionsCommentReportedRouteDefinition.unSubscribe(data);
     **/
    BaasicArticleSubscriptionsCommentReportedRouteDefinition.prototype.unSubscribe = function (data) {
        return _super.prototype.baseCreate.call(this, this.unSubscribeRoute, data);
    };
    return BaasicArticleSubscriptionsCommentReportedRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleSubscriptionsCommentReportedRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleSubscriptionsCommentReportedRouteDefinition);
exports.BaasicArticleSubscriptionsCommentReportedRouteDefinition = BaasicArticleSubscriptionsCommentReportedRouteDefinition;


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSubscriptionsCommentRequiresModerationClient
 * @description Baasic Article Subscriptions Comment Requires Moderation Client provides an easy way to consume Baasic Articles REST API end-points. In order to obtain needed routes `baasicArticleSubscriptionsCommentRequiresModerationClient` uses `baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleSubscriptionsCommentRequiresModerationClient = (function () {
    function BaasicArticleSubscriptionsCommentRequiresModerationClient(baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition, baasicApiClient) {
        this.baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition = baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleSubscriptionsCommentRequiresModerationClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the subscribe action has been performed.
     * @method
     * @example baasicArticleCommentRequiresModerationClient.subscribe(data)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleSubscriptionsCommentRequiresModerationClient.prototype.subscribe = function (data) {
        return this.baasicApiClient.post(this.baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition.subscribe(data), data);
    };
    /**
     * Returns a promise that is resolved once the isSubscribed action has been performed.
     * @method
     * @example baasicArticleCommentRequiresModerationClient.isSubscribed(data)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleSubscriptionsCommentRequiresModerationClient.prototype.isSubscribed = function (data) {
        return this.baasicApiClient.get(this.baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition.isSubscribed(data));
    };
    /**
     * Returns a promise that is commentReported once the unSubscribe action has been performed.
     * @method
     * @example baasicArticleCommentRequiresModerationClient.unSubscribed(data)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleSubscriptionsCommentRequiresModerationClient.prototype.unSubscribed = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition.unSubscribe(data));
    };
    return BaasicArticleSubscriptionsCommentRequiresModerationClient;
}());
BaasicArticleSubscriptionsCommentRequiresModerationClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleSubscriptionsCommentRequiresModerationClient);
exports.BaasicArticleSubscriptionsCommentRequiresModerationClient = BaasicArticleSubscriptionsCommentRequiresModerationClient;


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition
 * @description Baasic Article Subscriptions Comment Requires Moderation Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Subscriptions Comment Requires Moderation Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition = (function (_super) {
    __extends(BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition, _super);
    function BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.subscribeRoute = 'articles/subscriptions/comment-requires-moderation';
        _this.isSubscribedRoute = 'articles/subscriptions/comment-requires-moderation/{subscriberId}';
        _this.unSubscribeRoute = 'articles/subscriptions/comment-requires-moderation';
        return _this;
    }
    /**
     * Parses commentRequiresModeration subscribe route which doesn't support any additional options.
     * @method subscriptions.commentRequiresModeration.subscribe
     * @example baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition.subscribe(data);
     **/
    BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition.prototype.subscribe = function (data) {
        return _super.prototype.baseCreate.call(this, this.subscribeRoute, data);
    };
    /**
     * Parses commentRequiresModeration isSubscribed route which must be expanded with subscriber Id.
     * @method subscriptions.commentRequiresModeration.isSubscribed
     * @example baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition.isSubscribed({subscriberId: '<subscriber-id>'});
     **/
    BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition.prototype.isSubscribed = function (data) {
        return _super.prototype.baseCreate.call(this, this.isSubscribedRoute, data);
    };
    /**
     * Parses commentRequiresModeration unSubscribe route which doesn't support any additional options.
     * @method subscriptions.commentRequiresModeration.unSubscribe
     * @example baasicArticleSubscriptionsCommentRequiresModerationRouteDefinition.unSubscribe(data)
     **/
    BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition.prototype.unSubscribe = function (data) {
        return _super.prototype.baseCreate.call(this, this.unSubscribeRoute, data);
    };
    return BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition);
exports.BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition = BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition;


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(102));
__export(__webpack_require__(104));
__export(__webpack_require__(106));
__export(__webpack_require__(100));
__export(__webpack_require__(101));
__export(__webpack_require__(103));
__export(__webpack_require__(105));
__export(__webpack_require__(99));


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceTagsDefinition
 * @description Baasic Article Instance Tags Definition provides an easy way to consume Baasic Article Tags REST API end-points. `baasicArticleInstanceTagsRouteClient` functions enable performing standard CRUD operations directly on article tag resources, whereas the `baasicArticleClient` functions allow management between article and article tag. In order to obtain needed routes `baasicArticleInstanceTagsClient` uses `baasicArticleInstanceTagsRouteDefinition`.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleInstanceTagsClient = (function () {
    function BaasicArticleInstanceTagsClient(baasicArticleInstanceTagsRouteDefinition, baasicApiClient) {
        this.baasicArticleInstanceTagsRouteDefinition = baasicArticleInstanceTagsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleInstanceTagsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleInstanceTagsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of article tag resources matching the given criteria.
     * @method
     * @example baasicArticleInstanceTagsClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleInstanceTagsClient.prototype.find = function (articleId, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceTagsRouteDefinition.find(articleId, options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified article tag resource.
     * @param id tag id
     * @param options options object
     * @method
     * @example baasicArticleInstanceTagsClient.get('<articleTag-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                       // perform error handling here
                   });
    **/
    BaasicArticleInstanceTagsClient.prototype.get = function (articleId, id, options) {
        return this.baasicApiClient.get(this.baasicArticleInstanceTagsRouteDefinition.get(articleId, id, options));
    };
    /**
     * Returns a promise that is resolved once the create article tag action has been performed; this action creates a new tag for an article.
     * @method
     * @example baasicArticleInstanceTagsClient.create({
                    articleId : '<article-id>',
                    tag : {
                        slug : '<slug>',
                        sortOrder : 1,
                        tag : '<tag>'
                    }
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicArticleInstanceTagsClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicArticleInstanceTagsRouteDefinition.create(data), this.baasicArticleInstanceTagsRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove article tag action has been performed. If the action is successfully completed, the article tag resource will be permanently removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleTagsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(articleTag);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // articleTag is a resource previously fetched using get action.
                    baasicArticleInstanceTagsClient.remove(articleTag)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleInstanceTagsClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceTagsRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the removeAll article tag action has been performed. This action will remove all tags from an article if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRouteService` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(article);
     * let uri = params['model'].links('delete-tags-by-article').href;
     * ```
     * @method
     * @example // article is a resource previously fetched using get action.
                    baasicArticleInstanceTagsClient.removeAll(article)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleInstanceTagsClient.prototype.removeAll = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleInstanceTagsRouteDefinition.deleteAll(data));
    };
    return BaasicArticleInstanceTagsClient;
}());
BaasicArticleInstanceTagsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceTagsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleInstanceTagsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleInstanceTagsClient);
exports.BaasicArticleInstanceTagsClient = BaasicArticleInstanceTagsClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleInstanceTagsRouteDefinition
 * @description Baasic Article Instance Tags Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Instance Tags Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleInstanceTagsRouteDefinition = (function (_super) {
    __extends(BaasicArticleInstanceTagsRouteDefinition, _super);
    function BaasicArticleInstanceTagsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'articles/{articleId}/tags/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'articles/{articleId}/tags/{tag}/{?embed,fields}';
        _this.createRoute = 'articles/{articleId}/tags/{tag}/';
        _this.deleteRoute = 'articles/{articleId}/tags/{id}';
        _this.deleteAllRoute = 'articles/{articleId}/tags';
        return _this;
    }
    /**
     * Parses find article tags route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify article tags using the phrase search; multiple tag keywords must be comma separated.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article tag subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article tag property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicArticleInstanceTagsRouteDefinition.find().expand({searchQuery: '<search-phrase>'});
     **/
    BaasicArticleInstanceTagsRouteDefinition.prototype.find = function (articleId, options) {
        var params = this.utility.extend({}, options);
        params.articleId = articleId;
        return _super.prototype.baseFind.call(this, this.findRoute, params);
    };
    /**
     * Parses get article tag route which must be expanded with the Id of the previously created article tag resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicArticleInstanceTagsRouteDefinition.get({id: '<articleTag-id>'});
     **/
    BaasicArticleInstanceTagsRouteDefinition.prototype.get = function (articleId, id, options) {
        var params = this.utility.extend({}, options);
        params.articleId = articleId;
        return _super.prototype.baseGet.call(this, this.getRoute, id, params);
    };
    /**
     * Parses create article tag route which must be expanded with the Id of the previously created article tag resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicArticleInstanceTagsRouteDefinition.create({id: '<articleTag-id>'});
     **/
    BaasicArticleInstanceTagsRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses get article tag route which must be expanded with the Id of the previously created article tag resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicArticleInstanceTagsRouteDefinition.delete({id: '<articleTag-id>'});
     **/
    BaasicArticleInstanceTagsRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
     * Parses get article tag route which must be expanded with the Id of the previously created article tag resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicArticleInstanceTagsRouteDefinition.deleteAll({id: '<articleTag-id>'});
     **/
    BaasicArticleInstanceTagsRouteDefinition.prototype.deleteAll = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteAllRoute, data, undefined, 'delete-tags-by-article');
    };
    return BaasicArticleInstanceTagsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleInstanceTagsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleInstanceTagsRouteDefinition);
exports.BaasicArticleInstanceTagsRouteDefinition = BaasicArticleInstanceTagsRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.  - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
- All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(109));
__export(__webpack_require__(108));


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleACLClient
 * @description Baasic Article ACL Client provides an easy way to consume Baasic Articles REST API end-points. In order to obtain needed routes `baasicArticleACLClient` uses `baasicArticleACLRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleACLClient = (function () {
    function BaasicArticleACLClient(baasicArticleACLRouteDefinition, baasicApiClient) {
        this.baasicArticleACLRouteDefinition = baasicArticleACLRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleACLClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleACLRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns a list of ACL policies established for the specified article resource.
     * @method
     * @example baasicArticleACLClient.get({id: '<article-id>'})
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleACLClient.prototype.get = function (options) {
        return this.baasicApiClient.get(this.baasicArticleACLRouteDefinition.get(options));
    };
    /**
     * Returns a promise that is resolved once the update acl action has been performed, this action creates new ACL policy for the specified article resource.
     * @method
     * @param options An ACL policy object that needs to be updated in the system. This object specifies parameters necessary for establishing user and/or role set of rights.
     * @returns A promise that is resolved once the update acl action has been performed.
     * @example let options = {id : '<article-id>'};
                let aclObj =  {
                    actionId: '<action-id'>,
                    roleId: '<roleId>',
                    userId: '<userId>'
                };
                options[baasicConstants.modelPropertyName] = aclObj;
                baasicArticleACLClient.update(options)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleACLClient.prototype.update = function (options) {
        return this.baasicApiClient.put(this.baasicArticleACLRouteDefinition.update(options), this.baasicArticleACLRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the removeByUser action has been performed. This action deletes ACL policy assigned to the specified user and article resource.
     * @method
     * @param articleId Article id which uniquely identifies article resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and article resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param user A value that uniquely identifies user for which ACL policy needs to be removed.
     * @param data An ACL policy object that needs to be updated in the system.
     * @returns A promise that is resolved once the removeByUser action has been performed.
     * @example baasicArticleACLClient.removeByUser('<article-id>', '<access-action>', '<username>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleACLClient.prototype.removeByUser = function (articleId, action, user, data) {
        return this.baasicApiClient.delete(this.baasicArticleACLRouteDefinition.deleteByUser(articleId, action, user, data));
    };
    /**
     * Returns a promise that is resolved once the removeByRole action has been performed. This action deletes ACL policy assigned to the specified role and article resource.
     * @method
     * @param articleId Article id which uniquely identifies article resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and article resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param role A value that uniquely identifies role for which ACL policy needs to be removed.
     * @param data An ACL policy object that needs to be updated in the system.
     * @returns A promise that is resolved once the removeByRole action has been performed.
     * @example baasicArticleACLClient.removeByRole('<article-id>', '<access-action>', '<role-name>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleACLClient.prototype.removeByRole = function (articleId, action, role, data) {
        return this.baasicApiClient.delete(this.baasicArticleACLRouteDefinition.deleteByRole(articleId, action, role, data));
    };
    return BaasicArticleACLClient;
}());
BaasicArticleACLClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleACLRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleACLRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleACLClient);
exports.BaasicArticleACLClient = BaasicArticleACLClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleACLRouteService
 * @description Baasic Article ACL Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleACLRouteDefinition = (function (_super) {
    __extends(BaasicArticleACLRouteDefinition, _super);
    function BaasicArticleACLRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'articles/{id}/acl/{?fields}';
        _this.updateRoute = 'articles/{id}/acl/{?fields}';
        _this.deleteByUserRoute = 'articles/{id}/acl/actions/{accessAction}/users/{user}/';
        _this.deleteByRoleRoute = 'articles/{id}/acl/actions/{accessAction}/roles/{role}/';
        return _this;
    }
    /**
     * Parses get article acl route; this URI template should be expanded with the Id of the article.
     * @method
     * @example baasicArticleACLRouteDefinition.get({id: '<article-id>'});
     **/
    BaasicArticleACLRouteDefinition.prototype.get = function (options) {
        var params = this.utility.extend({}, options);
        return _super.prototype.baseCreate.call(this, this.getRoute, params);
    };
    /**
     * Parses update article acl route; this URI template should be expanded with the Id of the article.
     * @method
     * @example baasicArticleACLRouteDefinition.update({id: '<article-id>'});
     **/
    BaasicArticleACLRouteDefinition.prototype.update = function (options) {
        var params = this.utility.extend({}, options);
        return _super.prototype.baseCreate.call(this, this.updateRoute, params);
    };
    /**
     * Parses deleteByUser article acl route which can be expanded with additional options. Supported items are:
     * - `id` - Id of the article.
     * - `accessAction` - Action abbreviation which identifies ACL policy assigned to the specified user and article resource.
     * - `user` - A value which uniquely identifies user for which ACL policy needs to be removed.
     * @method
     * @param articleId Article id which uniquely identifies article resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and article resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param user A value that uniquely identifies user for which ACL policy needs to be removed.
     * @param data An ACL policy object that needs to be updated in the system.
     * @example baasicArticleACLRouteDefinition.deleteByUser({
                        id: '<article-id>',
                        accessAction: '<access-action>',
                        user: '<username>'
                });
     **/
    BaasicArticleACLRouteDefinition.prototype.deleteByUser = function (articleId, action, user, data) {
        var params = this.modelMapper.removeParams(data);
        params.articleId = articleId;
        params.user = user;
        params.accessAction = action;
        return _super.prototype.baseCreate.call(this, this.deleteByUserRoute, params);
    };
    /**
     * Parses deleteByUser article acl route which can be expanded with additional options. Supported items are:
     * - `id` - Id of the article.
     * - `accessAction` - Action abbreviation which identifies ACL policy assigned to the specified role and article resource.
     * - `role` - A value which uniquely identifies role for which ACL policy needs to be removed.
     * @method
     * @param articleId Article id which uniquely identifies article resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and article resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param role A value that uniquely identifies role for which ACL policy needs to be removed.
     * @param data An ACL policy object that needs to be updated in the system.
     * @example baasicArticleACLRouteDefinition.deleteByRole({
                    id: '<article-id>',
                    accessAction: '<access-action>',
                    role: '<role-name>'
                });
     **/
    BaasicArticleACLRouteDefinition.prototype.deleteByRole = function (articleId, action, role, data) {
        var params = this.modelMapper.removeParams(data);
        params.articleId = articleId;
        params.role = role;
        params.accessAction = action;
        return _super.prototype.baseCreate.call(this, this.deleteByRoleRoute, params);
    };
    BaasicArticleACLRouteDefinition.prototype.updateParams = function (options) {
        var params = this.utility.extend({}, options);
        return params[this.modelMapper.modelPropertyName];
    };
    return BaasicArticleACLRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleACLRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleACLRouteDefinition);
exports.BaasicArticleACLRouteDefinition = BaasicArticleACLRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleCommentRepliesClient
 * @description Baasic Article Comment Replies Client provides an easy way to consume Baasic Article Comment Replies REST API end-points. `baasicArticleCommentRepliesService` functions enable performing standard CRUD operations directly on article comment reply resources, whereas the `baasicArticleClient` functions allow management between article and article comment reply. In order to obtain needed routes `baasicArticleCommentRepliesService` uses `baasicArticleCommentRepliesRouteDefinition`.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleCommentRepliesClient = (function () {
    function BaasicArticleCommentRepliesClient(baasicArticleCommentRepliesRouteDefinition, baasicApiClient) {
        this.baasicArticleCommentRepliesRouteDefinition = baasicArticleCommentRepliesRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        /**
         * Contains a reference to valid list of article comment reply states. It returns an object containing all article comment reply states.
         * @method
         * @example baasicArticleCommentRepliesClient.statuses.approved;
         **/
        this.statuses = article_1.CommentStatus;
    }
    Object.defineProperty(BaasicArticleCommentRepliesClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicArticleCommentRepliesRouteDefinition`.
         * @method
         * @example baasicArticleCommentRepliesClient.routeDefinition.get();
         **/
        get: function () {
            return this.baasicArticleCommentRepliesRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the approve article comment reply action has been performed. This action sets the state of an article comment reply to "approved". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-approve').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @param options Notification configuration used to control the article comment recourse access when managing notification distribution.
     * @returns A promise that is resolved once the approve article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleCommentRepliesClient.approve(articleCommentReply, commentOptions)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentRepliesClient.prototype.approve = function (data, options) {
        return this.baasicApiClient.put(this.baasicArticleCommentRepliesRouteDefinition.approve(data), this.baasicArticleCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unapprove article comment reply action has been performed. This action sets the state of an article comment reply to "unapproved". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-unapprove').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the unapprove article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleCommentRepliesClient.unapprove(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentRepliesClient.prototype.unapprove = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentRepliesRouteDefinition.unapprove(data), this.baasicArticleCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the create article comment reply action has been performed; this action creates a new comment reply for an article.
     * @method
     * @param data An article comment reply object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create article comment reply action has been performed.
     * @example baasicArticleCommentRepliesClient.create('<article-id>', {
                    commentId : '<comment-id>',
                    comment : <comment>,
                    userId : '<user-id>' })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleCommentRepliesClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicArticleCommentRepliesRouteDefinition.create(data), this.baasicArticleCommentRepliesRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of article comment reply resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicArticleCommentRepliesClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleCommentRepliesClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicArticleCommentRepliesRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the flag article comment reply action has been performed. This action sets the state of an article comment reply to "flagged". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-flag').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the flag article comment reply action has been performed.
     * @example     // articleCommentReply is a resource previously fetched using get action.
                        baasicArticleCommentRepliesClient.flag(articleCommentReply)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                // perform error handling here
                            });
     **/
    BaasicArticleCommentRepliesClient.prototype.flag = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentRepliesRouteDefinition.flag(data), this.baasicArticleCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unflag article comment reply action has been performed. This action removes the "flagged" comment reply state. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-unflag').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the unflag article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleCommentRepliesClient.unflag(articleCommentReply)
                        .success(function (data) {
                            // perform success action here
                        }).error(function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentRepliesClient.prototype.unflag = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentRepliesRouteDefinition.unflag(data), this.baasicArticleCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified article comment reply resource.
     * @method
     * @param id Id which uniquely identifies article comment reply resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicArticleCommentRepliesClient.get('<comment-reply-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicArticleCommentRepliesClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicArticleCommentRepliesRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the remove article comment reply action has been performed. If the action is successfully completed, the article comment reply resource will be permanently removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = baasicApiClient.removeParams(articleCommentReply);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An article Comment Reply object used to update specified article comment reply resource.
     * @returns A promise that is resolved once the remove article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleCommentRepliesClient.remove(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentRepliesClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleCommentRepliesRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the report article comment reply action has been performed. This action sets the state of an article comment reply to "reported". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-report').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @param options Notification configuration used to control the article comment recourse access when managing notification distribution.
     * @returns A promise that is resolved once the report article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleCommentRepliesClient.report(articleCommentReply, commentOptions)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentRepliesClient.prototype.report = function (data, options) {
        return this.baasicApiClient.put(this.baasicArticleCommentRepliesRouteDefinition.report(data), this.baasicArticleCommentRepliesRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the unreport article comment reply action has been performed. This action removes the "reported" comment reply state. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-unreport').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the unreport article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleCommentRepliesClient.unreport(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentRepliesClient.prototype.unreport = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentRepliesRouteDefinition.unreport(data), this.baasicArticleCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the mark as spam article comment reply action has been performed. This action sets the state of an article comment reply to "spam". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-spam').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the mark as spam article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleCommentRepliesClient.spam(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentRepliesClient.prototype.spam = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentRepliesRouteDefinition.spam(data), this.baasicArticleCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unspam article comment reply action has been performed. This action removes the "spam" comment reply state. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('comment-unspam').href;
     * ```
     * @method
     * @param data Article Comment Reply object.
     * @returns A promise that is resolved once the unspam article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                      baasicArticleCommentRepliesClient.unspam(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentRepliesClient.prototype.unspam = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentRepliesRouteDefinition.unspam(data), this.baasicArticleCommentRepliesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the update article comment reply action has been performed; this action updates an article comment reply resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentRepliesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleCommentReply);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An Article Comments Reply object used to update specified article comment reply resource.
     * @returns A promise that is resolved once the update article comment reply action has been performed.
     * @example // articleCommentReply is a resource previously fetched using get action.
                    baasicArticleCommentRepliesClient.update(articleCommentReply)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentRepliesClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentRepliesRouteDefinition.update(data), this.baasicArticleCommentRepliesRouteDefinition.updateParams(data));
    };
    return BaasicArticleCommentRepliesClient;
}());
BaasicArticleCommentRepliesClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleCommentRepliesRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleCommentRepliesRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleCommentRepliesClient);
exports.BaasicArticleCommentRepliesClient = BaasicArticleCommentRepliesClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleCommentRepliesRouteDefinition
 * @description Baasic Article Comment Replies Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Comment Replies Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleCommentRepliesRouteDefinition = (function (_super) {
    __extends(BaasicArticleCommentRepliesRouteDefinition, _super);
    function BaasicArticleCommentRepliesRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'article-comment-replies/{?searchQuery,statuses,page,rpp,sort,embed,fields}';
        _this.getRoute = 'article-comment-replies/{id}/{?embed,fields}';
        _this.createRoute = 'article-comment-replies';
        _this.updateRoute = 'article-comment-replies/{id}';
        _this.deleteRoute = 'article-comment-replies/{id}';
        _this.approveRoute = 'article-comment-replies/{id}/approve';
        _this.unapproveRoute = 'article-comment-replies/{id}/unapprove';
        _this.flagRoute = 'article-comment-replies/{id}/flag';
        _this.unflagRoute = 'article-comment-replies/{id}/unflag';
        _this.reportRoute = 'article-comment-replies/{id}/report';
        _this.unreportRoute = 'article-comment-replies/{id}/unreport';
        _this.spamRoute = 'article-comment-replies/{id}/spam';
        _this.unspamRoute = 'article-comment-replies/{id}/unspam';
        return _this;
    }
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify article comment reply resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article comment reply subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article comment reply property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * - `statuses` - Comma separated list of article comment reply states that specify where search should be done (Allowed states: Approved, Spam, Reported, Flagged and UnApproved).
     * @method
     * @param options Query resource options object.
     * @example baasicArticleCommentRepliesRouteDefinition.find({ searchQuery: '<search-phrase>' });
     **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route which can be expanded with additional options. Supported items are:
     * - `id` - Id which uniquely identifies article comment reply resource that needs to be retrieved.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param id Id which uniquely identifies article comment reply resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @example baasicArticleCommentRepliesRouteDefinition.get({ id: '<comment-reply-id>' });
     **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create article comment reply route; this URI template does not support any additional items.
     * @method
     * @param data An article comment reply object that needs to be inserted into the system.
     * @example baasicArticleCommentRepliesRouteDefinition.create(data);
     **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses update article comment reply route; this URI template does not support any additional items.
     * @method
     * @param data An Article Comments Reply object used to update specified article comment reply resource.
     * @example baasicArticleCommentRepliesRouteDefinition.update(data);
     **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
    * Parses delete article comment reply route; this URI template does not support any additional items.
    * @method
    * @param data Article Comment Reply object.
    * @example baasicArticleCommentRepliesRouteDefinition.delete(data);
    **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
     * Parses approve article comment reply route; this URI template does not support any additional items.
     * @method
     * @param data Article Comment Reply object.
     * @example baasicArticleCommentRepliesRouteDefinition.approve(data);
     **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.approve = function (data) {
        return _super.prototype.baseUpdate.call(this, this.approveRoute, data, undefined, 'comment-approve');
    };
    /**
    * Parses unapprove article comment reply route; this URI template does not support any additional items.
    * @method
    * @param data Article Comment Reply object.
    * @example baasicArticleCommentRepliesRouteDefinition.unapprove(data);
    **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.unapprove = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unapproveRoute, data, undefined, 'comment-unapprove');
    };
    /**
    * Parses flag article comment reply route; this URI template does not support any additional items.
    * @method
    * @param data Article Comment Reply object.
    * @example baasicArticleCommentRepliesRouteDefinition.flag(data);
    **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.flag = function (data) {
        return _super.prototype.baseUpdate.call(this, this.flagRoute, data, undefined, 'comment-flag');
    };
    /**
    * Parses unflag article comment reply route; this URI template does not support any additional items.
    * @method
    * @param data Article Comment Reply object.
    * @example baasicArticleCommentRepliesRouteDefinition.unflag(data);
    **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.unflag = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unflagRoute, data, undefined, 'comment-unflag');
    };
    /**
    * Parses report article comment reply route; this URI template does not support any additional items.
    * @method
    * @param data Article Comment Reply object.
    * @example baasicArticleCommentRepliesRouteDefinition.report(data);
    **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.report = function (data) {
        return _super.prototype.baseUpdate.call(this, this.reportRoute, data, undefined, 'comment-report');
    };
    /**
    * Parses unreport article comment reply route; this URI template does not support any additional items.
    * @method
    * @param data Article Comment Reply object.
    * @example baasicArticleCommentRepliesRouteDefinition.unreport(data);
    **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.unreport = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unreportRoute, data, undefined, 'comment-unreport');
    };
    /**
    * Parses spam article comment reply route; this URI template does not support any additional items.
    * @method
    * @param data Article Comment Reply object.
    * @example baasicArticleCommentRepliesRouteDefinition.spam(data);
    **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.spam = function (data) {
        return _super.prototype.baseUpdate.call(this, this.spamRoute, data, undefined, 'comment-spam');
    };
    /**
    * Parses unspam article comment reply route; this URI template does not support any additional items.
    * @method
    * @param data Article Comment Reply object.
    * @example baasicArticleCommentRepliesRouteDefinition.unspam(data);
    **/
    BaasicArticleCommentRepliesRouteDefinition.prototype.unspam = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unspamRoute, data, undefined, 'comment-unspam');
    };
    return BaasicArticleCommentRepliesRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleCommentRepliesRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleCommentRepliesRouteDefinition);
exports.BaasicArticleCommentRepliesRouteDefinition = BaasicArticleCommentRepliesRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleCommentsClient
 * @description Baasic Article Comments Client provides an easy way to consume Baasic Article Comments REST API end-points. `baasicArticleCommentsClient` functions enable performing standard CRUD operations directly on article comment resources, whereas the `baasicArticleClient` functions allow management between article and article comments. In order to obtain needed routes `baasicArticleCommentsClient` uses `baasicArticleCommentsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleCommentsClient = (function () {
    function BaasicArticleCommentsClient(baasicArticleCommentRepliesClient, baasicArticleCommentsRouteDefinition, baasicApiClient) {
        this.baasicArticleCommentRepliesClient = baasicArticleCommentRepliesClient;
        this.baasicArticleCommentsRouteDefinition = baasicArticleCommentsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        /**
        * Contains a reference to valid list of article comment states. It returns an object containing all article comment states.
        * @method
        * @example baasicArticleCommentsClient.statuses.approved;
        **/
        this.statuses = article_1.CommentStatus;
    }
    Object.defineProperty(BaasicArticleCommentsClient.prototype, "replies", {
        /**
         * Provides direct access to `baasicArticleCommentRepliesClient`.
         * @method
         **/
        get: function () {
            return this.baasicArticleCommentRepliesClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleCommentsClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicArticleCommentsRouteDefinition`.
         * @method
         * @example baasicArticleCommentsRouteDefinition.routeDefinition.get();
         **/
        get: function () {
            return this.baasicArticleCommentsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the approve article comment action has been performed. This action sets the state of an article comment to "approved". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-approve').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @param options Notification configuration used to control the article comment recourse access when managing notification distribution.
     * @returns A promise that is resolved once the approve article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleCommentsClient.approve(articleComment, commentOptions)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentsClient.prototype.approve = function (data, options) {
        return this.baasicApiClient.put(this.baasicArticleCommentsRouteDefinition.approve(data), this.baasicArticleCommentsRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the unapprove article comment action has been performed. This action sets the state of an article comment to "unapproved". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-unapprove').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the unapprove article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleCommentsClient.unapprove(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentsClient.prototype.unapprove = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentsRouteDefinition.unapprove(data), this.baasicArticleCommentsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the create article comment action has been performed; this action creates a new comment for an article.
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the create article comment action has been performed.
     * @example baasicArticleCommentsClient.create({
                        articleId : '<article-id>',
                        comment : <comment>,
                        userId : '<user-id>' })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleCommentsClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicArticleCommentsRouteDefinition.create(data), this.baasicArticleCommentsRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of article comment resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicArticleCommentsClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .success(function (collection) {
                    // perform success action here
                })
                .error(function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleCommentsClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicArticleCommentsRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the flag article comment action has been performed. This action sets the state of an article comment to "flagged". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-flag').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the flag article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleCommentsClient.flag(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentsClient.prototype.flag = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentsRouteDefinition.flag(data), this.baasicArticleCommentsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unflag article comment action has been performed. This action removes the "flagged" comment mark. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-unflag').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the unflag article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleCommentsClient.unflag(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentsClient.prototype.unflag = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentsRouteDefinition.unflag(data), this.baasicArticleCommentsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified article comment resource.
     * @method
     * @param id Id which uniquely identifies article comment resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicArticleCommentsClient.get('<article-id>', '<comment-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                       // perform error handling here
                   });
    **/
    BaasicArticleCommentsClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicArticleCommentsRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the remove article comment action has been performed. If the action is successfully completed, the article comment resource and its replies will be permanently removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     ```
     let params = modelMapper.removeParams(articleComment);
     let uri = params['model'].links('delete').href;
     ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the remove article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                       baasicArticleCommentsClient.remove(articleComment)
                           .then(function (data) {
                               // perform success action here
                           },
                            function (response, status, headers, config) {
                               // perform error handling here
                           });
    **/
    BaasicArticleCommentsClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleCommentsRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the report article comment action has been performed. This action sets the state of an article comment to "reported". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-report').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @param options Notification configuration used to control the article comment recourse access when managing notification distribution.
     * @returns A promise that is resolved once the report article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleCommentsClient.report(articleComment, commentOptions)
                        .success(function (data) {
                            // perform success action here
                        })
                        .error(function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentsClient.prototype.report = function (data, options) {
        return this.baasicApiClient.put(this.baasicArticleCommentsRouteDefinition.report(data), this.baasicArticleCommentsRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the unreport article comment action has been performed. This action removes the "reported" comment mark. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('comment-unreport').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the unreport article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleCommentsClient.unreport(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleCommentsClient.prototype.unreport = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentsRouteDefinition.unreport(data), this.baasicArticleCommentsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the update article comment action has been performed; this action updates an article comment resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicarticleCommentsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(articleComment);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data Article Comment object.
     * @returns A promise that is resolved once the update article comment action has been performed.
     * @example // articleComment is a resource previously fetched using get action.
                    baasicArticleCommentsClient.update(articleComment)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleCommentsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleCommentsRouteDefinition.update(data), this.baasicArticleCommentsRouteDefinition.updateParams(data));
    };
    return BaasicArticleCommentsClient;
}());
BaasicArticleCommentsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleCommentRepliesClient)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleCommentsRouteDefinition)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleCommentRepliesClient,
        article_1.BaasicArticleCommentsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleCommentsClient);
exports.BaasicArticleCommentsClient = BaasicArticleCommentsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleCommentsRouteDefinition
 * @description Baasic Article Comments Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Comments Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleCommentsRouteDefinition = (function (_super) {
    __extends(BaasicArticleCommentsRouteDefinition, _super);
    function BaasicArticleCommentsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'article-comments/{?searchQuery,statuses,page,rpp,sort,embed,fields}';
        _this.getRoute = 'article-comments/{id}/{?embed,fields}';
        _this.createRoute = 'article-comments/';
        _this.updateRoute = 'article-comments/{id}';
        _this.deleteRoute = 'article-comments/{id}';
        _this.approveRoute = 'article-comments/{id}/approve';
        _this.unapproveRoute = 'article-comments/{id}/unapprove';
        _this.flagRoute = 'article-comments/{id}';
        _this.unflagRoute = 'article-comments/{id}/unflag';
        _this.reportRoute = 'article-comments/{id}/report';
        _this.unreportRoute = 'article-comments/{id}/unreport';
        return _this;
    }
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify article comment resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article comment subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article comment property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * - `statuses` - Comma separated list of article comment states that specify where search should be done (Allowed states: Approved, Spam, Reported, Flagged and UnApproved).
     * @method
     * @param options Query resource options object.
     * @example baasicArticleCommentsRouteDefinition.find({ searchQuery: '<search-phrase>' });
     **/
    BaasicArticleCommentsRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route which can be expanded with additional options. Supported items are:
     * - `id` - Id which uniquely identifies article comment resource that needs to be retrieved.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param id Id which uniquely identifies article comment resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @example baasicArticleCommentsRouteDefinition.get().expand({ id: '<comment-id>' });
     **/
    BaasicArticleCommentsRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create route; this URI template doesnt support any additional options.
     * @method
     * @param data An article comment object that needs to be inserted into the system.
     * @example baasicArticleCommentsRouteDefinition.create(data);
     **/
    BaasicArticleCommentsRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses update route; this URI template doesnt support any additional options.
     * @method An article comment object used to update specified article comment resource.
     * @example baasicArticleCommentsRouteDefinition.update(data);
     **/
    BaasicArticleCommentsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete route; this URI template doesnt support any additional options.
     * @method An article comment object used to delete specified article comment resource.
     * @example baasicArticleCommentsRouteDefinition.delete(data);
     **/
    BaasicArticleCommentsRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
    * Parses approve route; this URI template doesnt support any additional options.
    * @method An article comment object.
    * @example baasicArticleCommentsRouteDefinition.approve(data);
    **/
    BaasicArticleCommentsRouteDefinition.prototype.approve = function (data) {
        return _super.prototype.baseUpdate.call(this, this.approveRoute, data, undefined, 'comment-approve');
    };
    /**
    * Parses unapprove route; this URI template doesnt support any additional options.
    * @method An article comment object.
    * @example baasicArticleCommentsRouteDefinition.unapprove(data);
    **/
    BaasicArticleCommentsRouteDefinition.prototype.unapprove = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unapproveRoute, data, undefined, 'comment-unapprove');
    };
    /**
    * Parses flag route; this URI template doesnt support any additional options.
    * @method An article comment object.
    * @example baasicArticleCommentsRouteDefinition.flag(data);
    **/
    BaasicArticleCommentsRouteDefinition.prototype.flag = function (data) {
        return _super.prototype.baseUpdate.call(this, this.flagRoute, data, undefined, 'comment-flag');
    };
    /**
    * Parses unflag route; this URI template doesnt support any additional options.
    * @method An article comment object.
    * @example baasicArticleCommentsRouteDefinition.unflag(data);
    **/
    BaasicArticleCommentsRouteDefinition.prototype.unflag = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unflagRoute, data, undefined, 'comment-unflag');
    };
    /**
    * Parses report route; this URI template doesnt support any additional options.
    * @method An article comment object.
    * @example baasicArticleCommentsRouteDefinition.report(data);
    **/
    BaasicArticleCommentsRouteDefinition.prototype.report = function (data) {
        return _super.prototype.baseUpdate.call(this, this.reportRoute, data, undefined, 'comment-report');
    };
    /**
    * Parses unreport route; this URI template doesnt support any additional options.
    * @method An article comment object.
    * @example baasicArticleCommentsRouteDefinition.unreport(data);
    **/
    BaasicArticleCommentsRouteDefinition.prototype.unreport = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unreportRoute, data, undefined, 'comment-unreport');
    };
    return BaasicArticleCommentsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleCommentsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleCommentsRouteDefinition);
exports.BaasicArticleCommentsRouteDefinition = BaasicArticleCommentsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleFilesBatchClient
 * @description Baasic Files Batch Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleFilesBatchClient = (function () {
    function BaasicArticleFilesBatchClient(baasicArticleFilesBatchRouteDefinition, baasicApiClient) {
        this.baasicArticleFilesBatchRouteDefinition = baasicArticleFilesBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleFilesBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleFilesBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the unlink action has been performed. This action will remove file resources from the system if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will remove just derived resource. Otherwise, specified file and all its accompanying derived resources will be removed from the system.
     * @method
     * @example // Remove original file resources
                   baasicArticleFilesBatchClient.unlink([{ id: '<file-id>' }])
                       .then(function (data) {
                           // perform success action here
                       },
                        function (response, status, headers, config) {
                           // perform error handling here
                       });
               // Remove derived file resources
                   baasicArticleFilesBatchClient.unlink([{ id: '<file-id>', fileFormat: { width: <width>, height: <height> } }])
                       .then(function (data) {
                           // perform success action here
                       },
                        function (response, status, headers, config) {
                           // perform error handling here
                       });
    **/
    BaasicArticleFilesBatchClient.prototype.unlink = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleFilesBatchRouteDefinition.unlink(), undefined, data);
    };
    /**
     * Returns a promise that is resolved once the update action has been performed; this action updates specified file resources.
     * @method
     * @example baasicArticleFilesClient.batch.update(files)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleFilesBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleFilesBatchRouteDefinition.update(), this.baasicArticleFilesBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the link action has been performed; this action links file resources from other modules into the Files module (For example: file resources from the Media Vault module can be linked directly into the Files module).
     * @method
     * @example baasicArticleFilesClient.batch.link(files)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleFilesBatchClient.prototype.link = function (data) {
        return this.baasicApiClient.post(this.baasicArticleFilesBatchRouteDefinition.link(), this.baasicArticleFilesBatchRouteDefinition.createParams(data));
    };
    return BaasicArticleFilesBatchClient;
}());
BaasicArticleFilesBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleFilesBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleFilesBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleFilesBatchClient);
exports.BaasicArticleFilesBatchClient = BaasicArticleFilesBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleFilesBatchRouteDefinition
 * @description Baasic Article Files Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Files Batch Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleFilesBatchRouteDefinition = (function (_super) {
    __extends(BaasicArticleFilesBatchRouteDefinition, _super);
    function BaasicArticleFilesBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.unlinkRoute = 'article-files/batch/unlink';
        _this.updateRoute = 'article-files/batch';
        _this.linkRoute = 'article-files/batch/link';
        return _this;
    }
    /**
     * Parses unlink route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleFilesBatchRouteDefinition.unlink();
     **/
    BaasicArticleFilesBatchRouteDefinition.prototype.unlink = function () {
        return _super.prototype.baseCreate.call(this, this.unlinkRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleFilesStreamsRouteDefinition.update();
     **/
    BaasicArticleFilesBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseCreate.call(this, this.updateRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleFilesStreamsRouteDefinition.link();
     **/
    BaasicArticleFilesBatchRouteDefinition.prototype.link = function () {
        return _super.prototype.baseCreate.call(this, this.linkRoute, {});
    };
    return BaasicArticleFilesBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleFilesBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleFilesBatchRouteDefinition);
exports.BaasicArticleFilesBatchRouteDefinition = BaasicArticleFilesBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleFilesClient
 * @description Baasic Files Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleFilesClient = (function () {
    function BaasicArticleFilesClient(baasicArticleFilesRouteDefinition, baasicArticleFilesStreamsClient, BaasicArticleFilesBatchClient, baasicApiClient) {
        this.baasicArticleFilesRouteDefinition = baasicArticleFilesRouteDefinition;
        this.baasicArticleFilesStreamsClient = baasicArticleFilesStreamsClient;
        this.BaasicArticleFilesBatchClient = BaasicArticleFilesBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleFilesClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleFilesRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleFilesClient.prototype, "streams", {
        get: function () {
            return this.baasicArticleFilesStreamsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleFilesClient.prototype, "batch", {
        get: function () {
            return this.BaasicArticleFilesBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of file resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicArticleFilesClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleFilesClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicArticleFilesRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns requested file resource.
     * @method
     * @param id Article file id which uniquely identifies article resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicArticleFilesClient.get('<file-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                       // perform error handling here
                   });
    **/
    BaasicArticleFilesClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicArticleFilesRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the unlink action has been performed. This action will remove one or many file resources from the system if successfully completed. Specified file and all its accompanying derived resources will be removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply baasicArticleFilesRouteService route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(fileEntry);
     * let uri = params['model'].links('unlink').href;
     * ```
     * @method
     * @param data Article file object.
     * @param options options object.
     * @returns A promise that is resolved once the unlink action has been performed.
     * @example // fileEntry is a file resource previously fetched using get action. The following action will remove the original file resource and all accompanying derived file resources.
                    baasicArticleFilesRouteDefinition.remove(fileEntry)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleFilesClient.prototype.unlink = function (data, options) {
        if (!options) {
            options = {};
        }
        return this.baasicApiClient.delete(this.baasicArticleFilesRouteDefinition.unlink(data, options));
    };
    /**
     * Returns a promise that is resolved once the update file action has been performed; this action will update a file resource if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleFilesRouteService` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     ```
     let params = modelMapper.updateParams(fileEntry);
     let uri = params['model'].links('put').href;
     ```
     * @method
     * @param data Article file object that need to be updated in the system.
     * @returns A promise that is resolved once the update file action has been performed.
     * @example // fileEntry is a file resource previously fetched using get action.
                   fileEntry.description = '<description>';
                   baasicArticleFilesClient.update(fileEntry)
                       .then(function (data) {
                           // perform success action here
                       },
                        function (response, status, headers, config) {
                           // perform error handling here
                       });
    **/
    BaasicArticleFilesClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleFilesRouteDefinition.update(data), this.baasicArticleFilesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the link action has been performed; this action links file resource from other modules into the Article Files module (For example: file resources from the Media Vault module can be linked directly into the Article Files module).
     * @method
     * @param data Article file object.
     * @returns A promise that is resolved once the link action has been performed.
     * @example baasicArticleFilesClient.link(fileObject)
                    .then(function (response, status, headers, config) {
                        // perform success handling here
                    },
                        function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleFilesClient.prototype.link = function (data) {
        return this.baasicApiClient.post(this.baasicArticleFilesRouteDefinition.link(), this.baasicArticleFilesRouteDefinition.createParams(data));
    };
    return BaasicArticleFilesClient;
}());
BaasicArticleFilesClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleFilesRouteDefinition)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleFilesStreamsClient)),
    __param(2, inversify_1.inject(article_1.TYPES.BaasicArticleFilesBatchClient)),
    __param(3, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleFilesRouteDefinition,
        article_1.BaasicArticleFilesStreamsClient,
        article_1.BaasicArticleFilesBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicArticleFilesClient);
exports.BaasicArticleFilesClient = BaasicArticleFilesClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleFilesRouteDefinition
 * @description Baasic Article Files Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Files Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var article_1 = __webpack_require__(5);
var BaasicArticleFilesRouteDefinition = (function (_super) {
    __extends(BaasicArticleFilesRouteDefinition, _super);
    function BaasicArticleFilesRouteDefinition(baasicArticleFilesStreamsRouteDefinition, baasicArticleFilesBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicArticleFilesStreamsRouteDefinition = baasicArticleFilesStreamsRouteDefinition;
        _this.baasicArticleFilesBatchRouteDefinition = baasicArticleFilesBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'article-files/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'article-files/{id}/{?embed,fields}';
        _this.linkRoute = 'article-files/link';
        _this.unlinkRoute = 'article-files/unlink/{id}';
        _this.updateRoute = 'article-files/{id}';
        return _this;
    }
    Object.defineProperty(BaasicArticleFilesRouteDefinition.prototype, "streams", {
        get: function () {
            return this.baasicArticleFilesStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleFilesRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicArticleFilesBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing file properties using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain file subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the file property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicArticleFilesRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicArticleFilesRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route should be expanded with the Id of the file resource.
     * @method
     * @param id Article file id which uniquely identifies article resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @example baasicArticleFilesRouteDefinition.get({id: '<file-id>'});
     **/
    BaasicArticleFilesRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses link route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleFilesRouteDefinition.link();
     **/
    BaasicArticleFilesRouteDefinition.prototype.link = function () {
        return _super.prototype.baseCreate.call(this, this.linkRoute, {});
    };
    /**
     * Parses unlink route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleFilesRouteDefinition.unlink(data);
     **/
    BaasicArticleFilesRouteDefinition.prototype.unlink = function (data, options) {
        return _super.prototype.baseDelete.call(this, this.unlinkRoute, data, options, 'unlink');
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicArticleFilesRouteDefinition.update(data);
     **/
    BaasicArticleFilesRouteDefinition.prototype.update = function (data) {
        if (!this.utility.isObject(data)) {
            data = {
                id: data
            };
        }
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicArticleFilesRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleFilesRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleFilesStreamsRouteDefinition)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleFilesBatchRouteDefinition)),
    __param(2, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [article_1.BaasicArticleFilesStreamsRouteDefinition,
        article_1.BaasicArticleFilesBatchRouteDefinition, Object])
], BaasicArticleFilesRouteDefinition);
exports.BaasicArticleFilesRouteDefinition = BaasicArticleFilesRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleFilesStreamsClient
 * @description Baasic Article Files Streams Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Streams Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleFilesStreamsClient = (function () {
    function BaasicArticleFilesStreamsClient(baasicArticleFilesStreamsRouteDefinition, baasicApiClient) {
        this.baasicArticleFilesStreamsRouteDefinition = baasicArticleFilesStreamsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleFilesStreamsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleFilesStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the file stream if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will return a stream of the derived resource. Otherwise, stream of the original file resource will be retrieved.
     * @method streams.get
     * @example // Request the original file stream
                    baasicArticleFilesStreamsClient.get({id: '<file-id>'})
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });

                // Request derived file stream
                        baasicArticleFilesStreamsClient.get({id: '<file-id>', width: <width>, height: <height>})
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicArticleFilesStreamsClient.prototype.get = function (data) {
        return this.baasicApiClient.get(this.baasicArticleFilesStreamsRouteDefinition.get(data));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the file stream as a blob. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will return a blob of the derived file resource. Otherwise, blob of the original file resource will be retrieved. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method streams.getBlob
     * @example // Request the original blob
                    baasicArticleFilesStreamsClient.getBlob('<file-id>')
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
                        
                // Request derived blob
                        baasicArticleFilesStreamsClient.getBlob({
                            id: '<file-id>',
                            width: <width>,
                            height: <height>
                        })
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleFilesStreamsClient.prototype.getBlob = function (data) {
        return this.baasicApiClient.get(this.baasicArticleFilesStreamsRouteDefinition.get(data), { 'Accept': 'application/octet-stream' });
    };
    /**
     * Returns a promise that is resolved once the update file stream action has been performed; this action will replace the existing stream with a new one. Alternatively, if a derived stream is being updated it will either create a new derived stream or replace the existing one. In order to update a derived stream, format needs to be passed (For example: `width` and `height` for the image type of file stream data type).
     * @method streams.update
     * @example // Update original file stream
                    baasicArticleFilesStreamsClient.update('<file-id>', <file-stream>)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
                // Update derived file stream
                    baasicArticleFilesStreamsClient.update({id: '<file-id>', width: <width>, height: <height>}, <file-stream>)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleFilesStreamsClient.prototype.update = function (data, stream) {
        var formData = new FormData();
        formData.append('file', stream);
        return this.baasicApiClient.put(this.baasicArticleFilesStreamsRouteDefinition.update(data), formData, { 'Content-Type': undefined });
    };
    /**
     * Returns a promise that is resolved once the create file stream action has been performed; this action will upload the specified blob. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method streams.create
     * @example baasicArticleFilesStreamsClient.create('<file-id>', <blob>)
                   .then(function (data) {
                        // perform success action here
                   },
                    function (response, status, headers, config) {
                       // perform error handling here
                   });
    **/
    BaasicArticleFilesStreamsClient.prototype.create = function (data, stream) {
        var formData = new FormData();
        formData.append('file', stream);
        return this.baasicApiClient.post(this.baasicArticleFilesStreamsRouteDefinition.create(data), formData, { 'Content-Type': undefined });
    };
    return BaasicArticleFilesStreamsClient;
}());
BaasicArticleFilesStreamsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleFilesStreamsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleFilesStreamsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleFilesStreamsClient);
exports.BaasicArticleFilesStreamsClient = BaasicArticleFilesStreamsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleFilesStreamsRouteDefinition
 * @description Baasic Article Files Streams Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Files Streams Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleFilesStreamsRouteDefinition = (function (_super) {
    __extends(BaasicArticleFilesStreamsRouteDefinition, _super);
    function BaasicArticleFilesStreamsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'article-file-streams/{id}/{?width,height}';
        _this.createRoute = 'article-file-streams/{filename}/{?articleId}';
        _this.updateRoute = 'article-file-streams/{id}/{?width,height}';
        return _this;
    }
    /**
     * Parses get route; this route should be expanded with id of desired file stream. Additional supported items are:
     * - `width` - width of desired derived image.
     * - `height` - height of desired derived image.
     * @method
     * @example baasicArticleFilesRouteDefinition.get({id: '<filename>'});
     **/
    BaasicArticleFilesStreamsRouteDefinition.prototype.get = function (data) {
        if (!this.utility.isObject(data)) {
            data = {
                id: data
            };
        }
        return _super.prototype.baseCreate.call(this, this.getRoute, data);
    };
    /**
     * Parses create route; this route should be expanded with the filename which indicates where the stream will be saved.
     * @method
     * @example baasicArticleFilesRouteDefinition.create({filename: '<filename>'});
     **/
    BaasicArticleFilesStreamsRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses update route; this route should be expanded with the id of the previously saved resource. Additional supported items are:
     * - `width` - width of derived image to update.
     * - `height` - height of derived image to update.
     * @method
     * @example baasicArticleFilesRouteDefinition.update({id: '<filename>'});
     **/
    BaasicArticleFilesStreamsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicArticleFilesStreamsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleFilesStreamsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleFilesStreamsRouteDefinition);
exports.BaasicArticleFilesStreamsRouteDefinition = BaasicArticleFilesStreamsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleRatingsClient
 * @description Baasic Article Ratings Client provides an easy way to consume Baasic Article Ratings REST API end-points. `baasicArticleRatingsClient` functions enable performing standard CRUD operations directly on article rating resources, whereas the `baasicArticleService` functions allow management between article and article rating. In order to obtain needed routes `baasicArticleRatingsClient` uses `baasicArticleRatingsRouteDefinition`.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleRatingsClient = (function () {
    function BaasicArticleRatingsClient(baasicArticleRatingsRouteDefinition, baasicApiClient) {
        this.baasicArticleRatingsRouteDefinition = baasicArticleRatingsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleRatingsClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicArticleRatingsRouteDefinition`.
         * @method
         * @example baasicArticleRatingsClient.routeDefinition.get(id);
         **/
        get: function () {
            return this.baasicArticleRatingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create article rating action has been performed; this action creates a new rating for an article.
     * @method
     * @param data An article rating object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create article rating action has been performed.
     * @example baasicArticleRatingsClient.create({
                    articleId : '<article-id>',
                    rating : 5,
                    userId : '<user-id>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleRatingsClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicArticleRatingsRouteDefinition.create(data), this.baasicArticleRatingsRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of article rating resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicArticleRatingsClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleRatingsClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicArticleRatingsRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the findByUser action has been performed. Success response returns a list of article rating resources filtered by username.
     * @method
     * @param username Username which uniquely identifies a user which has created an article rating.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the findByUser action has been performed.
     * @example baasicArticleRatingsClient.find('<username>', {
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleRatingsClient.prototype.findByUser = function (username, options) {
        return this.baasicApiClient.get(this.baasicArticleRatingsRouteDefinition.findByUser(username, options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified article rating resource.
     * @method
     * @param id Id which uniquely identifies article rating resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicArticleRatingsClient.get('<articleRating-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleRatingsClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicArticleRatingsRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update article rating action has been performed; this action updates an article rating. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRatingsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(articleRating);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An article object used to update specified article rating resource.
     * @returns A promise that is resolved once the update article rating action has been performed.
     * @example // articleRating is a resource previously fetched using get action.
                    articleRating.rating = 4;
                    baasicArticleRatingsClient.update(articleRating)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleRatingsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleRatingsRouteDefinition.update(data), this.baasicArticleRatingsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove article rating action has been performed. If the action is successfully completed, the article rating resource will be permanently removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRatingsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(articleRating);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An article object used to delete specified article rating resource.
     * @returns A promise that is resolved once the remove article rating action has been performed.
     * @example // articleRating is a resource previously fetched using get action.
                    baasicArticleRatingsClient.remove(articleRating)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleRatingsClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleRatingsRouteDefinition.delete(data));
    };
    return BaasicArticleRatingsClient;
}());
BaasicArticleRatingsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleRatingsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleRatingsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleRatingsClient);
exports.BaasicArticleRatingsClient = BaasicArticleRatingsClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleRatingsRouteDefinition
 * @description Baasic Article Ratings Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Ratings Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleRatingsRouteDefinition = (function (_super) {
    __extends(BaasicArticleRatingsRouteDefinition, _super);
    function BaasicArticleRatingsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'article-ratings';
        _this.findRoute = 'article-ratings/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.findByUserRoute = 'article-ratings/{?username,page,rpp,sort,embed,fields}';
        _this.getRoute = 'article-ratings/{id}/{?embed,fields}';
        _this.updateRoute = 'article-ratings/{id}';
        _this.deleteRoute = 'article-ratings/{id}';
        return _this;
    }
    /**
     * Parses create article rating route; this URI does not support any additional embed items.
     * @method
     * @param data An article rating object that needs to be inserted into the system.
     * @example baasicArticleRatingsRouteDefinition.create(data);
     **/
    BaasicArticleRatingsRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses find article rating route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing article rating properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article rating subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article rating property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicArticleRatingsRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicArticleRatingsRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses findByUser article rating route which can be expanded with additional options. Supported items are:
     * - `username` - A value that uniquely identifies a user which has created an article rating.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article rating subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article rating property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param username Username which uniquely identifies a user which has created an article rating.
     * @param options Query resource options object.
     * @example baasicArticleRatingsRouteDefinition.find({username: '<username>'});
     **/
    BaasicArticleRatingsRouteDefinition.prototype.findByUser = function (username, options) {
        var params = this.utility.extend({}, options);
        params.username = username;
        return _super.prototype.baseFind.call(this, this.findByUserRoute, params);
    };
    /**
     * Parses get article rating route which must be expanded with the Id of the previously created article rating resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param id Id which uniquely identifies article rating resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @example baasicArticleRatingsRouteDefinition.get({id: '<articleRating-id>'});
     **/
    BaasicArticleRatingsRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses update article rating route; this URI does not support any additional embed items.
     * @method
     * @param data An article object used to update specified article rating resource.
     * @example baasicArticleRatingsRouteDefinition.update(data);
     **/
    BaasicArticleRatingsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
    * Parses delete article rating route; this URI does not support any additional embed items.
    * @method
    * @param data An article object used to delete specified article rating resource.
    * @example baasicArticleRatingsRouteDefinition.delete(data);
    **/
    BaasicArticleRatingsRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicArticleRatingsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleRatingsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleRatingsRouteDefinition);
exports.BaasicArticleRatingsRouteDefinition = BaasicArticleRatingsRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleRouteDefinition
 * @description Baasic Article Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var article_1 = __webpack_require__(5);
var BaasicArticleRouteDefinition = (function (_super) {
    __extends(BaasicArticleRouteDefinition, _super);
    function BaasicArticleRouteDefinition(baasicArticleSubscriptionsRouteDefinition, baasicArticleInstanceCommentsRouteDefinition, baasicArticleInstanceFilesRouteDefinition, baasicArticleInstanceRatingsRouteDefinition, baasicArticleInstanceTagsRouteDefinition, baasicArticleACLRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicArticleSubscriptionsRouteDefinition = baasicArticleSubscriptionsRouteDefinition;
        _this.baasicArticleInstanceCommentsRouteDefinition = baasicArticleInstanceCommentsRouteDefinition;
        _this.baasicArticleInstanceFilesRouteDefinition = baasicArticleInstanceFilesRouteDefinition;
        _this.baasicArticleInstanceRatingsRouteDefinition = baasicArticleInstanceRatingsRouteDefinition;
        _this.baasicArticleInstanceTagsRouteDefinition = baasicArticleInstanceTagsRouteDefinition;
        _this.baasicArticleACLRouteDefinition = baasicArticleACLRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'articles/{?searchQuery,page,rpp,sort,embed,fields,statuses,tags,startDate,endDate}';
        _this.getRoute = 'articles/{id}/{?embed,fields}';
        _this.publishRoute = 'articles/{id}/publish/';
        _this.purgeRoute = 'articles/purge/';
        _this.createRoute = 'articles';
        _this.updateRoute = 'articles/{id}';
        _this.deleteRoute = 'articles/{id}';
        _this.archiveRoute = 'articles/{id}/archive';
        _this.restoreRoute = 'articles/{id}/restore';
        _this.unpublishRoute = 'articles/{id}/unpublish';
        return _this;
    }
    Object.defineProperty(BaasicArticleRouteDefinition.prototype, "subscriptions", {
        get: function () {
            return this.baasicArticleSubscriptionsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleRouteDefinition.prototype, "comments", {
        get: function () {
            return this.baasicArticleInstanceCommentsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleRouteDefinition.prototype, "files", {
        get: function () {
            return this.baasicArticleInstanceFilesRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleRouteDefinition.prototype, "ratings", {
        get: function () {
            return this.baasicArticleInstanceRatingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleRouteDefinition.prototype, "tags", {
        get: function () {
            return this.baasicArticleInstanceTagsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleRouteDefinition.prototype, "acl", {
        get: function () {
            return this.baasicArticleACLRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find article route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing article properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * - `startDate` - A value used to specify the article creation, publish or archive date date starting from which article resource collection should be returned.
     * - `endDate` - A value used to specify the article creation, publish or archive date until (and including) which article resource collection should be returned.
     * - `statuses` - Comma separated list of article statuses that specify where search should be done (Allowed statuses: Published, Draft and Archived).
     * - `tags` - A value used to restrict the search to article resources with these tags. Multiple tags should be comma separated.
     * @method
     * @param options A promise that is resolved once the find action has been performed.
     * @example baasicArticleRouteDefinition.find.expand({searchQuery: '<search-phrase>'});
     **/
    BaasicArticleRouteDefinition.prototype.find = function (options) {
        var opt = options || {};
        opt.startDate = this.getStartDate(opt);
        opt.endDate = this.getEndDate(opt);
        return _super.prototype.baseFind.call(this, this.findRoute, opt);
    };
    /**
     * Parses get article route which must be expanded with the Id of the previously created article resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param id Article slug or id which uniquely identifies article resource that needs to be retrieved.
     * @param options Options object that contains embed items.
     * @example baasicArticleRouteDefinition.get({id: '<article-id>'});
     **/
    BaasicArticleRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses publish article route which must be expanded with the Id of the previously created article resource in the system.
     * @method
     * @param data An article object.
     * @example baasicArticleRouteDefinition.publish.expand({id: '<article-id>'});
     **/
    BaasicArticleRouteDefinition.prototype.publish = function (data) {
        return _super.prototype.baseGet.call(this, this.publishRoute, data);
    };
    /**
     * Parses purge article route, this URI template doesn't expose any additional properties.
     * @method
     * @example baasicArticleRouteDefinition.purge();
     **/
    BaasicArticleRouteDefinition.prototype.purge = function (options) {
        return _super.prototype.baseCreate.call(this, this.purgeRoute, options);
    };
    /**
     * Parses create article route; this URI template doesn't expose any additional properties.
     * @method
     * @example baasicArticleRouteDefinition.create();
     **/
    BaasicArticleRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update article route; this URI template doesn't expose any additional properties.
     * @method
     * @param data An article object that needs to be updated into the system.
     * @example baasicArticleRouteDefinition.update(data);
     **/
    BaasicArticleRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete article route; this URI template doesn't expose any additional properties.
     * @method
     * @param data An article object that needs to be removed from the system.
     * @example baasicArticleRouteDefinition.delete(data);
     **/
    BaasicArticleRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
     * Parses archive article route; this URI template doesn't expose any additional properties.
     * @method
     * @param data An article object.
     * @example baasicArticleRouteDefinition.archive(data);
     **/
    BaasicArticleRouteDefinition.prototype.archive = function (data) {
        return _super.prototype.baseUpdate.call(this, this.archiveRoute, data, undefined, 'archive');
    };
    /**
     * Parses restore article route; this URI template doesn't expose any additional properties.
     * @method
     * @example baasicArticleRouteDefinition.restore(data);
     **/
    BaasicArticleRouteDefinition.prototype.restore = function (data) {
        return _super.prototype.baseUpdate.call(this, this.restoreRoute, data, undefined, 'restore');
    };
    /**
     * Returns a promise that is resolved once the unpublish article action has been performed. This action sets the status of an article from "published" to "draft". This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(article);
     * let uri = params['model'].links('unpublish').href;
     * ```
     * @method
     * @example // article is a resource previously fetched using get action.
                    baasicArticleClient.unpublish(article)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicArticleRouteDefinition.prototype.unpublish = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unpublishRoute, data, undefined, 'unpublish');
    };
    BaasicArticleRouteDefinition.prototype.getStartDate = function (options) {
        if (!this.utility.isUndefined(options.startDate) && options.startDate !== null) {
            return options.startDate.toISOString();
        }
        return undefined;
    };
    BaasicArticleRouteDefinition.prototype.getEndDate = function (options) {
        if (!this.utility.isUndefined(options.endDate) && options.endDate !== null) {
            return options.endDate.toISOString();
        }
        return undefined;
    };
    return BaasicArticleRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsRouteDefinition)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceCommentsRouteDefinition)),
    __param(2, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceFilesRouteDefinition)),
    __param(3, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceRatingsRouteDefinition)),
    __param(4, inversify_1.inject(article_1.TYPES.BaasicArticleInstanceTagsRouteDefinition)),
    __param(5, inversify_1.inject(article_1.TYPES.BaasicArticleACLRouteDefinition)),
    __param(6, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [article_1.BaasicArticleSubscriptionsRouteDefinition,
        article_1.BaasicArticleInstanceCommentsRouteDefinition,
        article_1.BaasicArticleInstanceFilesRouteDefinition,
        article_1.BaasicArticleInstanceRatingsRouteDefinition,
        article_1.BaasicArticleInstanceTagsRouteDefinition,
        article_1.BaasicArticleACLRouteDefinition, Object])
], BaasicArticleRouteDefinition);
exports.BaasicArticleRouteDefinition = BaasicArticleRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSettingsClient
 * @description Baasic Article Settings Client provides an easy way to consume Baasic Article Settings REST API end-points. In order to obtain needed routes `baasicArticleSettingsClient` uses `baasicArticleSettingsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleSettingsClient = (function () {
    function BaasicArticleSettingsClient(baasicArticleSettingsRouteDefinition, baasicApiClient) {
        this.baasicArticleSettingsRouteDefinition = baasicArticleSettingsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleSettingsClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicArticleSettingsRouteService`.
         * @method
         * @example baasicArticleSettingsClient.routeDefinition.get().expand(expandObject);
         **/
        get: function () {
            return this.baasicArticleSettingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the article settings.
     * @param options options object
     * @method
     * @param options Options object that contains embed data.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicArticleSettingsClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleSettingsClient.prototype.get = function (options) {
        return this.baasicApiClient.get(this.baasicArticleSettingsRouteDefinition.get(options));
    };
    /**
     * Returns a promise that is resolved once the update article settings action has been performed; this action updates article settings. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleSettingsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(articleSettings);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param options Options object that contains embed data.
     * @returns A promise that is resolved once the update article settings action has been performed.
     * @example // articleSettings is a resource previously fetched using get action.
                    articleSettings.allowArchive = true;
                    baasicArticleSettingsClient.update(articleSettings)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleSettingsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleSettingsRouteDefinition.update(data), this.baasicArticleSettingsRouteDefinition.updateParams(data));
    };
    return BaasicArticleSettingsClient;
}());
BaasicArticleSettingsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleSettingsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleSettingsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleSettingsClient);
exports.BaasicArticleSettingsClient = BaasicArticleSettingsClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
* @module baasicArticleSettingsRouteDefinition
* @description Baasic Article Settings Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Settings Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleSettingsRouteDefinition = (function (_super) {
    __extends(BaasicArticleSettingsRouteDefinition, _super);
    function BaasicArticleSettingsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'article-settings/{?embed,fields}';
        _this.updateRoute = 'article-settings/{id}';
        return _this;
    }
    /**
     * Parses get article settings route; this URI template doesn't expose any additional properties.
     * @method
     * @param options Options object that contains embed data.
     * @example baasicArticleSettingsRouteDefinition.get(options);
     **/
    BaasicArticleSettingsRouteDefinition.prototype.get = function (options) {
        return _super.prototype.baseGet.call(this, this.getRoute, undefined, options);
    };
    /**
     * Parses update article settings route; this URI template doesn't expose any additional properties.
     * @method
     * @param options Options object that contains embed data.
     * @example baasicArticleSettingsRouteDefinition.update(data);
     **/
    BaasicArticleSettingsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicArticleSettingsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleSettingsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleSettingsRouteDefinition);
exports.BaasicArticleSettingsRouteDefinition = BaasicArticleSettingsRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleSubscriptionsArticleModuleClient
 * @description Baasic Article Subscriptions Article Module Client provides an easy way to consume Baasic Articles REST API end-points. In order to obtain needed routes `baasicArticleSubscriptionsClient` uses `baasicArticleSubscriptionsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleSubscriptionsClient = (function () {
    function BaasicArticleSubscriptionsClient(baasicArticleSubscriptionsRouteDefinition, baasicApiClient) {
        this.baasicArticleSubscriptionsRouteDefinition = baasicArticleSubscriptionsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleSubscriptionsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleSubscriptionsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the subscribe action has been performed. This action subscribes an user to the article module.
     * @method
     * @example baasicArticleSubscriptionsArticleModuleClient.subscribe(data)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicArticleSubscriptionsClient.prototype.subscribe = function (data) {
        return this.baasicApiClient.post(this.baasicArticleSubscriptionsRouteDefinition.subscribe(data), data);
    };
    /**
     * Returns a promise that is resolved once the isSubscribed action has been performed. This action checks if a user is subscribed to the article module.
     * @method
     * @example baasicArticleSubscriptionsArticleModuleClient.isSubscribe(data)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
     **/
    BaasicArticleSubscriptionsClient.prototype.isSubscribed = function (data) {
        return this.baasicApiClient.get(this.baasicArticleSubscriptionsRouteDefinition.isSubscribed(data));
    };
    /**
     * Returns a promise that is resolved once the unSubscribe action has been performed. This action unsubscribes a user from the article module.
     * @method
     * @example baasicArticleSubscriptionsArticleModuleClient.unSubscribe(data)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });                          **/
    BaasicArticleSubscriptionsClient.prototype.unSubscribe = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleSubscriptionsRouteDefinition.unSubscribe(data));
    };
    return BaasicArticleSubscriptionsClient;
}());
BaasicArticleSubscriptionsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleSubscriptionsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleSubscriptionsClient);
exports.BaasicArticleSubscriptionsClient = BaasicArticleSubscriptionsClient;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module BaasicArticleSubscriptionsRouteDefinition
 * @description Baasic Article Subscriptions Article Module Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Subscriptions Article Module Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleSubscriptionsRouteDefinition = (function (_super) {
    __extends(BaasicArticleSubscriptionsRouteDefinition, _super);
    function BaasicArticleSubscriptionsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.subscribeRoute = 'articles/subscriptions';
        _this.isSubscribedRoute = 'articles/subscriptions/{subscriberId}';
        _this.unSubscribeRoute = 'articles/subscriptions';
        return _this;
    }
    /**
     * Parses article module subscribe route which doesn't support any additional options.
     * @method
     * @example baasicArticleSubscriptionsRouteDefinition.subscribe(data);
     **/
    BaasicArticleSubscriptionsRouteDefinition.prototype.subscribe = function (data) {
        return _super.prototype.baseCreate.call(this, this.subscribeRoute, data);
    };
    /**
     * Parses article module isSubscribed route which must be expanded with subscriber Id
     * @method
     * @example baasicArticleSubscriptionsRouteDefinition.isSubscribed({subscriberId: '<subscriber-id>'});
     **/
    BaasicArticleSubscriptionsRouteDefinition.prototype.isSubscribed = function (data) {
        return _super.prototype.baseCreate.call(this, this.isSubscribedRoute, data);
    };
    /**
     * Parses article module unSubscribe route which doesn't support any additional options.
     * @method
     * @example baasicArticleSubscriptionsRouteDefinition.unSubscribe(data);
     **/
    BaasicArticleSubscriptionsRouteDefinition.prototype.unSubscribe = function (data) {
        return _super.prototype.baseCreate.call(this, this.unSubscribeRoute, data);
    };
    return BaasicArticleSubscriptionsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleSubscriptionsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleSubscriptionsRouteDefinition);
exports.BaasicArticleSubscriptionsRouteDefinition = BaasicArticleSubscriptionsRouteDefinition;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleTagsDefinition
 * @description Baasic Article Tags Definition provides an easy way to consume Baasic Article Tags REST API end-points. `baasicArticleTagsDefinition` functions enable performing standard CRUD operations directly on article tag resources, whereas the `baasicArticleClient` functions allow management between article and article tag. In order to obtain needed routes `baasicArticleTagsDefinition` uses `baasicArticleTagsRouteDefinition`.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleTagsClient = (function () {
    function BaasicArticleTagsClient(baasicArticleTagsRouteDefinition, baasicArticleTagsSubscriptionsClient, baasicApiClient) {
        this.baasicArticleTagsRouteDefinition = baasicArticleTagsRouteDefinition;
        this.baasicArticleTagsSubscriptionsClient = baasicArticleTagsSubscriptionsClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleTagsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleTagsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicArticleTagsClient.prototype, "subscriptions", {
        get: function () {
            return this.baasicArticleTagsSubscriptionsClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of article tag resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicArticleTagsClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicArticleTagsClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicArticleTagsRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified article tag resource.
     * @method
     * @param id Article tag id or slug that uniquely identifies article tag resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicArticleTagsClient.get('<articleTag-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                       // perform error handling here
                   });
    **/
    BaasicArticleTagsClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicArticleTagsRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update article tag action has been performed; this action updates a tag. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleTagsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(articleTag);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An article tag object used to update specified article tag resource.
     * @returns A promise that is resolved once the update article tag action has been performed.
     * @example // articleTag is a resource previously fetched using get action.
                    articleTag.tag = '<new-tag>';
                    baasicArticleTagsClient.update(articleTag)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleTagsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicArticleTagsRouteDefinition.update(data), this.baasicArticleTagsRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove article tag action has been performed. If the action is successfully completed, the article tag resource will be permanently removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicArticleTagsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(articleTag);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An article tag object used to delete specified article tag resource.
     * @returns A promise that is resolved once the remove article tag action has been performed.
     * @example // articleTag is a resource previously fetched using get action.
                    baasicArticleTagsClient.remove(articleTag)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicArticleTagsClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicArticleTagsRouteDefinition.delete(data));
    };
    return BaasicArticleTagsClient;
}());
BaasicArticleTagsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleTagsRouteDefinition)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleTagsSubscriptionsClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleTagsRouteDefinition,
        article_1.BaasicArticleTagsSubscriptionsClient,
        httpApi_1.BaasicApiClient])
], BaasicArticleTagsClient);
exports.BaasicArticleTagsClient = BaasicArticleTagsClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleTagsRouteDefinition
 * @description Baasic Article Tags Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Tags Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var article_1 = __webpack_require__(5);
var BaasicArticleTagsRouteDefinition = (function (_super) {
    __extends(BaasicArticleTagsRouteDefinition, _super);
    function BaasicArticleTagsRouteDefinition(baasicArticleTagsSubscriptionsRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicArticleTagsSubscriptionsRouteDefinition = baasicArticleTagsSubscriptionsRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'article-tags/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'article-tags/{id}/{?embed,fields}';
        _this.updateRoute = 'article-tags/{id}';
        _this.deleteRoute = 'article-tags/{id}';
        return _this;
    }
    Object.defineProperty(BaasicArticleTagsRouteDefinition.prototype, "subscriptions", {
        get: function () {
            return this.baasicArticleTagsSubscriptionsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find article tags route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify article tags using the phrase search; multiple tag keywords must be comma separated.
     * - `page` - A value used to set the page number, i.e. to retrieve certain article tag subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the article tag property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicArticleTagsRouteDefinition.find().expand({searchQuery: '<search-phrase>'});
     **/
    BaasicArticleTagsRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get article tag route which must be expanded with the Id of the previously created article tag resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param id Article tag id or slug that uniquely identifies article tag resource that needs to be retrieved.
     * @param options Options object that contains embed data.
     * @example baasicArticleTagsRouteDefinition.get({id: '<articleTag-id>'});
     **/
    BaasicArticleTagsRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses get article tag route which must be expanded with the Id of the previously created article tag resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param data An article tag object used to update specified article tag resource.
     * @example baasicArticleTagsRouteDefinition.update({id: '<articleTag-id>'});
     **/
    BaasicArticleTagsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses get article tag route which must be expanded with the Id of the previously created article tag resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param data An article tag object used to delete specified article tag resource.
     * @example baasicArticleTagsRouteDefinition.delete({id: '<articleTag-id>'});
     **/
    BaasicArticleTagsRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicArticleTagsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleTagsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleTagsSubscriptionsRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [article_1.BaasicArticleTagsSubscriptionsRouteDefinition, Object])
], BaasicArticleTagsRouteDefinition);
exports.BaasicArticleTagsRouteDefinition = BaasicArticleTagsRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.  - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
- All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleTagsSubscriptionsDefinition
 * @description Baasic Article Tags Subscriptions Definition provides an easy way to consume Baasic Article Tags REST API end-points. `baasicArticleTagsDefinition` functions enable performing standard CRUD operations directly on article tag resources, whereas the `baasicArticleClient` functions allow management between article and article tag. In order to obtain needed routes `baasicArticleTagsDefinition` uses `baasicArticleTagsRouteDefinition`.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var article_1 = __webpack_require__(5);
var BaasicArticleTagsSubscriptionsClient = (function () {
    function BaasicArticleTagsSubscriptionsClient(baasicArticleTagsSubscriptionsRouteDefinition, baasicApiClient) {
        this.baasicArticleTagsSubscriptionsRouteDefinition = baasicArticleTagsSubscriptionsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicArticleTagsSubscriptionsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicArticleTagsSubscriptionsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the subscribe action has been performed. This action subscribes an user to the specified tag.
     * @method
     * @example baasicArticleTagsSubscriptionsClient.subscribe(tag, user)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleTagsSubscriptionsClient.prototype.subscribe = function (tag, data) {
        return this.baasicApiClient.post(this.baasicArticleTagsSubscriptionsRouteDefinition.subscribe(tag, data), this.baasicArticleTagsSubscriptionsRouteDefinition.subscribeParams(tag, data));
    };
    /**
     * Returns a promise that is resolved once the isSubscribed action has been performed. This action checks if a user is subscribed to the specified tag.
     * @param
     * @method
     * @example baasicArticleTagsSubscriptionsClient.isSubscribed(tag, user)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicArticleTagsSubscriptionsClient.prototype.isSubscribed = function (tag, data) {
        return this.baasicApiClient.get(this.baasicArticleTagsSubscriptionsRouteDefinition.isSubscribed(tag, data));
    };
    /**
     * Returns a promise that is resolved once the unSubscribe action has been performed. This action unsubscribes a user from the specified tag.
     * @param tag tag object
     * @param data data object
     * @method subscriptions.unSubscribe
     * @example baasicArticleTagsSubscriptionsClient.unSubscribe(tag, user)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                       // perform error handling here
                   });
    **/
    BaasicArticleTagsSubscriptionsClient.prototype.unSubscribe = function (tag, data) {
        return this.baasicApiClient.delete(this.baasicArticleTagsSubscriptionsRouteDefinition.unSubscribe(tag, data), this.baasicArticleTagsSubscriptionsRouteDefinition.subscribeParams(tag, data));
    };
    return BaasicArticleTagsSubscriptionsClient;
}());
BaasicArticleTagsSubscriptionsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleTagsSubscriptionsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleTagsSubscriptionsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicArticleTagsSubscriptionsClient);
exports.BaasicArticleTagsSubscriptionsClient = BaasicArticleTagsSubscriptionsClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicArticleTagsSubscriptionsRouteDefinition
 * @description Baasic Article Tags Subscriptions Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Article Tags Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicArticleTagsSubscriptionsRouteDefinition = (function (_super) {
    __extends(BaasicArticleTagsSubscriptionsRouteDefinition, _super);
    function BaasicArticleTagsSubscriptionsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.subscribeRoute = 'article-tags/{id}/subscriptions';
        _this.isSubscribedRoute = 'article-tags/{id}/subscriptions/{subscriberId}';
        _this.unSubscribeRoute = 'article-tags/{id}/subscriptions';
        return _this;
    }
    /**
     * Parses subscribe route which must be expanded with id of the tag.
     * @method
     * @example baasicArticleTagsSubscriptionsRouteDefinition.subscribe( {id: '<tag-id>'} );
     **/
    BaasicArticleTagsSubscriptionsRouteDefinition.prototype.subscribe = function (tag, data) {
        var params = this.utility.extend(tag, data);
        return _super.prototype.baseCreate.call(this, this.subscribeRoute, params);
    };
    /**
     * Parses isSubscribed route which must be expanded with subscriber id and the id of the tag.
     * @method
     * @example baasicArticleSubscriptionsRouteDefinition.isSubscribed({ id: '<tag-id>', subscriberId: '<subscriber-id>' });
     **/
    BaasicArticleTagsSubscriptionsRouteDefinition.prototype.isSubscribed = function (tag, data) {
        var params = this.utility.extend(tag, data);
        return _super.prototype.baseCreate.call(this, this.isSubscribedRoute, params);
    };
    /**
     * Parses unSubscribe route which must be expanded with the id of the article.
     * @method
     * @example baasicArticleUnSubscribeRouteDefinition.unSubscribe({id: '<tag-id>'});
     **/
    BaasicArticleTagsSubscriptionsRouteDefinition.prototype.unSubscribe = function (tag, data) {
        var params = this.utility.extend(tag, data);
        return _super.prototype.baseCreate.call(this, this.unSubscribeRoute, params);
    };
    BaasicArticleTagsSubscriptionsRouteDefinition.prototype.subscribeParams = function (tag, data) {
        return this.utility.extend(tag, data);
    };
    return BaasicArticleTagsSubscriptionsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicArticleTagsSubscriptionsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicArticleTagsSubscriptionsRouteDefinition);
exports.BaasicArticleTagsSubscriptionsRouteDefinition = BaasicArticleTagsSubscriptionsRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.  - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
- All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var common_1 = __webpack_require__(2);
var article_1 = __webpack_require__(5);
var BaasicArticleUtility = (function () {
    function BaasicArticleUtility() {
        this.utility = new common_1.Utility();
    }
    BaasicArticleUtility.prototype.replaceDiacritics = function (str) {
        for (var letter in article_1.ALPHABET) {
            str = str.replace(article_1.ALPHABET[letter], letter);
        }
        return str;
    };
    BaasicArticleUtility.prototype.toSlug = function (str) {
        if (this.utility.isUndefined(str) || str === null || str === '') {
            return str;
        }
        str = this.replaceDiacritics(str);
        str = str.toLowerCase();
        str = str.replace(/[^a-z0-9]+/g, '-');
        str = str.replace(/^-|-$/g, '');
        return str;
    };
    BaasicArticleUtility.prototype.updateSlug = function (resource) {
        var newSlug = this.toSlug(resource.slug);
        if (this.utility.isUndefined(newSlug) || newSlug === null || newSlug === '') {
            newSlug = this.toSlug(resource.title);
        }
        if (!this.utility.isUndefined(newSlug) || newSlug !== null || newSlug !== '') {
            if (resource.slug !== newSlug) {
                resource.slug = newSlug;
            }
        }
    };
    return BaasicArticleUtility;
}());
exports.BaasicArticleUtility = BaasicArticleUtility;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArticleStatus = {
    none: 0,
    published: 2,
    draft: 1,
    archive: 4
};
exports.ArticleStatus = ArticleStatus;
var CommentStatus = {
    approved: 1,
    spam: 2,
    reported: 4,
    flagged: 8,
    unapproved: 16
};
exports.CommentStatus = CommentStatus;


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var article_1 = __webpack_require__(5);
var TYPES = {
    BaasicArticleCommentRepliesClient: Symbol("BaasicArticleCommentRepliesClient"),
    BaasicArticleCommentRepliesRouteDefinition: Symbol("BaasicArticleCommentRepliesRouteDefinition"),
    BaasicArticleCommentsClient: Symbol("BaasicArticleCommentsClient"),
    BaasicArticleCommentsRouteDefinition: Symbol("BaasicArticleCommentsRouteDefinition"),
    BaasicArticleFilesClient: Symbol("BaasicArticleFilesClient"),
    BaasicArticleFilesRouteDefinition: Symbol("BaasicArticleFilesRouteDefinition"),
    BaasicArticleFilesBatchClient: Symbol("BaasicArticleFilesBatchClient"),
    BaasicArticleFilesBatchRouteDefinition: Symbol("BaasicArticleFilesBatchRouteDefinition"),
    BaasicArticleFilesStreamsClient: Symbol("BaasicArticleFilesStreamsClient"),
    BaasicArticleFilesStreamsRouteDefinition: Symbol("BaasicArticleFilesStreamsRouteDefinition"),
    BaasicArticleRatingsClient: Symbol("BaasicArticleRatingsClient"),
    BaasicArticleRatingsRouteDefinition: Symbol("BaasicArticleRatingsRouteDefinition"),
    BaasicArticleClient: Symbol("BaasicArticleClient"),
    BaasicArticleRouteDefinition: Symbol("BaasicArticleRouteDefinition"),
    BaasicArticleSettingsClient: Symbol("BaasicArticleSettingsClient"),
    BaasicArticleSettingsRouteDefinition: Symbol("BaasicArticleSettingsRouteDefinition"),
    BaasicArticleTagsClient: Symbol("BaasicArticleTagsClient"),
    BaasicArticleTagsRouteDefinition: Symbol("BaasicArticleTagsRouteDefinition"),
    BaasicArticleTagsSubscriptionsClient: Symbol("BaasicArticleTagsSubscriptionsClient"),
    BaasicArticleTagsSubscriptionsRouteDefinition: Symbol("BaasicArticleTagsSubscriptionsRouteDefinition"),
    BaasicArticleSubscriptionsArticleRouteDefinition: Symbol("BaasicArticleSubscriptionsArticleRouteDefinition"),
    BaasicArticleSubscriptionsCommentReportedRouteDefinition: Symbol("BaasicArticleSubscriptionsCommentReportedRouteDefinition"),
    BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition: Symbol("BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition"),
    BaasicArticleSubscriptionsRouteDefinition: Symbol("BaasicArticleSubscriptionsRouteDefinition"),
    BaasicArticleSubscriptionsClient: Symbol("BaasicArticleSubscriptionsClient"),
    BaasicArticleSubscriptionsArticleClient: Symbol("BaasicArticleSubscriptionsArticleClient"),
    BaasicArticleSubscriptionsCommentReportedClient: Symbol("BaasicArticleSubscriptionsCommentReportedClient"),
    BaasicArticleSubscriptionsCommentRequiresModerationClient: Symbol("BaasicArticleSubscriptionsCommentRequiresModerationClient"),
    BaasicArticleInstanceSubscriptionsClient: Symbol("BaasicArticleInstanceSubscriptionsClient"),
    BaasicArticleInstanceSubscriptionsRouteDefinition: Symbol("BaasicArticleInstanceSubscriptionsRouteDefinition"),
    BaasicArticleInstanceRatingsRouteDefinition: Symbol("BaasicArticleInstanceRatingsRouteDefinition"),
    BaasicArticleInstanceRatingsClient: Symbol("BaasicArticleInstanceRatingsClient"),
    BaasicArticleInstanceTagsRouteDefinition: Symbol("BaasicArticleInstanceTagsRouteDefinition"),
    BaasicArticleInstanceTagsClient: Symbol("BaasicArticleInstanceTagsClient"),
    BaasicArticleInstanceCommentsRouteDefinition: Symbol("BaasicArticleInstanceCommentsRouteDefinition"),
    BaasicArticleInstanceCommentsClient: Symbol("BaasicArticleInstanceCommentsClient"),
    BaasicArticleInstanceCommentRepliesRouteDefinition: Symbol("BaasicArticleInstanceCommentRepliesRouteDefinition"),
    BaasicArticleInstanceCommentRepliesClient: Symbol("BaasicArticleInstanceCommentRepliesClient"),
    BaasicArticleInstanceFilesRouteDefinition: Symbol("BaasicArticleInstanceFilesRouteDefinition"),
    BaasicArticleInstanceFilesClient: Symbol("BaasicArticleInstanceFilesClient"),
    BaasicArticleInstanceFilesStreamsRouteDefinition: Symbol("BaasicArticleInstanceFilesStreamsRouteDefinition"),
    BaasicArticleInstanceFilesStreamsClient: Symbol("BaasicArticleInstanceFilesStreamsClient"),
    BaasicArticleInstanceFilesBatchRouteDefinition: Symbol("BaasicArticleInstanceFilesBatchRouteDefinition"),
    BaasicArticleInstanceFilesBatchClient: Symbol("BaasicArticleInstanceFilesBatchClient"),
    BaasicArticleACLRouteDefinition: Symbol(" BaasicArticleACLRouteDefinition"),
    BaasicArticleACLClient: Symbol("BaasicArticleACLClient"),
    Root: Symbol("Root")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicArticleCommentRepliesRouteDefinition).to(article_1.BaasicArticleCommentRepliesRouteDefinition);
    bind(TYPES.BaasicArticleCommentRepliesClient).to(article_1.BaasicArticleCommentRepliesClient);
    bind(TYPES.BaasicArticleCommentsRouteDefinition).to(article_1.BaasicArticleCommentsRouteDefinition);
    bind(TYPES.BaasicArticleCommentsClient).to(article_1.BaasicArticleCommentsClient);
    bind(TYPES.BaasicArticleFilesBatchRouteDefinition).to(article_1.BaasicArticleFilesBatchRouteDefinition);
    bind(TYPES.BaasicArticleFilesBatchClient).to(article_1.BaasicArticleFilesBatchClient);
    bind(TYPES.BaasicArticleFilesStreamsRouteDefinition).to(article_1.BaasicArticleFilesStreamsRouteDefinition);
    bind(TYPES.BaasicArticleFilesStreamsClient).to(article_1.BaasicArticleFilesStreamsClient);
    bind(TYPES.BaasicArticleFilesRouteDefinition).to(article_1.BaasicArticleFilesRouteDefinition);
    bind(TYPES.BaasicArticleFilesClient).to(article_1.BaasicArticleFilesClient);
    bind(TYPES.BaasicArticleRatingsRouteDefinition).to(article_1.BaasicArticleRatingsRouteDefinition);
    bind(TYPES.BaasicArticleRatingsClient).to(article_1.BaasicArticleRatingsClient);
    bind(TYPES.BaasicArticleSettingsRouteDefinition).to(article_1.BaasicArticleSettingsRouteDefinition);
    bind(TYPES.BaasicArticleSettingsClient).to(article_1.BaasicArticleSettingsClient);
    bind(TYPES.BaasicArticleTagsSubscriptionsRouteDefinition).to(article_1.BaasicArticleTagsSubscriptionsRouteDefinition);
    bind(TYPES.BaasicArticleTagsSubscriptionsClient).to(article_1.BaasicArticleTagsSubscriptionsClient);
    bind(TYPES.BaasicArticleTagsRouteDefinition).to(article_1.BaasicArticleTagsRouteDefinition);
    bind(TYPES.BaasicArticleTagsClient).to(article_1.BaasicArticleTagsClient);
    bind(TYPES.BaasicArticleSubscriptionsArticleRouteDefinition).to(article_1.BaasicArticleSubscriptionsArticleRouteDefinition);
    bind(TYPES.BaasicArticleSubscriptionsCommentReportedRouteDefinition).to(article_1.BaasicArticleSubscriptionsCommentReportedRouteDefinition);
    bind(TYPES.BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition).to(article_1.BaasicArticleSubscriptionsCommentRequiresModerationRouteDefinition);
    bind(TYPES.BaasicArticleSubscriptionsRouteDefinition).to(article_1.BaasicArticleSubscriptionsRouteDefinition);
    bind(TYPES.BaasicArticleSubscriptionsArticleClient).to(article_1.BaasicArticleSubscriptionsArticleClient);
    bind(TYPES.BaasicArticleSubscriptionsCommentReportedClient).to(article_1.BaasicArticleSubscriptionsCommentReportedClient);
    bind(TYPES.BaasicArticleSubscriptionsCommentRequiresModerationClient).to(article_1.BaasicArticleSubscriptionsCommentRequiresModerationClient);
    bind(TYPES.BaasicArticleSubscriptionsClient).to(article_1.BaasicArticleSubscriptionsClient);
    bind(TYPES.BaasicArticleInstanceRatingsRouteDefinition).to(article_1.BaasicArticleInstanceRatingsRouteDefinition);
    bind(TYPES.BaasicArticleInstanceRatingsClient).to(article_1.BaasicArticleInstanceRatingsClient);
    bind(TYPES.BaasicArticleInstanceTagsRouteDefinition).to(article_1.BaasicArticleInstanceTagsRouteDefinition);
    bind(TYPES.BaasicArticleInstanceTagsClient).to(article_1.BaasicArticleInstanceTagsClient);
    bind(TYPES.BaasicArticleInstanceCommentsRouteDefinition).to(article_1.BaasicArticleInstanceCommentsRouteDefinition);
    bind(TYPES.BaasicArticleInstanceCommentsClient).to(article_1.BaasicArticleInstanceCommentsClient);
    bind(TYPES.BaasicArticleInstanceCommentRepliesRouteDefinition).to(article_1.BaasicArticleInstanceCommentRepliesRouteDefinition);
    bind(TYPES.BaasicArticleInstanceCommentRepliesClient).to(article_1.BaasicArticleInstanceCommentRepliesClient);
    bind(TYPES.BaasicArticleInstanceFilesRouteDefinition).to(article_1.BaasicArticleInstanceFilesRouteDefinition);
    bind(TYPES.BaasicArticleInstanceFilesClient).to(article_1.BaasicArticleInstanceFilesClient);
    bind(TYPES.BaasicArticleInstanceFilesStreamsRouteDefinition).to(article_1.BaasicArticleInstanceFilesStreamsRouteDefinition);
    bind(TYPES.BaasicArticleInstanceFilesStreamsClient).to(article_1.BaasicArticleInstanceFilesStreamsClient);
    bind(TYPES.BaasicArticleInstanceFilesBatchRouteDefinition).to(article_1.BaasicArticleInstanceFilesBatchRouteDefinition);
    bind(TYPES.BaasicArticleInstanceFilesBatchClient).to(article_1.BaasicArticleInstanceFilesBatchClient);
    bind(TYPES.BaasicArticleInstanceSubscriptionsClient).to(article_1.BaasicArticleInstanceSubscriptionsClient);
    bind(TYPES.BaasicArticleInstanceSubscriptionsRouteDefinition).to(article_1.BaasicArticleInstanceSubscriptionsRouteDefinition);
    bind(TYPES.BaasicArticleACLRouteDefinition).to(article_1.BaasicArticleACLRouteDefinition);
    bind(TYPES.BaasicArticleACLClient).to(article_1.BaasicArticleACLClient);
    bind(TYPES.BaasicArticleRouteDefinition).to(article_1.BaasicArticleRouteDefinition);
    bind(TYPES.BaasicArticleClient).to(article_1.BaasicArticleClient);
    bind(TYPES.Root).to(article_1.Root);
});
exports.diModule = diModule;


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var article_1 = __webpack_require__(5);
var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var Root = (function () {
    function Root(articles, comments, files, ratings, subscriptions, tags, settings) {
        this.articles = articles;
        this.comments = comments;
        this.files = files;
        this.ratings = ratings;
        this.subscriptions = subscriptions;
        this.tags = tags;
        this.settings = settings;
    }
    return Root;
}());
Root = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(article_1.TYPES.BaasicArticleClient)),
    __param(1, inversify_1.inject(article_1.TYPES.BaasicArticleCommentsClient)),
    __param(2, inversify_1.inject(article_1.TYPES.BaasicArticleFilesClient)),
    __param(3, inversify_1.inject(article_1.TYPES.BaasicArticleRatingsClient)),
    __param(4, inversify_1.inject(article_1.TYPES.BaasicArticleSubscriptionsClient)),
    __param(5, inversify_1.inject(article_1.TYPES.BaasicArticleTagsClient)),
    __param(6, inversify_1.inject(article_1.TYPES.BaasicArticleSettingsClient)),
    __metadata("design:paramtypes", [article_1.BaasicArticleClient,
        article_1.BaasicArticleCommentsClient,
        article_1.BaasicArticleFilesClient,
        article_1.BaasicArticleRatingsClient,
        article_1.BaasicArticleSubscriptionsClient,
        article_1.BaasicArticleTagsClient,
        article_1.BaasicArticleSettingsClient])
], Root);
exports.Root = Root;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceClient
 * @description Baasic Commerce Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceClient` uses `baasicCommerceRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceClient = (function () {
    function BaasicCommerceClient(baasicCommerceCustomerClient, baasicCommerceInvoiceClient, baasicCommerceProductClient, baasicCommercePaymentTransactionClient, lookup, baasicCommerceRouteDefinition, baasicApiClient) {
        this.baasicCommerceCustomerClient = baasicCommerceCustomerClient;
        this.baasicCommerceInvoiceClient = baasicCommerceInvoiceClient;
        this.baasicCommerceProductClient = baasicCommerceProductClient;
        this.baasicCommercePaymentTransactionClient = baasicCommercePaymentTransactionClient;
        this.lookup = lookup;
        this.baasicCommerceRouteDefinition = baasicCommerceRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicCommerceClient.prototype, "customers", {
        get: function () {
            return this.baasicCommerceCustomerClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceClient.prototype, "invoices", {
        get: function () {
            return this.baasicCommerceInvoiceClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceClient.prototype, "products", {
        get: function () {
            return this.baasicCommerceProductClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceClient.prototype, "paymentTransactions", {
        get: function () {
            return this.baasicCommercePaymentTransactionClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceClient.prototype, "lookups", {
        get: function () {
            return this.lookup;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    customerId: '<customer-id>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicCommerceRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceClient.get('<id>', {})
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicCommerceRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceClient.validateVAT({ countryCode: 'DE', vatId: 'DE999999999' })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceClient.prototype.validateVAT = function (countryCode, vatId) {
        return this.baasicApiClient.get(this.baasicCommerceRouteDefinition.validateVAT(countryCode, vatId));
    };
    /**
     * Returns a promise that is resolved once the subscribe pre-process commerce action has been performed; this action performes pre-subscribe operations such as getting client tokens etc.
     * @method
     * @example baasicCommerceClient.preprocess({
                    systemName : '<system-name>',
                    productId : '<product-id>',
                    customerId: '<id>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceClient.prototype.preprocess = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceRouteDefinition.preprocess(), this.baasicCommerceRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the subscribe commerce action has been performed; this action creates a new commerce subscription resource.
     * @method
     * @example baasicCommerceClient.subscribe({
                    systemName : '<system-name>',
                    productId : '<product-id>',
                    customer: {
                        id: '<id>',
                        firstName: '<first-name>',
                        lastName: '<last-name>'
                    }
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceClient.prototype.subscribe = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceRouteDefinition.subscribe(), this.baasicCommerceRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the cancel subscription action has been performed. This action will remove a commerce subscription resource from the system if successfully completed. This route obtain routes from `baasicCommerceRouteDefinition` route template. Here is an example of how execute this action:
     * @method
     * @example	baasicCommerceClient.cancel({
                    systemName: '<system-name>',
                    id: '<subscription-id>',
                    requestRefund: <true/false>,
                    refundAmount: <refund-amount>
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceClient.prototype.cancel = function (data) {
        return this.baasicApiClient.delete(this.baasicCommerceRouteDefinition.cancel(data));
    };
    return BaasicCommerceClient;
}());
BaasicCommerceClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceCustomerClient)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceInvoiceClient)),
    __param(2, inversify_1.inject(commerce_1.TYPES.BaasicCommerceProductClient)),
    __param(3, inversify_1.inject(commerce_1.TYPES.BaasicCommercePaymentTransactionClient)),
    __param(4, inversify_1.inject(commerce_1.TYPES.Lookups)),
    __param(5, inversify_1.inject(commerce_1.TYPES.BaasicCommerceRouteDefinition)),
    __param(6, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceCustomerClient,
        commerce_1.BaasicCommerceInvoiceClient,
        commerce_1.BaasicCommerceProductClient,
        commerce_1.BaasicCommercePaymentTransactionClient,
        commerce_1.Lookups,
        commerce_1.BaasicCommerceRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceClient);
exports.BaasicCommerceClient = BaasicCommerceClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceRouteDefinition
 * @description Baasic Commerce Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Product Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceRouteDefinition = (function (_super) {
    __extends(BaasicCommerceRouteDefinition, _super);
    function BaasicCommerceRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/subscriptions/{?customerId,systemName,searchQuery,plan,statuses,productId,firstName,lastName,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/subscriptions/{id}/{?embed,fields}';
        _this.validateVATRoute = 'commerce/vat-validations/{?countryCode,vatId}';
        _this.preprocessRoute = 'commerce/subscriptions/preprocess';
        _this.subscribeRoute = 'commerce/subscriptions';
        _this.cancelRoute = 'commerce/subscriptions/{systemName}/{id}/{?requestRefund,refundAmount}';
        return _this;
    }
    /**
     * Parses find commerce route which can be expanded with additional options. Supported items are:
     * - `customerId` - The customer identifier.
     * - `systemName` - The commerce payment gateway system name.
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `plan` - Product name.
     * - `statuses` - Subscription status unique identifier or abbreviation in CSV format.
     * - `productId` - Product unique identifier.
     * - `firstName` - Customer first name.
     * - `lastName` - Customer last name.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicCommerceRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceRouteDefinition.get(id, options);
     **/
    BaasicCommerceRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses validate VAT route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceRouteDefinition.validateVAT({ countryCode: 'DE', vatId: 'DE999999999' });
     **/
    BaasicCommerceRouteDefinition.prototype.validateVAT = function (countryCode, vatId) {
        return _super.prototype.baseCreate.call(this, this.validateVATRoute, { countryCode: countryCode, vatId: vatId });
    };
    /**
     * Parses subscription pre-process commerce route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceRouteDefinition.preprocess();
     **/
    BaasicCommerceRouteDefinition.prototype.preprocess = function () {
        return _super.prototype.baseCreate.call(this, this.preprocessRoute, {});
    };
    /**
     * Parses subscription commerce route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceRouteDefinition.subscribe();
     **/
    BaasicCommerceRouteDefinition.prototype.subscribe = function () {
        return _super.prototype.baseCreate.call(this, this.subscribeRoute, {});
    };
    /**
     * Parses cancel subscription commerce route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceRouteDefinition.cancel({ systemName: '<system-name>' });
     **/
    BaasicCommerceRouteDefinition.prototype.cancel = function (data) {
        return _super.prototype.baseCreate.call(this, this.cancelRoute, data);
    };
    return BaasicCommerceRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceRouteDefinition);
exports.BaasicCommerceRouteDefinition = BaasicCommerceRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceCustomerClient
 * @description Baasic Commerce Customer Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceCustomerClient` uses `baasicCommerceCustomerRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceCustomerClient = (function () {
    function BaasicCommerceCustomerClient(baasicCommerceCustomerPaymentMethodClient, baasicCommerceCustomerRouteDefinition, BaasicApiClient) {
        this.baasicCommerceCustomerPaymentMethodClient = baasicCommerceCustomerPaymentMethodClient;
        this.baasicCommerceCustomerRouteDefinition = baasicCommerceCustomerRouteDefinition;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommerceCustomerClient.prototype, "paymentMethods", {
        get: function () {
            return this.baasicCommerceCustomerPaymentMethodClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceCustomerClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceCustomerRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceCustomerClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceCustomerClient.prototype.find = function (options) {
        return this.BaasicApiClient.get(this.baasicCommerceCustomerRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceCustomerClient.get(id)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceCustomerClient.prototype.get = function (id, options) {
        return this.BaasicApiClient.get(this.baasicCommerceCustomerRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceCustomerRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = baasicApiClient.removeParams(commerceCustomer);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commerceCustomer is a resource previously fetched using get action.
                    commerceCustomer.isDefault : true;
                    baasicCommerceCustomerClient.update(commerceCustomer)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceCustomerClient.prototype.update = function (data) {
        return this.BaasicApiClient.put(this.baasicCommerceCustomerRouteDefinition.update(data), this.baasicCommerceCustomerRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceCustomerRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = baasicApiClient.removeParams(commerceCustomer);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commerceCustomer is a resource previously fetched using get action.
                    baasicCommerceCustomerClient.remove(commerceCustomer)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceCustomerClient.prototype.remove = function (data) {
        return this.BaasicApiClient.delete(this.baasicCommerceCustomerRouteDefinition.delete(data));
    };
    return BaasicCommerceCustomerClient;
}());
BaasicCommerceCustomerClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceCustomerPaymentMethodClient)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceCustomerRouteDefinition)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceCustomerPaymentMethodClient,
        commerce_1.BaasicCommerceCustomerRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceCustomerClient);
exports.BaasicCommerceCustomerClient = BaasicCommerceCustomerClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceCustomerPaymentMethodClient
 * @description Baasic Commerce CustomerPaymentMethod Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceCustomerPaymentMethodClient` uses `baasicCommerceCustomerPaymentMethodRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceCustomerPaymentMethodClient = (function () {
    function BaasicCommerceCustomerPaymentMethodClient(baasicCommerceCustomerPaymentMethodRouteDefinition, BaasicApiClient) {
        this.baasicCommerceCustomerPaymentMethodRouteDefinition = baasicCommerceCustomerPaymentMethodRouteDefinition;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommerceCustomerPaymentMethodClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceCustomerPaymentMethodRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicCommerceCustomerPaymentMethodClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceCustomerPaymentMethodClient.prototype.find = function (options) {
        return this.BaasicApiClient.get(this.baasicCommerceCustomerPaymentMethodRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceCustomerPaymentMethodClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceCustomerPaymentMethodClient.prototype.get = function (id, options) {
        return this.BaasicApiClient.get(this.baasicCommerceCustomerPaymentMethodRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceCustomerPaymentMethodRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceCustomerPaymentMethod);
     * var uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commerceCustomerPaymentMethod is a resource previously fetched using get action.
                        commerceCustomerPaymentMethod.isDefault : true;
                        baasicCommerceCustomerPaymentMethodClient.update(commerceCustomerPaymentMethod)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommerceCustomerPaymentMethodClient.prototype.update = function (data) {
        return this.BaasicApiClient.put(this.baasicCommerceCustomerPaymentMethodRouteDefinition.update(data), this.baasicCommerceCustomerPaymentMethodRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resource.
     * @method
     * @example baasicCommerceCustomerPaymentMethodClient.create({
                    paymentMethodNonce : '<payment-method-nonce>',
                    customerId : '<customer-id>',
                    typeName : '<type-name>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceCustomerPaymentMethodClient.prototype.create = function (data) {
        return this.BaasicApiClient.post(this.baasicCommerceCustomerPaymentMethodRouteDefinition.create(), this.baasicCommerceCustomerPaymentMethodRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceCustomerPaymentMethodRouteService` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceCustomerPaymentMethod);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commerceCustomerPaymentMethod is a resource previously fetched using get action.
                    baasicCommerceCustomerPaymentMethodClient.remove(commerceCustomerPaymentMethod)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceCustomerPaymentMethodClient.prototype.remove = function (data) {
        return this.BaasicApiClient.delete(this.baasicCommerceCustomerPaymentMethodRouteDefinition.delete(data));
    };
    return BaasicCommerceCustomerPaymentMethodClient;
}());
BaasicCommerceCustomerPaymentMethodClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceCustomerPaymentMethodRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceCustomerPaymentMethodRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceCustomerPaymentMethodClient);
exports.BaasicCommerceCustomerPaymentMethodClient = BaasicCommerceCustomerPaymentMethodClient;
/**
 * @copyright(c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceCustomerPaymentMethodRouteDefinition
 * @description Baasic Commerce CustomerPaymentMethod Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce CustomerPaymentMethod Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceCustomerPaymentMethodRouteDefinition = (function (_super) {
    __extends(BaasicCommerceCustomerPaymentMethodRouteDefinition, _super);
    function BaasicCommerceCustomerPaymentMethodRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/customer-payment-methods/{systemName}/{?customerId,searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/customer-payment-methods/{systemName}/{id}/{?embed,fields}';
        _this.createRoute = 'commerce/customer-payment-methods/{systemName}/';
        _this.updateRoute = 'commerce/customer-payment-methods/{systemName}/{id}';
        _this.deleteRoute = 'commerce/customer-payment-methods/{systemName}/{id}';
        return _this;
    }
    /**
     * Parses find commerce customer-payment-methods route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options.
     * @example baasicCommerceCustomerPaymentMethodRouteDefinition.find({searchQuery: '<search-phrase>'});                               **/
    BaasicCommerceCustomerPaymentMethodRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceCustomerPaymentMethodRouteDefinition.get(id, options);
     **/
    BaasicCommerceCustomerPaymentMethodRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, options);
    };
    /**
     * Parses create commerce customer-payment-method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceCustomerPaymentMethodRouteDefinition.create();
     **/
    BaasicCommerceCustomerPaymentMethodRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update commerce customer-payment-method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceCustomerPaymentMethodRouteDefinition.update(data);
     **/
    BaasicCommerceCustomerPaymentMethodRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
    * Parses delete commerce customer-payment-method route; this URI template does not expose any additional options.
    * @method
    * @example baasicCommerceCustomerPaymentMethodRouteDefinition.delete(data);
    **/
    BaasicCommerceCustomerPaymentMethodRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceCustomerPaymentMethodRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceCustomerPaymentMethodRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceCustomerPaymentMethodRouteDefinition);
exports.BaasicCommerceCustomerPaymentMethodRouteDefinition = BaasicCommerceCustomerPaymentMethodRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceCustomerRouteDefinition
 * @description Baasic Commerce Customer Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Customer Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceCustomerRouteDefinition = (function (_super) {
    __extends(BaasicCommerceCustomerRouteDefinition, _super);
    function BaasicCommerceCustomerRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/customers/{systemName}/{?customerId,searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/customers/{systemName}/{id}/{?embed,fields}';
        _this.updateRoute = 'commerce/customers/{systemName}/{id}';
        _this.deleteRoute = 'commerce/customers/{systemName}/{id}';
        return _this;
    }
    /**
     * Parses find commerce customers route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicCommerceCustomerRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceCustomerRouteDefinition.prototype.find = function (options) {
        return this.baseFind(this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceCustomerRouteDefinition.get(id, options);
     **/
    BaasicCommerceCustomerRouteDefinition.prototype.get = function (id, options) {
        return this.baseGet(this.getRoute, id, options);
    };
    /**
     * Parses update route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceCustomerRouteDefinition.update(data);
     **/
    BaasicCommerceCustomerRouteDefinition.prototype.update = function (data) {
        return this.baseUpdate(this.updateRoute, data);
    };
    /**
     * Parses delete route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceCustomerRouteDefinition.delete(data);
     **/
    BaasicCommerceCustomerRouteDefinition.prototype.delete = function (data) {
        return this.baseDelete(this.deleteRoute, data);
    };
    return BaasicCommerceCustomerRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceCustomerRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceCustomerRouteDefinition);
exports.BaasicCommerceCustomerRouteDefinition = BaasicCommerceCustomerRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(143));
__export(__webpack_require__(140));
__export(__webpack_require__(142));
__export(__webpack_require__(141));


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var commerce_1 = __webpack_require__(4);
var TYPES = {
    BaasicCommerceCustomerPaymentMethodClient: Symbol("BaasicCommerceCustomerPaymentMethodClient"),
    BaasicCommerceCustomerPaymentMethodRouteDefinition: Symbol("BaasicCommerceCustomerPaymentMethodRouteDefinition"),
    BaasicCommerceCustomerClient: Symbol("BaasicCommerceCustomerClient"),
    BaasicCommerceCustomerRouteDefinition: Symbol("BaasicCommerceCustomerRouteDefinition"),
    BaasicCommerceInvoiceClient: Symbol("BaasicCommerceInvoiceClient"),
    BaasicCommerceInvoiceRouteDefinition: Symbol("BaasicCommerceInvoiceRouteDefinition"),
    BaasicCommerceInvoiceStreamsClient: Symbol("BaasicCommerceInvoiceStreamsClient"),
    BaasicCommerceInvoiceStreamsRouteDefinition: Symbol("BaasicCommerceInvoiceStreamsRouteDefinition"),
    BaasicCommercePaymentTransactionClient: Symbol("BaasicCommercePaymentTransactionClient"),
    BaasicCommercePaymentTransactionRouteDefinition: Symbol("BaasicCommercePaymentTransactionRouteDefinition"),
    BaasicCommerceProductClient: Symbol("BaasicCommerceProductClient"),
    BaasicCommerceProductRouteDefinition: Symbol("BaasicCommerceProductRouteDefinition"),
    BaasicCommerceClient: Symbol("BaasicCommerceClient"),
    BaasicCommerceRouteDefinition: Symbol("BaasicCommerceRouteDefinition"),
    BaasicCommerceLookupsAddressTypesBatchClient: Symbol("BaasicCommerceLookupsAddressTypesBatchClient"),
    BaasicCommerceLookupsAddressTypeBatchRouteDefinition: Symbol("BaasicCommerceLookupsAddressTypeBatchRouteDefinition"),
    BaasicCommerceLookupsAddressTypesClient: Symbol("BaasicCommerceLookupsAddressTypesClient"),
    BaasicCommerceLookupsAddressTypeRouteDefinition: Symbol("BaasicCommerceLookupsAddressTypeRouteDefinition"),
    BaasicCommerceLookupsCountryBatchClient: Symbol("BaasicCommerceLookupsCountryBatchClient"),
    BaasicCommerceLookupsCountryBatchRouteDefinition: Symbol("BaasicCommerceLookupsCountryBatchRouteDefinition"),
    BaasicCommerceLookupsCountryClient: Symbol("BaasicCommerceLookupsCountryClient"),
    BaasicCommerceLookupsCountryRouteDefinition: Symbol("BaasicCommerceLookupsCountryRouteDefinition"),
    BaasicCommerceLookupsCountryStateBatchClient: Symbol("BaasicCommerceLookupsCountryStateBatchClient"),
    BaasicCommerceLookupsCountryStateBatchRouteDefinition: Symbol("BaasicCommerceLookupsCountryStateBatchRouteDefinition"),
    BaasicCommerceLookupsCountryStateClient: Symbol("BaasicCommerceLookupsCountryStateClient"),
    BaasicCommerceLookupsCountryStateRouteDefinition: Symbol("BaasicCommerceLookupsCountryStateRouteDefinition"),
    BaasicCommerceLookupsPaymentMethodBatchClient: Symbol("BaasicCommerceLookupsPaymentMethodBatchClient"),
    BaasicCommerceLookupsPaymentMethodBatchRouteDefinition: Symbol("BaasicCommerceLookupsPaymentMethodBatchRouteDefinition"),
    BaasicCommerceLookupsPaymentMethodClient: Symbol("BaasicCommerceLookupsPaymentMethodClient"),
    BaasicCommerceLookupsPaymentMethodRouteDefinition: Symbol("BaasicCommerceLookupsPaymentMethodRouteDefinition"),
    BaasicCommerceLookupsPaymentTransactionStatusBatchClient: Symbol("BaasicCommerceLookupsPaymentTransactionStatusBatchClient"),
    BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition: Symbol("BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition"),
    BaasicCommerceLookupsPaymentTransactionStatusClient: Symbol("BaasicCommerceLookupsPaymentTransactionStatusClient"),
    BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition: Symbol("BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition"),
    BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient: Symbol("BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient"),
    BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition: Symbol("BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition"),
    BaasicCommerceLookupsRecurringCyclePeriodTypeClient: Symbol("BaasicCommerceLookupsRecurringCyclePeriodTypeClient"),
    BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition: Symbol("BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition"),
    BaasicCommerceLookupsSubscriptionStatusBatchClient: Symbol("BaasicCommerceLookupsSubscriptionStatusBatchClient"),
    BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition: Symbol("BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition"),
    BaasicCommerceLookupsSubscriptionStatusClient: Symbol("BaasicCommerceLookupsSubscriptionStatusClient"),
    BaasicCommerceLookupsSubscriptionStatusRouteDefinition: Symbol("BaasicCommerceLookupsSubscriptionStatusRouteDefinition"),
    BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition: Symbol("BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition"),
    BaasicCommerceLookupsInvoiceStatusRouteDefinition: Symbol("BaasicCommerceLookupsInvoiceStatusRouteDefinition"),
    BaasicCommerceLookupsInvoiceStatusBatchClient: Symbol("BaasicCommerceLookupsInvoiceStatusBatchClient"),
    BaasicCommerceLookupsInvoiceStatusClient: Symbol("BaasicCommerceLookupsInvoiceStatusClient"),
    Lookups: Symbol("Lookups")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicCommerceCustomerPaymentMethodRouteDefinition).to(commerce_1.BaasicCommerceCustomerPaymentMethodRouteDefinition);
    bind(TYPES.BaasicCommerceCustomerPaymentMethodClient).to(commerce_1.BaasicCommerceCustomerPaymentMethodClient);
    bind(TYPES.BaasicCommerceCustomerRouteDefinition).to(commerce_1.BaasicCommerceCustomerRouteDefinition);
    bind(TYPES.BaasicCommerceCustomerClient).to(commerce_1.BaasicCommerceCustomerClient);
    bind(TYPES.BaasicCommerceInvoiceStreamsRouteDefinition).to(commerce_1.BaasicCommerceInvoiceStreamsRouteDefinition);
    bind(TYPES.BaasicCommerceInvoiceStreamsClient).to(commerce_1.BaasicCommerceInvoiceStreamsClient);
    bind(TYPES.BaasicCommerceInvoiceClient).to(commerce_1.BaasicCommerceInvoiceClient);
    bind(TYPES.BaasicCommerceInvoiceRouteDefinition).to(commerce_1.BaasicCommerceInvoiceRouteDefinition);
    bind(TYPES.BaasicCommercePaymentTransactionRouteDefinition).to(commerce_1.BaasicCommercePaymentTransactionRouteDefinition);
    bind(TYPES.BaasicCommercePaymentTransactionClient).to(commerce_1.BaasicCommercePaymentTransactionClient);
    bind(TYPES.BaasicCommerceProductRouteDefinition).to(commerce_1.BaasicCommerceProductRouteDefinition);
    bind(TYPES.BaasicCommerceProductClient).to(commerce_1.BaasicCommerceProductClient);
    bind(TYPES.BaasicCommerceRouteDefinition).to(commerce_1.BaasicCommerceRouteDefinition);
    bind(TYPES.BaasicCommerceClient).to(commerce_1.BaasicCommerceClient);
    bind(TYPES.BaasicCommerceLookupsAddressTypeBatchRouteDefinition).to(commerce_1.BaasicCommerceLookupsAddressTypeBatchRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsAddressTypesBatchClient).to(commerce_1.BaasicCommerceLookupsAddressTypesBatchClient);
    bind(TYPES.BaasicCommerceLookupsAddressTypeRouteDefinition).to(commerce_1.BaasicCommerceLookupsAddressTypeRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsAddressTypesClient).to(commerce_1.BaasicCommerceLookupsAddressTypesClient);
    bind(TYPES.BaasicCommerceLookupsCountryBatchRouteDefinition).to(commerce_1.BaasicCommerceLookupsCountryBatchRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsCountryBatchClient).to(commerce_1.BaasicCommerceLookupsCountryBatchClient);
    bind(TYPES.BaasicCommerceLookupsCountryRouteDefinition).to(commerce_1.BaasicCommerceLookupsCountryRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsCountryClient).to(commerce_1.BaasicCommerceLookupsCountryClient);
    bind(TYPES.BaasicCommerceLookupsCountryStateBatchRouteDefinition).to(commerce_1.BaasicCommerceLookupsCountryStateBatchRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsCountryStateBatchClient).to(commerce_1.BaasicCommerceLookupsCountryStateBatchClient);
    bind(TYPES.BaasicCommerceLookupsCountryStateRouteDefinition).to(commerce_1.BaasicCommerceLookupsCountryStateRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsCountryStateClient).to(commerce_1.BaasicCommerceLookupsCountryStateClient);
    bind(TYPES.BaasicCommerceLookupsPaymentMethodBatchRouteDefinition).to(commerce_1.BaasicCommerceLookupsPaymentMethodBatchRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsPaymentMethodBatchClient).to(commerce_1.BaasicCommerceLookupsPaymentMethodBatchClient);
    bind(TYPES.BaasicCommerceLookupsPaymentMethodRouteDefinition).to(commerce_1.BaasicCommerceLookupsPaymentMethodRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsPaymentMethodClient).to(commerce_1.BaasicCommerceLookupsPaymentMethodClient);
    bind(TYPES.BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition).to(commerce_1.BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsPaymentTransactionStatusBatchClient).to(commerce_1.BaasicCommerceLookupsPaymentTransactionStatusBatchClient);
    bind(TYPES.BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition).to(commerce_1.BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsPaymentTransactionStatusClient).to(commerce_1.BaasicCommerceLookupsPaymentTransactionStatusClient);
    bind(TYPES.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition).to(commerce_1.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient).to(commerce_1.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient);
    bind(TYPES.BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition).to(commerce_1.BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsRecurringCyclePeriodTypeClient).to(commerce_1.BaasicCommerceLookupsRecurringCyclePeriodTypeClient);
    bind(TYPES.BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition).to(commerce_1.BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsSubscriptionStatusBatchClient).to(commerce_1.BaasicCommerceLookupsSubscriptionStatusBatchClient);
    bind(TYPES.BaasicCommerceLookupsSubscriptionStatusRouteDefinition).to(commerce_1.BaasicCommerceLookupsSubscriptionStatusRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsSubscriptionStatusClient).to(commerce_1.BaasicCommerceLookupsSubscriptionStatusClient);
    bind(TYPES.BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition).to(commerce_1.BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsInvoiceStatusRouteDefinition).to(commerce_1.BaasicCommerceLookupsInvoiceStatusRouteDefinition);
    bind(TYPES.BaasicCommerceLookupsInvoiceStatusBatchClient).to(commerce_1.BaasicCommerceLookupsInvoiceStatusBatchClient);
    bind(TYPES.BaasicCommerceLookupsInvoiceStatusClient).to(commerce_1.BaasicCommerceLookupsInvoiceStatusClient);
    bind(TYPES.Lookups).to(commerce_1.Lookups);
});
exports.diModule = diModule;


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceInvoiceClient
 * @description Baasic Commerce Invoice Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceInvoiceClient` uses `baasicCommerceInvoiceRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceInvoiceClient = (function () {
    function BaasicCommerceInvoiceClient(baasicCommerceInvoiceRouteDefinition, baasicCommerceInvoiceStreamsClient, BaasicApiClient) {
        this.baasicCommerceInvoiceRouteDefinition = baasicCommerceInvoiceRouteDefinition;
        this.baasicCommerceInvoiceStreamsClient = baasicCommerceInvoiceStreamsClient;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommerceInvoiceClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceInvoiceRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceInvoiceClient.prototype, "streams", {
        get: function () {
            return this.baasicCommerceInvoiceStreamsClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceInvoiceClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceInvoiceClient.prototype.find = function (options) {
        return this.BaasicApiClient.get(this.baasicCommerceInvoiceRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceInvoiceClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceInvoiceClient.prototype.get = function (id, options) {
        return this.BaasicApiClient.get(this.baasicCommerceInvoiceRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceInvoiceRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceInvoice);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commerceInvoice is a resource previously fetched using get action.
                    commerceInvoice.invoiceStatusId : '<new-invoice-status-id>';
                    baasicCommerceInvoiceClient.update(commerceInvoice)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceInvoiceClient.prototype.update = function (data) {
        return this.BaasicApiClient.put(this.baasicCommerceInvoiceRouteDefinition.update(data), this.baasicCommerceInvoiceRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceInvoiceRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceInvoice);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commerceInvoice is a resource previously fetched using get action.
                        baasicCommerceInvoiceClient.remove(commerceInvoice)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommerceInvoiceClient.prototype.remove = function (data) {
        return this.BaasicApiClient.delete(this.baasicCommerceInvoiceRouteDefinition.delete(data));
    };
    return BaasicCommerceInvoiceClient;
}());
BaasicCommerceInvoiceClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceInvoiceRouteDefinition)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceInvoiceStreamsClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceInvoiceRouteDefinition,
        commerce_1.BaasicCommerceInvoiceStreamsClient,
        httpApi_1.BaasicApiClient])
], BaasicCommerceInvoiceClient);
exports.BaasicCommerceInvoiceClient = BaasicCommerceInvoiceClient;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceInvoiceRouteDefinition
 * @description Baasic Commerce Invoice Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Invoice Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceInvoiceRouteDefinition = (function (_super) {
    __extends(BaasicCommerceInvoiceRouteDefinition, _super);
    function BaasicCommerceInvoiceRouteDefinition(baasicCommerceInvoiceStreamsRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicCommerceInvoiceStreamsRouteDefinition = baasicCommerceInvoiceStreamsRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/invoices/{?customerId,invoiceStatusId,subscriptionId,dateCreatedMin,dateCreatedMax,searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/invoices/{id}/{?embed,fields}';
        _this.updateRoute = 'commerce/invoices/{id}';
        _this.deleteRoute = 'commerce/invoices/{id}';
        return _this;
    }
    Object.defineProperty(BaasicCommerceInvoiceRouteDefinition.prototype, "streams", {
        get: function () {
            return this.baasicCommerceInvoiceStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find commerce invoice route which can be expanded with additional options. Supported items are:
     * - `customerId` - The customer identifier.
     * - `invoiceStatusId` - A invoice status unique identifier.
     * - `subscriptionId` - A subscription unique identifier.
     * - `dateCreatedMin` - A date created minimum date filter.
     * - `dateCreatedMax` - A date created maximum date filter.
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicCommerceInvoiceRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceInvoiceRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceInvoiceRouteDefinition.get(id, options);
     **/
    BaasicCommerceInvoiceRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses update route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceInvoiceRouteDefinition.update(data);
     **/
    BaasicCommerceInvoiceRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceInvoiceRouteDefinition.delete(data);
     **/
    BaasicCommerceInvoiceRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceInvoiceRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceInvoiceRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceInvoiceStreamsRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceInvoiceStreamsRouteDefinition, Object])
], BaasicCommerceInvoiceRouteDefinition);
exports.BaasicCommerceInvoiceRouteDefinition = BaasicCommerceInvoiceRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceInvoiceStreamsClient
 * @description Baasic Commerce Invoice Streams Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceInvoiceStreamsClient` uses `baasicCommerceInvoiceStreamsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceInvoiceStreamsClient = (function () {
    function BaasicCommerceInvoiceStreamsClient(baasicCommerceInvoiceStreamsRouteDefinition, BaasicApiClient) {
        this.baasicCommerceInvoiceStreamsRouteDefinition = baasicCommerceInvoiceStreamsRouteDefinition;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommerceInvoiceStreamsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceInvoiceStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the invoice stream if successfully completed.
     * @method
     * @example // commerceInvoice is a resource previously fetched using get action.
                    baasicCommerceInvoiceStreamsClient.get({id: commerceInvoice.id})
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceInvoiceStreamsClient.prototype.get = function (data) {
        return this.BaasicApiClient.get(this.baasicCommerceInvoiceStreamsRouteDefinition.get(data));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the invoice stream as a blob. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method
     * @example // Request the original blob
                        baasicCommerceInvoiceClient.getBlobl({id: commerceInvoice.id})
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommerceInvoiceStreamsClient.prototype.getBlob = function (data) {
        return this.BaasicApiClient.get(this.baasicCommerceInvoiceStreamsRouteDefinition.get(data), { 'Accept': 'application/octet-stream' });
    };
    return BaasicCommerceInvoiceStreamsClient;
}());
BaasicCommerceInvoiceStreamsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceInvoiceStreamsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceInvoiceStreamsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceInvoiceStreamsClient);
exports.BaasicCommerceInvoiceStreamsClient = BaasicCommerceInvoiceStreamsClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceInvoiceStreamsRouteDefinition
 * @description Baasic Commerce Invoice Streams Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Invoice Streams Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceInvoiceStreamsRouteDefinition = (function (_super) {
    __extends(BaasicCommerceInvoiceStreamsRouteDefinition, _super);
    function BaasicCommerceInvoiceStreamsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'commerce/invoice-streams/{id}';
        return _this;
    }
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceInvoiceStremsRouteDefinition.get(data);
     **/
    BaasicCommerceInvoiceStreamsRouteDefinition.prototype.get = function (data) {
        if (!this.utility.isObject(data)) {
            data = {
                id: data
            };
        }
        return _super.prototype.baseCreate.call(this, this.getRoute, data);
    };
    return BaasicCommerceInvoiceStreamsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceInvoiceStreamsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceInvoiceStreamsRouteDefinition);
exports.BaasicCommerceInvoiceStreamsRouteDefinition = BaasicCommerceInvoiceStreamsRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(149));
__export(__webpack_require__(148));
__export(__webpack_require__(147));
__export(__webpack_require__(146));


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsAddressTypeBatchClient
 * @description Baasic Commerce Lookups Address Type Batch Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceLookupsAddressTypesBatchClient` uses `baasicCommerceLookupsAddressTypeBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsAddressTypesBatchClient = (function () {
    function BaasicCommerceLookupsAddressTypesBatchClient(baasicCommerceLookupsAddressTypeBatchRouteDefinition, baasicApiClient) {
        this.baasicCommerceLookupsAddressTypeBatchRouteDefinition = baasicCommerceLookupsAddressTypeBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicCommerceLookupsAddressTypesBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceLookupsAddressTypeBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resources.
     * @method
     * @example baasicCommerceLookupsAddressTypeBatchClient.create([{
                     name : '<name>',
                     abrv: '<abbreviation>',
                     description: '<description>'
                    }])
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsAddressTypesBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsAddressTypeBatchRouteDefinition.create(), this.baasicCommerceLookupsAddressTypeBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates specified commerce resources.
     * @method
     * @example   baasicCommerceLookupsAddressTypeBatchClient.update(commerceAddressTypes)
                       .then(function (data) {
                           // perform success action here
                       },
                        function (response, status, headers, config) {
                            // perform error handling here
                       });
    **/
    BaasicCommerceLookupsAddressTypesBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsAddressTypeBatchRouteDefinition.update(), this.baasicCommerceLookupsAddressTypeBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove commerce action has been performed. This action will remove commerce resources from the system if successfully completed.
     * @method
     * @example baasicCommerceLookupsAddressTypeClient.remove(commerceAddressTypeIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsAddressTypesBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsAddressTypeBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicCommerceLookupsAddressTypesBatchClient;
}());
BaasicCommerceLookupsAddressTypesBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsAddressTypeBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsAddressTypeBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsAddressTypesBatchClient);
exports.BaasicCommerceLookupsAddressTypesBatchClient = BaasicCommerceLookupsAddressTypesBatchClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsAddressTypeBatchRouteDefinition
 * @description Baasic Commerce Lookups AddressType Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups AddressType Batch Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceLookupsAddressTypeBatchRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsAddressTypeBatchRouteDefinition, _super);
    function BaasicCommerceLookupsAddressTypeBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'commerce/lookups/address-types/batch';
        _this.updateRoute = 'commerce/lookups/address-types/batch';
        _this.deleteRoute = 'commerce/lookups/address-types/batch';
        return _this;
    }
    /**
     * Parses create commerce address type batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsAddressTypeRouteDefinition.create();
     */
    BaasicCommerceLookupsAddressTypeBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses remove commerce address type batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsAddressTypeRouteDefinition.update();
     */
    BaasicCommerceLookupsAddressTypeBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove commerce address type batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsAddressTypeRouteDefinition.remove();
     */
    BaasicCommerceLookupsAddressTypeBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicCommerceLookupsAddressTypeBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsAddressTypeBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceLookupsAddressTypeBatchRouteDefinition);
exports.BaasicCommerceLookupsAddressTypeBatchRouteDefinition = BaasicCommerceLookupsAddressTypeBatchRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsAddressTypeClient
 * @description Baasic Commerce Lookups Address Type Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceLookupsAddressTypesClient` uses `baasicCommerceLookupsAddressTypeRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsAddressTypesClient = (function () {
    function BaasicCommerceLookupsAddressTypesClient(baasicCommerceLookupsAddressTypeRouteDefinition, baasicCommerceLookupsAddressTypesBatchClient, baasicApiClient) {
        this.baasicCommerceLookupsAddressTypeRouteDefinition = baasicCommerceLookupsAddressTypeRouteDefinition;
        this.baasicCommerceLookupsAddressTypesBatchClient = baasicCommerceLookupsAddressTypesBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicCommerceLookupsAddressTypesClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceLookupsAddressTypeRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceLookupsAddressTypesClient.prototype, "batch", {
        get: function () {
            return this.baasicCommerceLookupsAddressTypesBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceLookupsAddressTypeClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsAddressTypesClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicCommerceLookupsAddressTypeRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceLookupsAddressTypeClient.get()
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicCommerceLookupsAddressTypesClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicCommerceLookupsAddressTypeRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resource.
     * @method
     * @example baasicCommerceLookupsAddressTypeClient.create({
                       name : '<name>',
                       abrv: '<abbreviation>',
                       description: '<description>'
                   })
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicCommerceLookupsAddressTypesClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsAddressTypeRouteDefinition.create(), this.baasicCommerceLookupsAddressTypeRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsAddressTypeRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceAddressType);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commerceAddressType is a resource previously fetched using get action.
                    commerceAddressType.description = '<description>';
                    baasicCommerceLookupsAddressTypeClient.update(commerceAddressType)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceLookupsAddressTypesClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsAddressTypeRouteDefinition.update(data), this.baasicCommerceLookupsAddressTypeRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsAddressTypeRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceAddressType);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commerceAddressType is a resource previously fetched using get action.
                    baasicCommerceLookupsAddressTypeClient.remove(commerceAddressType)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceLookupsAddressTypesClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsAddressTypeRouteDefinition.delete(data));
    };
    return BaasicCommerceLookupsAddressTypesClient;
}());
BaasicCommerceLookupsAddressTypesClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsAddressTypeRouteDefinition)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsAddressTypesBatchClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsAddressTypeRouteDefinition,
        commerce_1.BaasicCommerceLookupsAddressTypesBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsAddressTypesClient);
exports.BaasicCommerceLookupsAddressTypesClient = BaasicCommerceLookupsAddressTypesClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsAddressTypeRouteDefinition
 * @description Baasic Commerce Lookups AddressType Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups AddressType Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsAddressTypeRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsAddressTypeRouteDefinition, _super);
    function BaasicCommerceLookupsAddressTypeRouteDefinition(baasicCommerceLookupsAddressTypeBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicCommerceLookupsAddressTypeBatchRouteDefinition = baasicCommerceLookupsAddressTypeBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/lookups/address-types/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/lookups/address-types/{id}/{?embed,fields}';
        _this.createRoute = 'commerce/lookups/address-types';
        _this.updateRoute = 'commerce/lookups/address-types/{id}';
        _this.deleteRoute = 'commerce/lookups/address-types/{id}';
        return _this;
    }
    Object.defineProperty(BaasicCommerceLookupsAddressTypeRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicCommerceLookupsAddressTypeBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find commerce address type route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicCommerceLookupsAddressTypeRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceLookupsAddressTypeRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceLookupsAddressTypeRouteDefinition.get(id, options);
     **/
    BaasicCommerceLookupsAddressTypeRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create commerce address type route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsAddressTypeRouteDefinition.create();
     **/
    BaasicCommerceLookupsAddressTypeRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update commerce address type route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsAddressTypeRouteDefinition.update(data);
     **/
    BaasicCommerceLookupsAddressTypeRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete commerce address type route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsAddressTypeRouteDefinition.delete(data);
     **/
    BaasicCommerceLookupsAddressTypeRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceLookupsAddressTypeRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsAddressTypeRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsAddressTypeBatchRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsAddressTypeBatchRouteDefinition, Object])
], BaasicCommerceLookupsAddressTypeRouteDefinition);
exports.BaasicCommerceLookupsAddressTypeRouteDefinition = BaasicCommerceLookupsAddressTypeRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(152));
__export(__webpack_require__(151));
__export(__webpack_require__(154));
__export(__webpack_require__(153));


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceCountryStateBatchClient
 * @description Baasic Commerce Country State Batch Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceCountryStateBatchClient` uses `baasicCommerceCountryStateBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsCountryStateBatchClient = (function () {
    function BaasicCommerceLookupsCountryStateBatchClient(baasicCommerceLookupsCountryStateBatchRouteDefinition, baasicApiClient) {
        this.baasicCommerceLookupsCountryStateBatchRouteDefinition = baasicCommerceLookupsCountryStateBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resources.
     * @method
     * @example baasicCommerceLookupsCountryStateBatchClient.create([{
                    countryId: '<country-id>',
                    name : '<name>',
                    abrv: '<abbreviation>',
                    description: '<description>'
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsCountryStateBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsCountryStateBatchRouteDefinition.create(), this.baasicCommerceLookupsCountryStateBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates specified commerce resources.
     * @method
     * @example baasicCommerceLookupsCountryStateBatchClient.update(commerceCountryStates)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsCountryStateBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsCountryStateBatchRouteDefinition.update(), this.baasicCommerceLookupsCountryStateBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove commerce action has been performed. This action will remove commerce resources from the system if successfully completed.
     * @method
     * @example baasicCommerceLookupsCountryStateBatchClient.remove(commerceCountryStateIds)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicCommerceLookupsCountryStateBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsCountryStateBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicCommerceLookupsCountryStateBatchClient;
}());
BaasicCommerceLookupsCountryStateBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsCountryStateBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsCountryStateBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsCountryStateBatchClient);
exports.BaasicCommerceLookupsCountryStateBatchClient = BaasicCommerceLookupsCountryStateBatchClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsCountryStateBatchRouteDefinition
 * @description Baasic Commerce Lookups Country State Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups Country State Batch Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceLookupsCountryStateBatchRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsCountryStateBatchRouteDefinition, _super);
    function BaasicCommerceLookupsCountryStateBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'commerce/lookups/states/batch';
        _this.updateRoute = 'commerce/lookups/states/batch';
        _this.deleteRoute = 'commerce/lookups/states/batch';
        return _this;
    }
    /**
     * Parses create commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsCountryStateBatchRouteDefinition.create();
     */
    BaasicCommerceLookupsCountryStateBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsCountryStateBatchRouteDefinition.update();
     */
    BaasicCommerceLookupsCountryStateBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsCountryStateBatchRouteDefinition.remove();
     */
    BaasicCommerceLookupsCountryStateBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicCommerceLookupsCountryStateBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsCountryStateBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceLookupsCountryStateBatchRouteDefinition);
exports.BaasicCommerceLookupsCountryStateBatchRouteDefinition = BaasicCommerceLookupsCountryStateBatchRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceCountryStateClient
 * @description Baasic Commerce Country State Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceCountryStateClient` uses `baasicCommerceCountryStateRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsCountryStateClient = (function () {
    function BaasicCommerceLookupsCountryStateClient(baasicCommerceLookupsCountryStateRouteDefinition, baasicCommerceLookupsCountryStateBatchClient, baasicApiClient) {
        this.baasicCommerceLookupsCountryStateRouteDefinition = baasicCommerceLookupsCountryStateRouteDefinition;
        this.baasicCommerceLookupsCountryStateBatchClient = baasicCommerceLookupsCountryStateBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicCommerceLookupsCountryStateClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceLookupsCountryStateRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceLookupsCountryStateClient.prototype, "batch", {
        get: function () {
            return this.baasicCommerceLookupsCountryStateBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceLookupsCountryStateClient.find({
                    countryId: '<country-id>'
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsCountryStateClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicCommerceLookupsCountryStateRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceLookupsCountryStateClient.get('<state-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsCountryStateClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicCommerceLookupsCountryStateRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resource.
     * @method
     * @example baasicCommerceLookupsCountryStateClient.create({
                      countryId : '<country-id>',
                      name: '<name>',
                      abrv: '<abrv>',
                      description: '<description>'
                  })
                  .then(function (data) {
                      // perform success action here
                  },
                   function (response, status, headers, config) {
                       // perform error handling here
                  });
   **/
    BaasicCommerceLookupsCountryStateClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsCountryStateRouteDefinition.create(), this.baasicCommerceLookupsCountryStateRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsCountryStateRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceCountryState);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commerceCountryState is a resource previously fetched using get action.
                    commerceCountryState.description = '<description>';
                    baasicCommerceLookupsCountryStateClient.update(commerceCountryState)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceLookupsCountryStateClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsCountryStateRouteDefinition.update(data), this.baasicCommerceLookupsCountryStateRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsCountryStateRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceCountryState);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commerceCountryState is a resource previously fetched using get action.
                   baasicCommerceLookupsCountryStateClient.remove(commerceCountryState)
                       .then(function (data) {
                           // perform success action here
                       },
                        function (response, status, headers, config) {
                            // perform error handling here
                       });
    **/
    BaasicCommerceLookupsCountryStateClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsCountryStateRouteDefinition.delete(data));
    };
    return BaasicCommerceLookupsCountryStateClient;
}());
BaasicCommerceLookupsCountryStateClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsCountryStateRouteDefinition)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsCountryStateBatchClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsCountryStateRouteDefinition,
        commerce_1.BaasicCommerceLookupsCountryStateBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsCountryStateClient);
exports.BaasicCommerceLookupsCountryStateClient = BaasicCommerceLookupsCountryStateClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsCountryRouteDefinition
 * @description Baasic Commerce Lookups Country Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups Country Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsCountryStateRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsCountryStateRouteDefinition, _super);
    function BaasicCommerceLookupsCountryStateRouteDefinition(baasicCommerceCountryStateBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicCommerceCountryStateBatchRouteDefinition = baasicCommerceCountryStateBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/lookups/states/{?countryId,searchQuery,page,rpp,sort,embed}';
        _this.getRoute = 'commerce/lookups/states/{id}/{?embed}';
        _this.createRoute = 'commerce/lookups/states';
        _this.updateRoute = 'commerce/lookups/states/{id}';
        _this.deleteRoute = 'commerce/lookups/states/{id}';
        return _this;
    }
    Object.defineProperty(BaasicCommerceLookupsCountryStateRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicCommerceCountryStateBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find commerce country state route which can be expanded with additional options. Supported items are:
     * - `countryId` - An identifier used to identify commerce country resource.
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicCommerceLookupsCountryStateRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceLookupsCountryStateRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get commerce country state route which can be expanded with additional options. Supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicCommerceLookupsCountryStateRouteDefinition.get(id, options);
     **/
    BaasicCommerceLookupsCountryStateRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create commerce country state route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsCountryStateRouteDefinition.create();
     **/
    BaasicCommerceLookupsCountryStateRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update commerce country state route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsCountryStateRouteDefinition.update(data);
     **/
    BaasicCommerceLookupsCountryStateRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete commerce country state route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsCountryStateRouteDefinition.delete(data);
     **/
    BaasicCommerceLookupsCountryStateRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceLookupsCountryStateRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsCountryStateRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsCountryStateBatchRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsCountryStateBatchRouteDefinition, Object])
], BaasicCommerceLookupsCountryStateRouteDefinition);
exports.BaasicCommerceLookupsCountryStateRouteDefinition = BaasicCommerceLookupsCountryStateRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(157));
__export(__webpack_require__(156));
__export(__webpack_require__(159));
__export(__webpack_require__(158));


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceCountryBatchClient
 * @description Baasic Commerce Country Batch Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceCountryBatchClient` uses `baasicCommerceCountryBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsCountryBatchClient = (function () {
    function BaasicCommerceLookupsCountryBatchClient(baasicCommerceLookupsCountryBatchRouteDefinition, baasicApiClient) {
        this.baasicCommerceLookupsCountryBatchRouteDefinition = baasicCommerceLookupsCountryBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resources.
     * @method
     * @example baasicCommerceLookupsCountryClient.create([{
                    name : '<name>',
                    abrv: '<abbreviation>',
                    description: '<description>'
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsCountryBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsCountryBatchRouteDefinition.create(), this.baasicCommerceLookupsCountryBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates specified commerce resources.
     * @method
     * @example   baasicCommerceLookupsCountryClient.update(commerceCountries)
                      .then(function (data) {
                          // perform success action here
                      },
                       function (response, status, headers, config) {
                           // perform error handling here
                      });
   **/
    BaasicCommerceLookupsCountryBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsCountryBatchRouteDefinition.update(), this.baasicCommerceLookupsCountryBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove commerce action has been performed. This action will remove commerce resources from the system if successfully completed.
     * @method
     * @example baasicCommerceLookupsCountryClient.remove(commerceCountryIds)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicCommerceLookupsCountryBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsCountryBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicCommerceLookupsCountryBatchClient;
}());
BaasicCommerceLookupsCountryBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsCountryBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsCountryBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsCountryBatchClient);
exports.BaasicCommerceLookupsCountryBatchClient = BaasicCommerceLookupsCountryBatchClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsCountryBatchRouteDefinition
 * @description Baasic Commerce Lookups Country Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups Country Batch Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceLookupsCountryBatchRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsCountryBatchRouteDefinition, _super);
    function BaasicCommerceLookupsCountryBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'commerce/lookups/countries/batch';
        _this.updateRoute = 'commerce/lookups/countries/batch';
        _this.deleteRoute = 'commerce/lookups/countries/batch';
        return _this;
    }
    /**
     * Parses create commerce country batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsCountryRouteDefinition.create();
     */
    BaasicCommerceLookupsCountryBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses remove commerce country batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsCountryRouteDefinition.update();
     */
    BaasicCommerceLookupsCountryBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove commerce country batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsCountryRouteDefinition.remove();
     */
    BaasicCommerceLookupsCountryBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicCommerceLookupsCountryBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsCountryBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceLookupsCountryBatchRouteDefinition);
exports.BaasicCommerceLookupsCountryBatchRouteDefinition = BaasicCommerceLookupsCountryBatchRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceCountryClient
 * @description Baasic Commerce Country Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceCountryClient` uses `baasicCommerceCountryRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsCountryClient = (function () {
    function BaasicCommerceLookupsCountryClient(baasicCommerceLookupsCountryRouteDefinition, baasicCommerceLookupsCountryBatchClient, baasicApiClient) {
        this.baasicCommerceLookupsCountryRouteDefinition = baasicCommerceLookupsCountryRouteDefinition;
        this.baasicCommerceLookupsCountryBatchClient = baasicCommerceLookupsCountryBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicCommerceLookupsCountryClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceLookupsCountryRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceLookupsCountryClient.prototype, "batch", {
        get: function () {
            return this.baasicCommerceLookupsCountryBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceLookupsCountryClient.find({
                   pageNumber : 1,
                   pageSize : 10,
                   orderBy : '<field>',
                   orderDirection : '<asc|desc>',
                   search : '<search-phrase>'
               })
               .then(function (collection) {
                   // perform success action here
               },
                function (response, status, headers, config) {
                    // perform error handling here
               });
    **/
    BaasicCommerceLookupsCountryClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicCommerceLookupsCountryRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceLookupsCountryClient.get('<country-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicCommerceLookupsCountryClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicCommerceLookupsCountryRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resource.
     * @method
     * @example baasicCommerceLookupsCountryClient.create({
                    name : '<name>',
                    abrv: '<abbreviation>',
                    description: '<description>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsCountryClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsCountryRouteDefinition.create(), this.baasicCommerceLookupsCountryRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceCountryRouteService` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceCountry);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commerceCountry is a resource previously fetched using get action.
                        commerceCountry.phoneCode = '<phone-code>';
                        baasicCommerceLookupsCountryClient.update(commerceCountry)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommerceLookupsCountryClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsCountryRouteDefinition.update(data), this.baasicCommerceLookupsCountryRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsCountryRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceCountry);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commerceCountry is a resource previously fetched using get action.
                    baasicCommerceLookupsCountryClient.remove(commerceCountry)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceLookupsCountryClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsCountryRouteDefinition.delete(data));
    };
    return BaasicCommerceLookupsCountryClient;
}());
BaasicCommerceLookupsCountryClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsCountryRouteDefinition)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsCountryBatchClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsCountryRouteDefinition,
        commerce_1.BaasicCommerceLookupsCountryBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsCountryClient);
exports.BaasicCommerceLookupsCountryClient = BaasicCommerceLookupsCountryClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsCountryRouteDefinition
 * @description Baasic Commerce Lookups Country Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups Country Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsCountryRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsCountryRouteDefinition, _super);
    function BaasicCommerceLookupsCountryRouteDefinition(baasicCommerceCountryBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicCommerceCountryBatchRouteDefinition = baasicCommerceCountryBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/lookups/countries/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/lookups/countries/{id}/{?embed,fields}';
        _this.createRoute = 'commerce/lookups/countries';
        _this.updateRoute = 'commerce/lookups/countries/{id}';
        _this.deleteRoute = 'commerce/lookups/countries/{id}';
        return _this;
    }
    Object.defineProperty(BaasicCommerceLookupsCountryRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicCommerceCountryBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find commerce country route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicCommerceLookupsCountryRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceLookupsCountryRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceLookupsCountryRouteDefinition.get();
     **/
    BaasicCommerceLookupsCountryRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create commerce country route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsCountryRouteDefinition.create();
     **/
    BaasicCommerceLookupsCountryRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
    * Parses update commerce country route; this URI template does not expose any additional options.
    * @method
    * @example baasicCommerceLookupsCountryRouteDefinition.update(data);
    **/
    BaasicCommerceLookupsCountryRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
    * Parses delete commerce country route; this URI template does not expose any additional options.
    * @method
    * @example baasicCommerceLookupsCountryRouteDefinition.delete(data);
    **/
    BaasicCommerceLookupsCountryRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceLookupsCountryRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsCountryRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsCountryBatchRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsCountryBatchRouteDefinition, Object])
], BaasicCommerceLookupsCountryRouteDefinition);
exports.BaasicCommerceLookupsCountryRouteDefinition = BaasicCommerceLookupsCountryRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(162));
__export(__webpack_require__(161));
__export(__webpack_require__(164));
__export(__webpack_require__(163));


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceInvoiceStatusBatchClient
 * @description Baasic Commerce Invoice Stauts Batch Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceInvoiceStatusBatchClient` uses `baasicCommerceInvoiceStatusBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsInvoiceStatusBatchClient = (function () {
    function BaasicCommerceLookupsInvoiceStatusBatchClient(baasicCommerceLookupsInvoiceStatusBatchRouteDefinition, baasicApiClient) {
        this.baasicCommerceLookupsInvoiceStatusBatchRouteDefinition = baasicCommerceLookupsInvoiceStatusBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resources.
     * @method
     * @example baasicCommerceLookupsInvoiceStatusBatchClient.create([{
                    name : '<name>',
                    abrv: '<abbreviation>',
                    description: '<description>'
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicCommerceLookupsInvoiceStatusBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsInvoiceStatusBatchRouteDefinition.create(), this.baasicCommerceLookupsInvoiceStatusBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates specified commerce resources.
     * @method
     * @example baasicCommerceLookupsInvoiceStatusBatchClient.update(InvoiceStatuses)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsInvoiceStatusBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsInvoiceStatusBatchRouteDefinition.update(), this.baasicCommerceLookupsInvoiceStatusBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove commerce action has been performed. This action will remove commerce resources from the system if successfully completed.
     * @method
     * @example baasicCommerceLookupsInvoiceStatusBatchClient.remove(InvoiceStatusIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsInvoiceStatusBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsInvoiceStatusBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicCommerceLookupsInvoiceStatusBatchClient;
}());
BaasicCommerceLookupsInvoiceStatusBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsInvoiceStatusBatchClient);
exports.BaasicCommerceLookupsInvoiceStatusBatchClient = BaasicCommerceLookupsInvoiceStatusBatchClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsInvoiceStatusBatchRouteDefinition
 * @description Baasic Commerce Lookups Invoice Status Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups Country State Batch Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition, _super);
    function BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'commerce/lookups/invoice-statuses/batch';
        _this.updateRoute = 'commerce/lookups/invoice-statuses/batch';
        _this.deleteRoute = 'commerce/lookups/invoice-statuses/batch';
        return _this;
    }
    /**
     * Parses create commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsInvoiceStatusBatchRouteDefinition.create();
     */
    BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsInvoiceStatusBatchRouteDefinition.update();
     */
    BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsInvoiceStatusBatchRouteDefinition.remove();
     */
    BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition);
exports.BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition = BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsInvoiceStatusClient
 * @description Baasic Commerce Lookups InvoiceStatus Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceLookupsInvoiceStatusClient` uses `baasicCommerceLookupsInvoiceStatusRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsInvoiceStatusClient = (function () {
    function BaasicCommerceLookupsInvoiceStatusClient(baasicCommerceLookupsInvoiceStatusBatchClient, baasicCommerceLookupsInvoiceStatusRouteDefinition, BaasicApiClient) {
        this.baasicCommerceLookupsInvoiceStatusBatchClient = baasicCommerceLookupsInvoiceStatusBatchClient;
        this.baasicCommerceLookupsInvoiceStatusRouteDefinition = baasicCommerceLookupsInvoiceStatusRouteDefinition;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommerceLookupsInvoiceStatusClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceLookupsInvoiceStatusRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceLookupsInvoiceStatusClient.prototype, "batch", {
        get: function () {
            return this.baasicCommerceLookupsInvoiceStatusBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceLookupsInvoiceStatusClient.find({
                        pageNumber : 1,
                        pageSize : 10,
                        orderBy : '<field>',
                        orderDirection : '<asc|desc>',
                        search : '<search-phrase>'
                    })
                    .then(function (collection) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsInvoiceStatusClient.prototype.find = function (options) {
        return this.BaasicApiClient.get(this.baasicCommerceLookupsInvoiceStatusRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceLookupsInvoiceStatusClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsInvoiceStatusClient.prototype.get = function (id, options) {
        return this.BaasicApiClient.get(this.baasicCommerceLookupsInvoiceStatusRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsInvoiceStatusRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceInvoiceStatus);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commerceInvoiceStatus is a resource previously fetched using get action.
                    commerceInvoiceStatus.description = '<description>';
                    baasicCommerceLookupsInvoiceStatusClient.update(commerceInvoiceStatus)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceLookupsInvoiceStatusClient.prototype.update = function (data) {
        return this.BaasicApiClient.put(this.baasicCommerceLookupsInvoiceStatusRouteDefinition.update(data), this.baasicCommerceLookupsInvoiceStatusRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resource.
     * @method
     * @example baasicCommerceLookupsInvoiceStatusClient.create({
                    name : '<name>',
                    abrv: '<abbreviation>',
                    description: '<description>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsInvoiceStatusClient.prototype.create = function (data) {
        return this.BaasicApiClient.post(this.baasicCommerceLookupsInvoiceStatusRouteDefinition.create(), this.baasicCommerceLookupsInvoiceStatusRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsInvoiceStatusRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceInvoiceStatus);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commerceInvoiceStatus is a resource previously fetched using get action.
                    baasicCommerceLookupsInvoiceStatusClient.remove(commerceInvoiceStatus)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceLookupsInvoiceStatusClient.prototype.remove = function (data) {
        return this.BaasicApiClient.delete(this.baasicCommerceLookupsInvoiceStatusRouteDefinition.delete(data));
    };
    return BaasicCommerceLookupsInvoiceStatusClient;
}());
BaasicCommerceLookupsInvoiceStatusClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsInvoiceStatusBatchClient)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsInvoiceStatusRouteDefinition)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsInvoiceStatusBatchClient,
        commerce_1.BaasicCommerceLookupsInvoiceStatusRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsInvoiceStatusClient);
exports.BaasicCommerceLookupsInvoiceStatusClient = BaasicCommerceLookupsInvoiceStatusClient;
/**
 * @copyright(c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsInvoiceStatusRouteDefinition
 * @description Baasic Commerce Lookups InvoiceStatus Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups InvoiceStatus Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsInvoiceStatusRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsInvoiceStatusRouteDefinition, _super);
    function BaasicCommerceLookupsInvoiceStatusRouteDefinition(basicCommerceLookupsInvoiceStatusBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.basicCommerceLookupsInvoiceStatusBatchRouteDefinition = basicCommerceLookupsInvoiceStatusBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/lookups/invoice-statuses/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/lookups/invoice-statuses/{id}/{?embed,fields}';
        _this.createRoute = 'commerce/lookups/invoice-statuses';
        _this.updateRoute = 'commerce/lookups/invoice-statuses/{id}';
        _this.deleteRoute = 'commerce/lookups/invoice-statuses/{id}';
        return _this;
    }
    Object.defineProperty(BaasicCommerceLookupsInvoiceStatusRouteDefinition.prototype, "batch", {
        get: function () {
            return this.basicCommerceLookupsInvoiceStatusBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find commerce customer-payment-methods route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options.
     * @example baasicCommerceLookupsInvoiceStatusRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceLookupsInvoiceStatusRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceLookupsInvoiceStatusRouteDefinition.get();
     **/
    BaasicCommerceLookupsInvoiceStatusRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, options);
    };
    /**
     * Parses create commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsInvoiceStatusRouteDefinition.create();
     **/
    BaasicCommerceLookupsInvoiceStatusRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsInvoiceStatusRouteDefinition.update(data);
     **/
    BaasicCommerceLookupsInvoiceStatusRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsInvoiceStatusRouteDefinition.delete(data);
     **/
    BaasicCommerceLookupsInvoiceStatusRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceLookupsInvoiceStatusRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsInvoiceStatusRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsInvoiceStatusBatchRouteDefinition, Object])
], BaasicCommerceLookupsInvoiceStatusRouteDefinition);
exports.BaasicCommerceLookupsInvoiceStatusRouteDefinition = BaasicCommerceLookupsInvoiceStatusRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(167));
__export(__webpack_require__(166));
__export(__webpack_require__(169));
__export(__webpack_require__(168));


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var commerce_1 = __webpack_require__(4);
var lookups_1 = __webpack_require__(32);
var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var Lookups = (function () {
    function Lookups(addressTypes, countries, countryStates, paymentMethods, paymentTransactionStatuses, recurringCyclePerioedTypes, subscriptionStatuses, invoiceStatuses) {
        this.addressTypes = addressTypes;
        this.countries = countries;
        this.countryStates = countryStates;
        this.paymentMethods = paymentMethods;
        this.paymentTransactionStatuses = paymentTransactionStatuses;
        this.recurringCyclePerioedTypes = recurringCyclePerioedTypes;
        this.subscriptionStatuses = subscriptionStatuses;
        this.invoiceStatuses = invoiceStatuses;
    }
    return Lookups;
}());
Lookups = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsAddressTypesClient)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsCountryClient)),
    __param(2, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsCountryStateClient)),
    __param(3, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsPaymentMethodClient)),
    __param(4, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsPaymentTransactionStatusClient)),
    __param(5, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsRecurringCyclePeriodTypeClient)),
    __param(6, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsSubscriptionStatusClient)),
    __param(7, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsInvoiceStatusClient)),
    __metadata("design:paramtypes", [lookups_1.BaasicCommerceLookupsAddressTypesClient,
        lookups_1.BaasicCommerceLookupsCountryClient,
        lookups_1.BaasicCommerceLookupsCountryStateClient,
        lookups_1.BaasicCommerceLookupsPaymentMethodClient,
        lookups_1.BaasicCommerceLookupsPaymentTransactionStatusClient,
        lookups_1.BaasicCommerceLookupsRecurringCyclePeriodTypeClient,
        lookups_1.BaasicCommerceLookupsSubscriptionStatusClient,
        lookups_1.BaasicCommerceLookupsInvoiceStatusClient])
], Lookups);
exports.Lookups = Lookups;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommercePaymentMethodBatchClient
 * @description Baasic Commerce Payment Method Batch Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommercePaymentMethodBatchClient` uses `baasicCommercePaymentMethodBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsPaymentMethodBatchClient = (function () {
    function BaasicCommerceLookupsPaymentMethodBatchClient(baasicCommerceLookupsPaymentMethodBatchRouteDefinition, baasicApiClient) {
        this.baasicCommerceLookupsPaymentMethodBatchRouteDefinition = baasicCommerceLookupsPaymentMethodBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resources.
     * @method
     * @example baasicCommerceLookupsPaymentMethodBatchClient.create([{
                        name : '<name>',
                        abrv: '<abbreviation>',
                        description: '<description>',
                        published: '<published>'
                    }])
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsPaymentMethodBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsPaymentMethodBatchRouteDefinition.create(), this.baasicCommerceLookupsPaymentMethodBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates specified commerce resources.
     * @method
     * @example   baasicCommerceLookupsPaymentMethodBatchClient.update(commercePaymentMethods)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceLookupsPaymentMethodBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsPaymentMethodBatchRouteDefinition.update(), this.baasicCommerceLookupsPaymentMethodBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove commerce action has been performed. This action will remove commerce resources from the system if successfully completed.
     * @method
     * @example baasicCommerceLookupsPaymentMethodBatchClient.remove(commercePaymentMethodIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsPaymentMethodBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsPaymentMethodBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicCommerceLookupsPaymentMethodBatchClient;
}());
BaasicCommerceLookupsPaymentMethodBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsPaymentMethodBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsPaymentMethodBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsPaymentMethodBatchClient);
exports.BaasicCommerceLookupsPaymentMethodBatchClient = BaasicCommerceLookupsPaymentMethodBatchClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsPaymentMethodBatchRouteDefinition
 * @description Baasic Commerce Lookups Payment Method Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups Country State Batch Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceLookupsPaymentMethodBatchRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsPaymentMethodBatchRouteDefinition, _super);
    function BaasicCommerceLookupsPaymentMethodBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'commerce/lookups/payment-methods/batch';
        _this.updateRoute = 'commerce/lookups/payment-methods/batch';
        _this.deleteRoute = 'commerce/lookups/payment-methods/batch';
        return _this;
    }
    /**
     * Parses create commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsPaymentMethodBatchRouteDefinition.create();
     */
    BaasicCommerceLookupsPaymentMethodBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsPaymentMethodBatchRouteDefinition.update();
     */
    BaasicCommerceLookupsPaymentMethodBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsPaymentMethodBatchRouteDefinition.remove();
     */
    BaasicCommerceLookupsPaymentMethodBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicCommerceLookupsPaymentMethodBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsPaymentMethodBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceLookupsPaymentMethodBatchRouteDefinition);
exports.BaasicCommerceLookupsPaymentMethodBatchRouteDefinition = BaasicCommerceLookupsPaymentMethodBatchRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsPaymentMethodClient
 * @description Baasic Commerce Lookups PaymentMethod Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceLookupsPaymentMethodClient` uses `baasicCommerceLookupsPaymentMethodRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsPaymentMethodClient = (function () {
    function BaasicCommerceLookupsPaymentMethodClient(baasicCommerceLookupsPaymentMethodBatchClient, baasicCommerceLookupsPaymentMethodRouteDefinition, BaasicApiClient) {
        this.baasicCommerceLookupsPaymentMethodBatchClient = baasicCommerceLookupsPaymentMethodBatchClient;
        this.baasicCommerceLookupsPaymentMethodRouteDefinition = baasicCommerceLookupsPaymentMethodRouteDefinition;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommerceLookupsPaymentMethodClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceLookupsPaymentMethodRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceLookupsPaymentMethodClient.prototype, "batch", {
        get: function () {
            return this.baasicCommerceLookupsPaymentMethodBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusClient.find({
                        pageNumber : 1,
                        pageSize : 10,
                        orderBy : '<field>',
                        orderDirection : '<asc|desc>',
                        search : '<search-phrase>'
                    })
                    .then(function (collection) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsPaymentMethodClient.prototype.find = function (options) {
        return this.BaasicApiClient.get(this.baasicCommerceLookupsPaymentMethodRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusClient.get()
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicCommerceLookupsPaymentMethodClient.prototype.get = function (id, options) {
        return this.BaasicApiClient.get(this.baasicCommerceLookupsPaymentMethodRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsPaymentTransactionStatusRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commercePaymentTransactionStatus);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commercePaymentTransactionStatus is a resource previously fetched using get action.
                        commercePaymentTransactionStatus.description = '<description>';
                        baasicCommerceLookupsPaymentTransactionStatusClient.update(commercePaymentTransactionStatus)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommerceLookupsPaymentMethodClient.prototype.update = function (data) {
        return this.BaasicApiClient.put(this.baasicCommerceLookupsPaymentMethodRouteDefinition.update(data), this.baasicCommerceLookupsPaymentMethodRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resource.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusClient.create({
                        name : '<name>',
                        abrv: '<abbreviation>',
                        description: '<description>'
                    })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsPaymentMethodClient.prototype.create = function (data) {
        return this.BaasicApiClient.post(this.baasicCommerceLookupsPaymentMethodRouteDefinition.create(), this.baasicCommerceLookupsPaymentMethodRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsPaymentTransactionStatusRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commercePaymentTransactionStatus);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commercePaymentTransactionStatus is a resource previously fetched using get action.
                        baasicCommerceLookupsPaymentTransactionStatusClient.remove(commercePaymentTransactionStatus)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommerceLookupsPaymentMethodClient.prototype.remove = function (data) {
        return this.BaasicApiClient.delete(this.baasicCommerceLookupsPaymentMethodRouteDefinition.delete(data));
    };
    return BaasicCommerceLookupsPaymentMethodClient;
}());
BaasicCommerceLookupsPaymentMethodClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsPaymentMethodBatchClient)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsPaymentMethodRouteDefinition)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsPaymentMethodBatchClient,
        commerce_1.BaasicCommerceLookupsPaymentMethodRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsPaymentMethodClient);
exports.BaasicCommerceLookupsPaymentMethodClient = BaasicCommerceLookupsPaymentMethodClient;
/**
 * @copyright(c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsPaymentMethodRouteDefinition
 * @description Baasic Commerce Lookups PaymentMethod Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups PaymentMethod Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsPaymentMethodRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsPaymentMethodRouteDefinition, _super);
    function BaasicCommerceLookupsPaymentMethodRouteDefinition(basicCommerceLookupsPaymentMethodBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.basicCommerceLookupsPaymentMethodBatchRouteDefinition = basicCommerceLookupsPaymentMethodBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/lookups/payment-methods/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/lookups/payment-methods/{id}/{?embed,fields}';
        _this.createRoute = 'commerce/lookups/payment-methods';
        _this.updateRoute = 'commerce/lookups/payment-methods/{id}';
        _this.deleteRoute = 'commerce/lookups/payment-methods/{id}';
        return _this;
    }
    Object.defineProperty(BaasicCommerceLookupsPaymentMethodRouteDefinition.prototype, "batch", {
        get: function () {
            return this.basicCommerceLookupsPaymentMethodBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find commerce customer-payment-methods route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options.
     * @example baasicCommerceLookupsPaymentMethodRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceLookupsPaymentMethodRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceLookupsPaymentMethodRouteDefinition.get();
     **/
    BaasicCommerceLookupsPaymentMethodRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, options);
    };
    /**
     * Parses create commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsPaymentMethodRouteDefinition.create();
     **/
    BaasicCommerceLookupsPaymentMethodRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsPaymentMethodRouteDefinition.update(data);
     **/
    BaasicCommerceLookupsPaymentMethodRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsPaymentMethodRouteDefinition.delete(data);
     **/
    BaasicCommerceLookupsPaymentMethodRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceLookupsPaymentMethodRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsPaymentMethodRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsPaymentMethodBatchRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsPaymentMethodBatchRouteDefinition, Object])
], BaasicCommerceLookupsPaymentMethodRouteDefinition);
exports.BaasicCommerceLookupsPaymentMethodRouteDefinition = BaasicCommerceLookupsPaymentMethodRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(173));
__export(__webpack_require__(172));
__export(__webpack_require__(175));
__export(__webpack_require__(174));


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommercePaymentTransactionStatusBatchClient
 * @description Baasic Commerce Payment Method Batch Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommercePaymentTransactionStatusBatchClient` uses `baasicCommercePaymentTransactionStatusBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsPaymentTransactionStatusBatchClient = (function () {
    function BaasicCommerceLookupsPaymentTransactionStatusBatchClient(baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition, baasicApiClient) {
        this.baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition = baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resources.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusBatchClient.create([{
                   name : '<name>',
                   abrv: '<abbreviation>',
                   description: '<description>'
               }])
               .then(function (data) {
                   // perform success action here
               },
                function (response, status, headers, config) {
                    // perform error handling here
               });
    **/
    BaasicCommerceLookupsPaymentTransactionStatusBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.create(), this.baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates specified commerce resources.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusBatchClient.update(commercePaymentTransactionStatuses)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsPaymentTransactionStatusBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.update(), this.baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove commerce action has been performed. This action will remove commerce resources from the system if successfully completed.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusBatchClient.remove(commercePaymentTransactionStatusIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsPaymentTransactionStatusBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicCommerceLookupsPaymentTransactionStatusBatchClient;
}());
BaasicCommerceLookupsPaymentTransactionStatusBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsPaymentTransactionStatusBatchClient);
exports.BaasicCommerceLookupsPaymentTransactionStatusBatchClient = BaasicCommerceLookupsPaymentTransactionStatusBatchClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition
 * @description Baasic Commerce Lookups Payment Method Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups Country State Batch Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition, _super);
    function BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'commerce/lookups/payment-transaction-statuses/batch';
        _this.updateRoute = 'commerce/lookups/payment-transaction-statuses/batch';
        _this.deleteRoute = 'commerce/lookups/payment-transaction-statuses/batch';
        return _this;
    }
    /**
     * Parses create commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.create();
     */
    BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.update();
     */
    BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.remove();
     */
    BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition);
exports.BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition = BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsPaymentTransactionStatusClient
 * @description Baasic Commerce Lookups PaymentTransactionStatus Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceLookupsPaymentTransactionStatusClient` uses `baasicCommerceLookupsPaymentTransactionStatusRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsPaymentTransactionStatusClient = (function () {
    function BaasicCommerceLookupsPaymentTransactionStatusClient(baasicCommerceLookupsPaymentTransactionStatusBatchClient, baasicCommerceLookupsPaymentTransactionStatusRouteDefinition, BaasicApiClient) {
        this.baasicCommerceLookupsPaymentTransactionStatusBatchClient = baasicCommerceLookupsPaymentTransactionStatusBatchClient;
        this.baasicCommerceLookupsPaymentTransactionStatusRouteDefinition = baasicCommerceLookupsPaymentTransactionStatusRouteDefinition;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommerceLookupsPaymentTransactionStatusClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceLookupsPaymentTransactionStatusRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceLookupsPaymentTransactionStatusClient.prototype, "batch", {
        get: function () {
            return this.baasicCommerceLookupsPaymentTransactionStatusBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusClient.find({
                        pageNumber : 1,
                        pageSize : 10,
                        orderBy : '<field>',
                        orderDirection : '<asc|desc>',
                        search : '<search-phrase>'
                    })
                    .then(function (collection) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsPaymentTransactionStatusClient.prototype.find = function (options) {
        return this.BaasicApiClient.get(this.baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsPaymentTransactionStatusClient.prototype.get = function (id, options) {
        return this.BaasicApiClient.get(this.baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsPaymentTransactionStatusRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commercePaymentTransactionStatus);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commercePaymentTransactionStatus is a resource previously fetched using get action.
                    commercePaymentTransactionStatus.description = '<description>';
                    baasicCommerceLookupsPaymentTransactionStatusClient.update(commercePaymentTransactionStatus)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceLookupsPaymentTransactionStatusClient.prototype.update = function (data) {
        return this.BaasicApiClient.put(this.baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.update(data), this.baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resource.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusClient.create({
                    name : '<name>',
                    abrv: '<abbreviation>',
                    description: '<description>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsPaymentTransactionStatusClient.prototype.create = function (data) {
        return this.BaasicApiClient.post(this.baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.create(), this.baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsPaymentTransactionStatusRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commercePaymentTransactionStatus);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commercePaymentTransactionStatus is a resource previously fetched using get action.
                        baasicCommerceLookupsPaymentTransactionStatusClient.remove(commercePaymentTransactionStatus)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommerceLookupsPaymentTransactionStatusClient.prototype.remove = function (data) {
        return this.BaasicApiClient.delete(this.baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.delete(data));
    };
    return BaasicCommerceLookupsPaymentTransactionStatusClient;
}());
BaasicCommerceLookupsPaymentTransactionStatusClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsPaymentTransactionStatusBatchClient)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsPaymentTransactionStatusBatchClient,
        commerce_1.BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsPaymentTransactionStatusClient);
exports.BaasicCommerceLookupsPaymentTransactionStatusClient = BaasicCommerceLookupsPaymentTransactionStatusClient;
/**
 * @copyright(c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsPaymentTransactionStatusRouteDefinition
 * @description Baasic Commerce Lookups PaymentTransactionStatus Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups PaymentTransactionStatus Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition, _super);
    function BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition(basicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.basicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition = basicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/lookups/payment-transaction-statuses/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/lookups/payment-transaction-statuses/{id}/{?embed,fields}';
        _this.createRoute = 'commerce/lookups/payment-transaction-statuses';
        _this.updateRoute = 'commerce/lookups/payment-transaction-statuses/{id}';
        _this.deleteRoute = 'commerce/lookups/payment-transaction-statuses/{id}';
        return _this;
    }
    Object.defineProperty(BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition.prototype, "batch", {
        get: function () {
            return this.basicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find commerce customer-payment-methods route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options.
     * @example baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.get();
     **/
    BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, options);
    };
    /**
     * Parses create commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.create();
     **/
    BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.update(data);
     **/
    BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsPaymentTransactionStatusRouteDefinition.delete(data);
     **/
    BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsPaymentTransactionStatusBatchRouteDefinition, Object])
], BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition);
exports.BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition = BaasicCommerceLookupsPaymentTransactionStatusRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(178));
__export(__webpack_require__(177));
__export(__webpack_require__(180));
__export(__webpack_require__(179));


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceRecurringCyclePeriodTypeBatchClient
 * @description Baasic Commerce Payment Method Batch Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceRecurringCyclePeriodTypeBatchClient` uses `baasicCommerceRecurringCyclePeriodTypeBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient = (function () {
    function BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient(baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition, baasicApiClient) {
        this.baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition = baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resources.
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeBatchClient.create([{
                    name : '<name>',
                    abrv: '<abbreviation>',
                    description: '<description>',
                    monthFactor: '<month-factor'>
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.create(), this.baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates specified commerce resources.
     * @method
     * @example   baasicCommerceLookupsRecurringCyclePeriodTypeBatchClient.update(commerceRecurringPeriodTypes)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.update(), this.baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove commerce action has been performed. This action will remove commerce resources from the system if successfully completed.
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeBatchClient.remove(commerceRecurringPeriodTypeIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient;
}());
BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient);
exports.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient = BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition
 * @description Baasic Commerce Lookups Recurring Cycle Period Type Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups Country State Batch Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition, _super);
    function BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'commerce/lookups/recurring-cycle-period-types/batch';
        _this.updateRoute = 'commerce/lookups/recurring-cycle-period-types/batch';
        _this.deleteRoute = 'commerce/lookups/recurring-cycle-period-types/batch';
        return _this;
    }
    /**
     * Parses create commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.create();
     */
    BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.update();
     */
    BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.remove();
     */
    BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition);
exports.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition = BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsRecurringCyclePeriodTypeClient
 * @description Baasic Commerce Lookups RecurringCyclePeriodType Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceLookupsRecurringCyclePeriodTypeClient` uses `baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsRecurringCyclePeriodTypeClient = (function () {
    function BaasicCommerceLookupsRecurringCyclePeriodTypeClient(baasicCommerceLookupsRecurringCyclePeriodTypeBatchClient, baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition, BaasicApiClient) {
        this.baasicCommerceLookupsRecurringCyclePeriodTypeBatchClient = baasicCommerceLookupsRecurringCyclePeriodTypeBatchClient;
        this.baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition = baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommerceLookupsRecurringCyclePeriodTypeClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceLookupsRecurringCyclePeriodTypeClient.prototype, "batch", {
        get: function () {
            return this.baasicCommerceLookupsRecurringCyclePeriodTypeBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeClient.prototype.find = function (options) {
        return this.BaasicApiClient.get(this.baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeClient.get('<recurring-cycle-period-type-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeClient.prototype.get = function (id, options) {
        return this.BaasicApiClient.get(this.baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceRecurringPeriodType);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commerceRecurringPeriodType is a resource previously fetched using get action.
                        commerceRecurringPeriodType.description = '<description>';
                        baasicCommerceLookupsRecurringCyclePeriodTypeClient.update(commerceRecurringPeriodType)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeClient.prototype.update = function (data) {
        return this.BaasicApiClient.put(this.baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.update(data), this.baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resource.
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeClient.create({
                    name : '<name>',
                    abrv: '<abbreviation>',
                    description: '<description>',
                    monthFactor: '<month-factor'>
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeClient.prototype.create = function (data) {
        return this.BaasicApiClient.post(this.baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.create(), this.baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceRecurringPeriodType);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commerceRecurringPeriodType is a resource previously fetched using get action.
                        baasicCommerceLookupsRecurringCyclePeriodTypeClient.remove(commerceRecurringPeriodType)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeClient.prototype.remove = function (data) {
        return this.BaasicApiClient.delete(this.baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.delete(data));
    };
    return BaasicCommerceLookupsRecurringCyclePeriodTypeClient;
}());
BaasicCommerceLookupsRecurringCyclePeriodTypeClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchClient,
        commerce_1.BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsRecurringCyclePeriodTypeClient);
exports.BaasicCommerceLookupsRecurringCyclePeriodTypeClient = BaasicCommerceLookupsRecurringCyclePeriodTypeClient;
/**
 * @copyright(c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition
 * @description Baasic Commerce Lookups RecurringCyclePeriodType Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups RecurringCyclePeriodType Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition, _super);
    function BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition(basicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.basicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition = basicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/lookups/recurring-cycle-period-types/{?searchQuery,page,rpp,sort,embed}';
        _this.getRoute = 'commerce/lookups/recurring-cycle-period-types/{id}/{?embed}';
        _this.createRoute = 'commerce/lookups/recurring-cycle-period-types';
        _this.updateRoute = 'commerce/lookups/recurring-cycle-period-types/{id}';
        _this.deleteRoute = 'commerce/lookups/recurring-cycle-period-types/{id}';
        return _this;
    }
    Object.defineProperty(BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.prototype, "batch", {
        get: function () {
            return this.basicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find commerce customer-payment-methods route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options.
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.get();
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, options);
    };
    /**
     * Parses create commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.create();
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.update(data);
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.delete(data);
     **/
    BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsRecurringCyclePeriodTypeBatchRouteDefinition, Object])
], BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition);
exports.BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition = BaasicCommerceLookupsRecurringCyclePeriodTypeRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(183));
__export(__webpack_require__(182));
__export(__webpack_require__(185));
__export(__webpack_require__(184));


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceSubscriptionStatusBatchClient
 * @description Baasic Commerce Subscription Stauts Batch Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceSubscriptionStatusBatchClient` uses `baasicCommerceSubscriptionStatusBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsSubscriptionStatusBatchClient = (function () {
    function BaasicCommerceLookupsSubscriptionStatusBatchClient(baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition, baasicApiClient) {
        this.baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition = baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resources.
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusBatchClient.create([{
                    name : '<name>',
                    abrv: '<abbreviation>',
                    description: '<description>'
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicCommerceLookupsSubscriptionStatusBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.create(), this.baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates specified commerce resources.
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusBatchClient.update(subscriptionStatuses)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsSubscriptionStatusBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.update(), this.baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove commerce action has been performed. This action will remove commerce resources from the system if successfully completed.
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusBatchClient.remove(subscriptionStatusIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsSubscriptionStatusBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicCommerceLookupsSubscriptionStatusBatchClient;
}());
BaasicCommerceLookupsSubscriptionStatusBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsSubscriptionStatusBatchClient);
exports.BaasicCommerceLookupsSubscriptionStatusBatchClient = BaasicCommerceLookupsSubscriptionStatusBatchClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition
 * @description Baasic Commerce Lookups Subscription Status Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups Country State Batch Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition, _super);
    function BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'commerce/lookups/subscription-statuses/batch';
        _this.updateRoute = 'commerce/lookups/subscription-statuses/batch';
        _this.deleteRoute = 'commerce/lookups/subscription-statuses/batch';
        return _this;
    }
    /**
     * Parses create commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.create();
     */
    BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.update();
     */
    BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove commerce country state batch route; this route does not expose any additional options
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.remove();
     */
    BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition);
exports.BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition = BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsSubscriptionStatusClient
 * @description Baasic Commerce Lookups SubscriptionStatus Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceLookupsSubscriptionStatusClient` uses `baasicCommerceLookupsSubscriptionStatusRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsSubscriptionStatusClient = (function () {
    function BaasicCommerceLookupsSubscriptionStatusClient(baasicCommerceLookupsSubscriptionStatusBatchClient, baasicCommerceLookupsSubscriptionStatusRouteDefinition, BaasicApiClient) {
        this.baasicCommerceLookupsSubscriptionStatusBatchClient = baasicCommerceLookupsSubscriptionStatusBatchClient;
        this.baasicCommerceLookupsSubscriptionStatusRouteDefinition = baasicCommerceLookupsSubscriptionStatusRouteDefinition;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommerceLookupsSubscriptionStatusClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceLookupsSubscriptionStatusRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCommerceLookupsSubscriptionStatusClient.prototype, "batch", {
        get: function () {
            return this.baasicCommerceLookupsSubscriptionStatusBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusClient.find({
                        pageNumber : 1,
                        pageSize : 10,
                        orderBy : '<field>',
                        orderDirection : '<asc|desc>',
                        search : '<search-phrase>'
                    })
                    .then(function (collection) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsSubscriptionStatusClient.prototype.find = function (options) {
        return this.BaasicApiClient.get(this.baasicCommerceLookupsSubscriptionStatusRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommerceLookupsSubscriptionStatusClient.prototype.get = function (id, options) {
        return this.BaasicApiClient.get(this.baasicCommerceLookupsSubscriptionStatusRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsSubscriptionStatusRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceSubscriptionStatus);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commerceSubscriptionStatus is a resource previously fetched using get action.
                    commerceSubscriptionStatus.description = '<description>';
                    baasicCommerceLookupsSubscriptionStatusClient.update(commerceSubscriptionStatus)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceLookupsSubscriptionStatusClient.prototype.update = function (data) {
        return this.BaasicApiClient.put(this.baasicCommerceLookupsSubscriptionStatusRouteDefinition.update(data), this.baasicCommerceLookupsSubscriptionStatusRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resource.
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusClient.create({
                    name : '<name>',
                    abrv: '<abbreviation>',
                    description: '<description>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceLookupsSubscriptionStatusClient.prototype.create = function (data) {
        return this.BaasicApiClient.post(this.baasicCommerceLookupsSubscriptionStatusRouteDefinition.create(), this.baasicCommerceLookupsSubscriptionStatusRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceLookupsSubscriptionStatusRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceSubscriptionStatus);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commerceSubscriptionStatus is a resource previously fetched using get action.
                    baasicCommerceLookupsSubscriptionStatusClient.remove(commerceSubscriptionStatus)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceLookupsSubscriptionStatusClient.prototype.remove = function (data) {
        return this.BaasicApiClient.delete(this.baasicCommerceLookupsSubscriptionStatusRouteDefinition.delete(data));
    };
    return BaasicCommerceLookupsSubscriptionStatusClient;
}());
BaasicCommerceLookupsSubscriptionStatusClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsSubscriptionStatusBatchClient)),
    __param(1, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsSubscriptionStatusRouteDefinition)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsSubscriptionStatusBatchClient,
        commerce_1.BaasicCommerceLookupsSubscriptionStatusRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceLookupsSubscriptionStatusClient);
exports.BaasicCommerceLookupsSubscriptionStatusClient = BaasicCommerceLookupsSubscriptionStatusClient;
/**
 * @copyright(c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceLookupsSubscriptionStatusRouteDefinition
 * @description Baasic Commerce Lookups SubscriptionStatus Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Lookups SubscriptionStatus Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceLookupsSubscriptionStatusRouteDefinition = (function (_super) {
    __extends(BaasicCommerceLookupsSubscriptionStatusRouteDefinition, _super);
    function BaasicCommerceLookupsSubscriptionStatusRouteDefinition(basicCommerceLookupsSubscriptionStatusBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.basicCommerceLookupsSubscriptionStatusBatchRouteDefinition = basicCommerceLookupsSubscriptionStatusBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/lookups/subscription-statuses/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/lookups/subscription-statuses/{id}/{?embed,fields}';
        _this.createRoute = 'commerce/lookups/subscription-statuses';
        _this.updateRoute = 'commerce/lookups/subscription-statuses/{id}';
        _this.deleteRoute = 'commerce/lookups/subscription-statuses/{id}';
        return _this;
    }
    Object.defineProperty(BaasicCommerceLookupsSubscriptionStatusRouteDefinition.prototype, "batch", {
        get: function () {
            return this.basicCommerceLookupsSubscriptionStatusBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find commerce customer-payment-methods route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options.
     * @example baasicCommerceLookupsSubscriptionStatusRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceLookupsSubscriptionStatusRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusRouteDefinition.get();
     **/
    BaasicCommerceLookupsSubscriptionStatusRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, options);
    };
    /**
     * Parses create commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusRouteDefinition.create();
     **/
    BaasicCommerceLookupsSubscriptionStatusRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusRouteDefinition.update(data);
     **/
    BaasicCommerceLookupsSubscriptionStatusRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete commerce payment method route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceLookupsSubscriptionStatusRouteDefinition.delete(data);
     **/
    BaasicCommerceLookupsSubscriptionStatusRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceLookupsSubscriptionStatusRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceLookupsSubscriptionStatusRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceLookupsSubscriptionStatusBatchRouteDefinition, Object])
], BaasicCommerceLookupsSubscriptionStatusRouteDefinition);
exports.BaasicCommerceLookupsSubscriptionStatusRouteDefinition = BaasicCommerceLookupsSubscriptionStatusRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(188));
__export(__webpack_require__(187));
__export(__webpack_require__(190));
__export(__webpack_require__(189));


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommercePaymentTransactionClient
 * @description Baasic Commerce PaymentTransaction Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommercePaymentTransactionClient` uses `baasicCommercePaymentTransactionRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommercePaymentTransactionClient = (function () {
    function BaasicCommercePaymentTransactionClient(baasicCommercePaymentTransactionRouteDefinition, BaasicApiClient) {
        this.baasicCommercePaymentTransactionRouteDefinition = baasicCommercePaymentTransactionRouteDefinition;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommercePaymentTransactionClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommercePaymentTransactionRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommercePaymentTransactionClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommercePaymentTransactionClient.prototype.find = function (options) {
        return this.BaasicApiClient.get(this.baasicCommercePaymentTransactionRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommercePaymentTransactionClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommercePaymentTransactionClient.prototype.get = function (id, options) {
        return this.BaasicApiClient.get(this.baasicCommercePaymentTransactionRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommercePaymentTransactionClient.create(data)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCommercePaymentTransactionClient.prototype.create = function (data) {
        return this.BaasicApiClient.post(this.baasicCommercePaymentTransactionRouteDefinition.create(), this.baasicCommercePaymentTransactionRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommercePaymentTransactionRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commercePaymentTransaction);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commercePaymentTransaction is a resource previously fetched using get action.
                        commercePaymentTransaction.amount : 100;
                        baasicCommercePaymentTransactionClient.update(commercePaymentTransaction)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommercePaymentTransactionClient.prototype.update = function (data) {
        return this.BaasicApiClient.put(this.baasicCommercePaymentTransactionRouteDefinition.update(data), this.baasicCommercePaymentTransactionRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommercePaymentTransactionRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commercePaymentTransaction);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commercePaymentTransaction is a resource previously fetched using get action.
                        baasicCommercePaymentTransactionClient.remove(commercePaymentTransaction)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommercePaymentTransactionClient.prototype.remove = function (data) {
        return this.BaasicApiClient.delete(this.baasicCommercePaymentTransactionRouteDefinition.delete(data));
    };
    return BaasicCommercePaymentTransactionClient;
}());
BaasicCommercePaymentTransactionClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommercePaymentTransactionRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommercePaymentTransactionRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommercePaymentTransactionClient);
exports.BaasicCommercePaymentTransactionClient = BaasicCommercePaymentTransactionClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommercePaymentTransactionRouteDefinition
 * @description Baasic Commerce PaymentTransaction Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce PaymentTransaction Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommercePaymentTransactionRouteDefinition = (function (_super) {
    __extends(BaasicCommercePaymentTransactionRouteDefinition, _super);
    function BaasicCommercePaymentTransactionRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/payment-transactions/{?customerId,searchQuery,invoiceStatusId,subscriptionId,paymentMethodId,firstName,lastName,transactionStatuses,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/payment-transactions/{id}/{?embed,fields}';
        _this.createRoute = 'commerce/payment-transactions';
        _this.updateRoute = 'commerce/payment-transactions/{id}';
        _this.deleteRoute = 'commerce/payment-transactions/{id}';
        return _this;
    }
    /**
     * Parses find commerce payment transaction route which can be expanded with additional options. Supported items are:
     * - `customerId` - A customer unique identifier.
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `invoiceStatusId` - A invoice status unique identifier.
     * - `subscriptionId` - A subscription unique identifier.
     * - `paymentMethodId` - A payment method unique identifier.
     * - `firstName` - A customer first name.
     * - `lastName` - A customer last name.
     * - `transactionStatuses` - A transaction statuses in CSV format.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicCommercePaymentTransactionRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommercePaymentTransactionRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommercePaymentTransactionRouteDefinition.get(id, options);
     **/
    BaasicCommercePaymentTransactionRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create route; this route doesn't expose any properties.
     * @method
     * @example baasicCommercePaymentTransactionRouteDefinition.create();
     **/
    BaasicCommercePaymentTransactionRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update route; this route doesn't expose any properties.
     * @method
     * @example baasicCommercePaymentTransactionRouteDefinition.update(data);
     **/
    BaasicCommercePaymentTransactionRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete route; this route doesn't expose any properties.
     * @method
     * @example baasicCommercePaymentTransactionRouteDefinition.delete(data);
     **/
    BaasicCommercePaymentTransactionRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommercePaymentTransactionRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommercePaymentTransactionRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommercePaymentTransactionRouteDefinition);
exports.BaasicCommercePaymentTransactionRouteDefinition = BaasicCommercePaymentTransactionRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(193));
__export(__webpack_require__(192));


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceProductClient
 * @description Baasic Commerce Product Client provides an easy way to consume Baasic Commerce REST API end-points. In order to obtain a needed routes `baasicCommerceProductClient` uses `baasicCommerceProductRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var commerce_1 = __webpack_require__(4);
var BaasicCommerceProductClient = (function () {
    function BaasicCommerceProductClient(baasicCommerceProductRouteDefinition, BaasicApiClient) {
        this.baasicCommerceProductRouteDefinition = baasicCommerceProductRouteDefinition;
        this.BaasicApiClient = BaasicApiClient;
    }
    Object.defineProperty(BaasicCommerceProductClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCommerceProductRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of commerce resources matching the given criteria.
     * @method
     * @example baasicCommerceProductClient.find({
                   pageNumber : 1,
                   pageSize : 10,
                   orderBy : '<field>',
                   orderDirection : '<asc|desc>',
                   search : '<search-phrase>'
               })
               .then(function (collection) {
                   // perform success action here
               },
                function (response, status, headers, config) {
                    // perform error handling here
               });
    **/
    BaasicCommerceProductClient.prototype.find = function (options) {
        return this.BaasicApiClient.get(this.baasicCommerceProductRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the commerce resource.
     * @method
     * @example baasicCommerceProductClient.get()
                      .then(function (data) {
                          // perform success action here
                      },
                       function (response, status, headers, config) {
                           // perform error handling here
                      });
   **/
    BaasicCommerceProductClient.prototype.get = function (id, options) {
        return this.BaasicApiClient.get(this.baasicCommerceProductRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create commerce action has been performed; this action creates a new commerce resource.
     * @method
     * @example baasicCommerceProductClient.create({
                    name : '<product-name>',
                    slug : '<slug>',
                    shortDescription : '<short-description>',
                    recurringCyclePeriodTypeId: '<recurring-cycle-period-type-id>'
                    planId : '<plan-id>',
                    price: 100,
                    published: true
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCommerceProductClient.prototype.create = function (data) {
        return this.BaasicApiClient.post(this.baasicCommerceProductRouteDefinition.create(), this.baasicCommerceProductRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update commerce action has been performed; this action updates a commerce resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceProductRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceProduct);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @example // commerceProduct is a resource previously fetched using get action.
                        commerceProduct.shortDescription : '<short-description>';
                        baasicCommerceProductClient.update(commerceProduct)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicCommerceProductClient.prototype.update = function (data) {
        return this.BaasicApiClient.put(this.baasicCommerceProductRouteDefinition.update(data), this.baasicCommerceProductRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a commerce resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCommerceProductRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(commerceProduct);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // commerceProduct is a resource previously fetched using get action.
                    baasicCommerceProductClient.remove(commerceProduct)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCommerceProductClient.prototype.remove = function (data) {
        return this.BaasicApiClient.delete(this.baasicCommerceProductRouteDefinition.delete(data));
    };
    return BaasicCommerceProductClient;
}());
BaasicCommerceProductClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(commerce_1.TYPES.BaasicCommerceProductRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [commerce_1.BaasicCommerceProductRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCommerceProductClient);
exports.BaasicCommerceProductClient = BaasicCommerceProductClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCommerceProductRouteDefinition
 * @description Baasic Commerce Product Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Commerce Product Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCommerceProductRouteDefinition = (function (_super) {
    __extends(BaasicCommerceProductRouteDefinition, _super);
    function BaasicCommerceProductRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'commerce/products/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'commerce/products/{id}/{?embed,fields}';
        _this.createRoute = 'commerce/products';
        _this.updateRoute = 'commerce/products/{id}';
        _this.deleteRoute = 'commerce/products/{id}';
        return _this;
    }
    /**
     * Parses find commerce product route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify commerce resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain commerce subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the commerce property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicCommerceProductRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCommerceProductRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicCommerceProductRouteDefinition.get(id, options);
     **/
    BaasicCommerceProductRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create commerce product route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceProductRouteDefinition.create();
     **/
    BaasicCommerceProductRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update commerce product route; this URI template does not expose any additional options.
     * @method
     * @example baasicCommerceProductRouteDefinition.update(data);
     **/
    BaasicCommerceProductRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
    * Parses delete commerce product route; this URI template does not expose any additional options.
    * @method
    * @example baasicCommerceProductRouteDefinition.delete(data);
    **/
    BaasicCommerceProductRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCommerceProductRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCommerceProductRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCommerceProductRouteDefinition);
exports.BaasicCommerceProductRouteDefinition = BaasicCommerceProductRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(196));
__export(__webpack_require__(195));


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module baasicDynamicResourceACLClient
 * @description Baasic Dynamic Resource ACL Client provides an easy way to consume Baasic Dynamic Resource REST API end-points. In order to obtain needed routes `baasicDynamicResourceACLClient` uses `baasicDynamicResourceACLRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var dynamicResource_1 = __webpack_require__(19);
var BaasicDynamicResourceACLClient = (function () {
    function BaasicDynamicResourceACLClient(baasicDynamicResourceACLRouteDefinition, baasicApiClient) {
        this.baasicDynamicResourceACLRouteDefinition = baasicDynamicResourceACLRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns a list of ACL policies established for the specified dynamic resource.
     * @method
     * @param options Options object.
     * @example baasicDynamicResourceACLClient.get({id: '<dynamic-resource-id>', schemaName: '<schema-name>'})
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicDynamicResourceACLClient.prototype.get = function (options) {
        return this.baasicApiClient.get(this.baasicDynamicResourceACLRouteDefinition.get(options));
    };
    /**
     * Returns a promise that is resolved once the update acl action has been performed; this action creates new ACL policy for the specified dynamic resource.
     * @method
     * @param options Options object.
     * @example baasicDynamicResourceACLClient.update({id: '<dynamic-resource-id>', schemaName: '<schema-name>'})
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicDynamicResourceACLClient.prototype.update = function (options) {
        return this.baasicApiClient.put(this.baasicDynamicResourceACLRouteDefinition.update(options), this.baasicDynamicResourceACLRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the removeByUser action has been performed. This action deletes ACL policy assigned to the specified user and dynamic resource.
     * @method
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and dynamic resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param user Username which uniquely identifies user for which ACL policy needs to be removed.
     * @param data ACL Policy whose security privileges need to be retrieved and updated.
     * @example // dynamicResource is a resource previously fetched using get action.
                    baasicDynamicResourceACLClient.removeByUser('<access-action>', '<username>', dynamicResource)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicDynamicResourceACLClient.prototype.removeByUser = function (action, user, data) {
        return this.baasicApiClient.delete(this.baasicDynamicResourceACLRouteDefinition.deleteByUser(action, user, data));
    };
    /**
     * Returns a promise that is resolved once the removeByRole action has been performed. This action deletes ACL policy assigned to the specified role and dynamic resource.
     * @method
     * @param action Action abbreviation which identifies ACL policy assigned to the specified role and dynamic resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param role Role's name which uniquely identifies role for which ACL policy needs to be removed.
     * @param data ACL Policy whose security privileges need to be retrieved and updated.
     * @example // dynamicResource is a resource previously fetched using get action.
                    baasicDynamicResourceACLClient.removeByRole('<access-action>', '<role-name>', dynamicResource)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicDynamicResourceACLClient.prototype.removeByRole = function (action, role, data) {
        return this.baasicApiClient.delete(this.baasicDynamicResourceACLRouteDefinition.deleteByRole(action, role, data));
    };
    return BaasicDynamicResourceACLClient;
}());
BaasicDynamicResourceACLClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(dynamicResource_1.TYPES.BaasicDynamicResourceACLRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [dynamicResource_1.BaasicDynamicResourceACLRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicDynamicResourceACLClient);
exports.BaasicDynamicResourceACLClient = BaasicDynamicResourceACLClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module baasicDynamicResourceACLRouteDefinition
 * @description Baasic Dynamic Resource ACL Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Dynamic Resource ACL Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicDynamicResourceACLRouteDefinition = (function (_super) {
    __extends(BaasicDynamicResourceACLRouteDefinition, _super);
    function BaasicDynamicResourceACLRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'resources/{schemaName}/{id}/acl/{?fields}';
        _this.updateRoute = 'resources/{schemaName}/{id}/acl/{?fields}';
        _this.deleteByUserRoute = 'resources/{schemaName}/{id}/acl/actions/{accessAction}/users/{user}/';
        _this.deleteByRoleRoute = 'resources/{schemaName}/{id}/acl/actions/{accessAction}/roles/{role}/';
        return _this;
    }
    /**
     * Parses get acl route; this URI template should be expanded with the Id of the dynamic resource and name of the dynamic resource schema.
     * @method
     * @param options Query resource options object.
     * @example baasicDynamicResourceACLRouteDefinition.get(options)
     **/
    BaasicDynamicResourceACLRouteDefinition.prototype.get = function (options) {
        var params = this.utility.extend({}, options);
        return _super.prototype.baseCreate.call(this, this.getRoute, params);
    };
    /**
     * Parses update acl route; this URI template should be expanded with the Id of the dynamic resource and name of the dynamic resource schema.
     * @method
     * @param options Options object.
     * @example baasicDynamicResourceACLRouteDefinition.update(options)
     **/
    BaasicDynamicResourceACLRouteDefinition.prototype.update = function (options) {
        var params = this.utility.extend({}, options);
        return _super.prototype.baseCreate.call(this, this.updateRoute, options);
    };
    /**
     * Parses deleteByUser acl route which can be expanded with additional options. Supported items are:
     * - `schemaName` - Name of the dynamic resource schema.
     * - `id` - Id of the dynamic resource.
     * - `accessAction` - Action abbreviation which identifies ACL policy assigned to the specified user and dynamic resource item.
     * - `user` - A value which uniquely identifies user for which ACL policy needs to be removed.
     * @method
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and dynamic resource item.
     * @param username A value which uniquely identifies user for which ACL policy needs to be removed.
     * @param data ACL Policy object used to perform delete action.
     * @example baasicDynamicResourceACLRouteDefinition.deleteByUser(action, username, data);
     **/
    BaasicDynamicResourceACLRouteDefinition.prototype.deleteByUser = function (action, username, data) {
        var params = this.modelMapper.removeParams(data);
        params.user = username;
        params.accessAction = action;
        return _super.prototype.baseCreate.call(this, this.deleteByUserRoute, params);
    };
    /**
     * Parses deleteByRole acl route which can be expanded with additional options. Supported items are:
     * - `schemaName` - Name of the dynamic resource schema.
     * - `id` - Id of the dynamic resource.
     * - `accessAction` - Action abbreviation which identifies ACL policy assigned to the specified role and dynamic resource item.
     * - `role` - A value which uniquely identifies role for which ACL policy needs to be removed.
     * @method
     * @param action Action abbreviation which identifies ACL policy assigned to the specified role and dynamic resource item.
     * @param role A value which uniquely identifies role for which ACL policy needs to be removed.
     * @param data ACLPolicy object used to perform delete action.
     * @example baasicDynamicResourceACLRouteDefinition.deleteByRole(action, role, data)
     **/
    BaasicDynamicResourceACLRouteDefinition.prototype.deleteByRole = function (action, role, data) {
        var params = this.modelMapper.removeParams(data);
        params.role = role;
        params.accessAction = action;
        return _super.prototype.baseCreate.call(this, this.deleteByRoleRoute, params);
    };
    BaasicDynamicResourceACLRouteDefinition.prototype.updateParams = function (options) {
        var params = this.utility.extend({}, options);
        return params[this.modelMapper.modelPropertyName];
    };
    return BaasicDynamicResourceACLRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicDynamicResourceACLRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicDynamicResourceACLRouteDefinition);
exports.BaasicDynamicResourceACLRouteDefinition = BaasicDynamicResourceACLRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module baasicDynamicResourceClient
 * @description Baasic Dynamic Resource Client provides an easy way to consume Baasic Dynamic Resource REST API end-points. In order to obtain needed routes `baasicDynamicResourceClient` uses `baasicDynamicResourceRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var dynamicResource_1 = __webpack_require__(19);
var BaasicDynamicResourceClient = (function () {
    function BaasicDynamicResourceClient(baasicDynamicResourceRouteDefinition, baasicDynamicResourceACLClient, baasicDynamicSchemaClient, baasicApiClient) {
        this.baasicDynamicResourceRouteDefinition = baasicDynamicResourceRouteDefinition;
        this.baasicDynamicResourceACLClient = baasicDynamicResourceACLClient;
        this.baasicDynamicSchemaClient = baasicDynamicSchemaClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicDynamicResourceClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicDynamicResourceRouteDefinition`.
         * @method
         * @example baasicDynamicResourceClient.routeDefinition.get(schemaName, id, options)
         **/
        get: function () {
            return this.baasicDynamicResourceRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicDynamicResourceClient.prototype, "acl", {
        get: function () {
            return this.baasicDynamicResourceACLClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicDynamicResourceClient.prototype, "schema", {
        get: function () {
            return this.baasicDynamicSchemaClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of dynamic resources matching the given criteria.
     * @method
     * @param schemaName Name of dynamic resource schema whose dynamic resources need to be retrieved.
     * @param options Query resource options object.
     * @returns Promise that is resolved once the find action has been performed.
     * @example baasicDynamicResourceClient.find('<schema-name>', {
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicDynamicResourceClient.prototype.find = function (schemaName, options) {
        return this.baasicApiClient.get(this.baasicDynamicResourceRouteDefinition.find(schemaName, options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified dynamic resource.
     * @method
     * @example baasicDynamicResourceClient.get('<schema-name>', '<dynamic-resource-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicDynamicResourceClient.prototype.get = function (schemaName, id, options) {
        return this.baasicApiClient.get(this.baasicDynamicResourceRouteDefinition.get(id, schemaName, options));
    };
    /**
     * Returns a promise that is resolved once the create dynamic resource action has been performed; this action creates a new dynamic resource item.
     * @method
     * @param schemaName Name of dynamic resource schema that needs to be updated with new dynamic resource.
     * @param data A JSON object that needs to be inserted into the system as dynamic resource. JSON object is an unordered collection of zero or more key/value pairs structured using the standard JSON syntax rules.
     * @example baasicDynamicResourceClient.create('<schema-name>', {
                    id : '',
                    description : '<description>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicDynamicResourceClient.prototype.create = function (schemaName, data) {
        return this.baasicApiClient.post(this.baasicDynamicResourceRouteDefinition.create(schemaName, data), this.baasicDynamicResourceRouteDefinition.createParams(schemaName, data));
    };
    /**
     * Returns a promise that is resolved once the update action has been performed; this action updates a dynamic resource item. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicDynamicResourceRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(dynamicResource);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data A JSON object used to update specified dynamic resource. JSON object is an unordered collection of zero or more key/value pairs structured using the standard JSON syntax rules.
     * @param options Options object.
     * @example // dynamicResource is a resource previously fetched using get action.
                    dynamicResource.description = '<description>';
                    baasicDynamicResourceClient.update(dynamicResource, {
                        query: "where field = 'value' "
                    })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicDynamicResourceClient.prototype.update = function (data, options) {
        return this.baasicApiClient.put(this.baasicDynamicResourceRouteDefinition.update(data, options), this.baasicDynamicResourceRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the patch action has been performed; this action patches an existing dynamic resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicDynamicResourceRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(dynamicResource);
     * let uri = params['model'].links('patch').href;
     * ```
     * @method
     * @param data JSON object used for partial update of specified dynamic resource. JSON object is an unordered collection of zero or more key/value pairs structured using the standard JSON syntax rules.
     * @param options Options object.
     * @example // dynamicResource is a resource previously fetched using get action.
                    dynamicResource.description = '<new-description>';
                    dynamicResource.newField = '<newfield-value>';
                    baasicDynamicResourceClient.patch(dynamicResource, {
                        query: "where field = 'value' "
                    })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                        
                    });
     **/
    BaasicDynamicResourceClient.prototype.patch = function (data, options) {
        return this.baasicApiClient.patch(this.baasicDynamicResourceRouteDefinition.patch(data, options), this.baasicDynamicResourceRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a dynamic resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicDynamicResourceRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(dynamicResource);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data JSON object used to delete specified dynamic resource. JSON object is an unordered collection of zero or more key/value pairs structured using the standard JSON syntax rules.
     * @example // dynamicResource is a resource previously fetched using get action.
                    baasicDynamicResourceClient.remove(dynamicResource, {
                        query: "where field = 'value' "
                    })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicDynamicResourceClient.prototype.remove = function (data, options) {
        return this.baasicApiClient.delete(this.baasicDynamicResourceRouteDefinition.delete(data, options));
    };
    return BaasicDynamicResourceClient;
}());
BaasicDynamicResourceClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(dynamicResource_1.TYPES.BaasicDynamicResourceRouteDefinition)),
    __param(1, inversify_1.inject(dynamicResource_1.TYPES.BaasicDynamicResourceACLClient)),
    __param(2, inversify_1.inject(dynamicResource_1.TYPES.BaasicDynamicSchemaClient)),
    __param(3, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [dynamicResource_1.BaasicDynamicResourceRouteDefinition,
        dynamicResource_1.BaasicDynamicResourceACLClient,
        dynamicResource_1.BaasicDynamicSchemaClient,
        httpApi_1.BaasicApiClient])
], BaasicDynamicResourceClient);
exports.BaasicDynamicResourceClient = BaasicDynamicResourceClient;


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module baasicDynamicResourceRouteDefinition
 * @description Baasic Dynamic Resource Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Dynamic Resource Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var dynamicResource_1 = __webpack_require__(19);
var contracts_1 = __webpack_require__(1);
var BaasicDynamicResourceRouteDefinition = (function (_super) {
    __extends(BaasicDynamicResourceRouteDefinition, _super);
    function BaasicDynamicResourceRouteDefinition(appOptions, baasicDynamicResourceACLRouteDefinition, baasicDynamicSchemaRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicDynamicResourceACLRouteDefinition = baasicDynamicResourceACLRouteDefinition;
        _this.baasicDynamicSchemaRouteDefinition = baasicDynamicSchemaRouteDefinition;
        _this.findRoute = 'resources/{schemaName}/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'resources/{schemaName}/{id}/{?embed,fields}';
        _this.createRoute = 'resources/{schemaName}';
        _this.updateRoute = 'resources/{schemaName}/{id}/{?embed,fields}';
        _this.patchRoute = 'resources/{schemaName}/{id}/{?embed,fields}';
        _this.deleteRoute = 'resources/{schemaName}/{id}';
        return _this;
    }
    Object.defineProperty(BaasicDynamicResourceRouteDefinition.prototype, "acl", {
        get: function () {
            return this.baasicDynamicResourceACLRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicDynamicResourceRouteDefinition.prototype, "dynamicSchema", {
        get: function () {
            return this.baasicDynamicSchemaRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `schemaName` - Name of the dynamic resource schema.
     * - `searchQuery` - A string referencing dynamic resource properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain dynamic resource subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the dynamic resource property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options query resource options object
     * @example baasicDynamicResourceRouteDefinition.find(options);
     **/
    BaasicDynamicResourceRouteDefinition.prototype.find = function (schemaName, options) {
        return _super.prototype.baseFind.call(this, this.findRoute, this.utility.extend({ schemaName: schemaName }, options));
    };
    /**
     * Parses get route which must be expanded with the name of the previously created dynamic resource schema in the system and the Id of the previously created dynamic resource. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param id Unique identifier of dynamic resources
     * @param schemaName schema name
     * @param options query resource options object
     * @example baasicDynamicResourceRouteDefinition.get(id, schemaName, options);
     **/
    BaasicDynamicResourceRouteDefinition.prototype.get = function (id, schemaName, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, this.utility.extend({ schemaName: schemaName }, options));
    };
    BaasicDynamicResourceRouteDefinition.prototype.create = function (schemaName, data) {
        var params = this.modelMapper.getParams(schemaName, data, 'schemaName');
        return _super.prototype.baseCreate.call(this, this.createRoute, params);
    };
    BaasicDynamicResourceRouteDefinition.prototype.update = function (data, options) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data, options);
    };
    BaasicDynamicResourceRouteDefinition.prototype.patch = function (data, options) {
        return _super.prototype.baseUpdate.call(this, this.patchRoute, data, options, 'patch');
    };
    BaasicDynamicResourceRouteDefinition.prototype.delete = function (data, options) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data, options);
    };
    BaasicDynamicResourceRouteDefinition.prototype.createParams = function (schemaName, data) {
        var params = this.modelMapper.getParams(schemaName, data, 'schemaName');
        return _super.prototype.createParams.call(this, params);
    };
    return BaasicDynamicResourceRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicDynamicResourceRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(dynamicResource_1.TYPES.BaasicDynamicResourceACLRouteDefinition)),
    __param(2, inversify_1.inject(dynamicResource_1.TYPES.BaasicDynamicSchemaRouteDefinition)),
    __metadata("design:paramtypes", [Object, dynamicResource_1.BaasicDynamicResourceACLRouteDefinition,
        dynamicResource_1.BaasicDynamicSchemaRouteDefinition])
], BaasicDynamicResourceRouteDefinition);
exports.BaasicDynamicResourceRouteDefinition = BaasicDynamicResourceRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module baasicDynamicSchemaClient
 * @description Baasic Dynamic Schema Client provides an easy way to consume Baasic Dynamic Schema REST API end-points. In order to obtain needed routes `baasicDynamicSchemaClient` uses `baasicDynamicSchemaRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var dynamicResource_1 = __webpack_require__(19);
var BaasicDynamicSchemaClient = (function () {
    function BaasicDynamicSchemaClient(baasicDynamicSchemaRouteDefinition, baasicApiClient) {
        this.baasicDynamicSchemaRouteDefinition = baasicDynamicSchemaRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicDynamicSchemaClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicDynamicSchemaRouteDefinition`.
         * @method
         * @example baasicDynamicSchemaClient.routeDefinition.get();
         **/
        get: function () {
            return this.baasicDynamicSchemaRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of dynamic resource schemas matching the given criteria.
     * @method
     * @param options Options object.
     * @example baasicDynamicSchemaClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicDynamicSchemaClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicDynamicSchemaRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified dynamic resource schema.
     * @method
     * @param name Name of dynamic resource schema which need to be retrieved.
     * @param options Options object.
     * @example baasicDynamicSchemaClient.get('<schema-name>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicDynamicSchemaClient.prototype.get = function (name, options) {
        return this.baasicApiClient.get(this.baasicDynamicSchemaRouteDefinition.get(name, options));
    };
    /**
     * Returns a promise that is resolved once the create action has been performed; this action creates a new dynamic resource schema item.
     * @method
     * @param data A dynamic resource schema object that needs to be inserted into the system.
     * @example baasicDynamicSchemaClient.create({
                    schema : {
                        type : 'object',
                        properties : {
                            id : {
                                title : '<unique-identifier-field>',
                                readonly : true,
                                hidden : true,
                                type : 'string'
                            },
                            description : {
                                type: string
                            }
                        }
                    },
                    name : '<schema-name>',
                    description : '<description>',
                    enforceSchemaValidation : true
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicDynamicSchemaClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicDynamicSchemaRouteDefinition.create(), this.baasicDynamicSchemaRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update dynamic resource schema action has been performed; this action updates a dynamic resource schema item. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicDynamicSchemaRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(dynamicResourceSchema);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data A dynamic schema object used to update specified dynamic resource schema.
     * @example // dynamicResourceSchema is a resource previously fetched using get action.
                    dynamicResourceSchema.description = '<description>';
                    baasicDynamicSchemaClient.update(dynamicResourceSchema)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicDynamicSchemaClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicDynamicSchemaRouteDefinition.update(data), this.baasicDynamicSchemaRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a dynamic resource schema item from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicDynamicSchemaRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(dynamicResourceSchema);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data A dynamic schema object used to delete specified dynamic resource schema.
     * @example // dynamicResourceSchema is a resource previously fetched using get action.
                    baasicDynamicSchemaClient.remove(dynamicResourceSchema)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicDynamicSchemaClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicDynamicSchemaRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the generate schema action has been performed. Success response returns a schema generated based on the json input.
     * @method
     * @param data Unordered collection of key value pairs used to specify dynamic schema definition.
     * @example baasicDynamicSchemaService.generate({
                    id : '<schema-Id>',
                    description : '<description>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicDynamicSchemaClient.prototype.generate = function (data) {
        return this.baasicApiClient.post(this.baasicDynamicSchemaRouteDefinition.generate(), this.baasicDynamicSchemaRouteDefinition.createParams(data));
    };
    return BaasicDynamicSchemaClient;
}());
BaasicDynamicSchemaClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(dynamicResource_1.TYPES.BaasicDynamicSchemaRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [dynamicResource_1.BaasicDynamicSchemaRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicDynamicSchemaClient);
exports.BaasicDynamicSchemaClient = BaasicDynamicSchemaClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module baasicDynamicSchemaRouteDefinition
 * @description Baasic Dynamic Schema Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Dynamic Schema Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicDynamicSchemaRouteDefinition = (function (_super) {
    __extends(BaasicDynamicSchemaRouteDefinition, _super);
    function BaasicDynamicSchemaRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'schemas/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'schemas/{name}/{?embed,fields}';
        _this.generateRoute = 'schemas/generate';
        _this.createRoute = 'schemas';
        _this.updateRoute = 'schemas/{id}';
        _this.deleteRoute = 'schemas/{id}';
        return _this;
    }
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing dynamic resource schema properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain dynamic resource schema subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the dynamic resource schema property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicDynamicSchemaRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicDynamicSchemaRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route which must be expanded with name of the previously created dynamic resource schema. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicDynamicSchemaRouteDefinition.find({name: '<schema-name>'});
     **/
    BaasicDynamicSchemaRouteDefinition.prototype.get = function (name, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, this.modelMapper.getParams(name, options, 'name'));
    };
    /**
     * Parses create route; this URI template doesn't expose any additional properties.
     * @method
     * @example baasicDynamicSchemaRouteDefinition.generate();
     **/
    BaasicDynamicSchemaRouteDefinition.prototype.generate = function () {
        return _super.prototype.baseCreate.call(this, this.generateRoute, {});
    };
    /**
     * Parses create route; this URI template doesn't expose any additional properties.
     * @method
     * @example baasicDynamicSchemaRouteDefinition.create(data);
     **/
    BaasicDynamicSchemaRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update route.
     * @method
     * @param data A dynamic schema object used to update specified dynamic resource schema.
     * @example baasicDynamicSchemaRouteDefinition.update(data);
     */
    BaasicDynamicSchemaRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete route.
     * @method
     * @param data A dynamic schema object used to delete specified dynamic resource schema.
     */
    BaasicDynamicSchemaRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicDynamicSchemaRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicDynamicSchemaRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicDynamicSchemaRouteDefinition);
exports.BaasicDynamicSchemaRouteDefinition = BaasicDynamicSchemaRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var dynamicResource_1 = __webpack_require__(19);
var TYPES = {
    BaasicDynamicResourceACLClient: Symbol("BaasicDynamicResourceACLClient"),
    BaasicDynamicResourceACLRouteDefinition: Symbol("BaasicDynamicResourceACLRouteDefinition"),
    BaasicDynamicResourceClient: Symbol("BaasicDynamicResourceClient"),
    BaasicDynamicResourceRouteDefinition: Symbol("BaasicDynamicResourceRouteDefinition"),
    BaasicDynamicSchemaClient: Symbol("BaasicDynamicSchemaClient"),
    BaasicDynamicSchemaRouteDefinition: Symbol("BaasicDynamicSchemaRouteDefinition")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicDynamicResourceACLRouteDefinition).to(dynamicResource_1.BaasicDynamicResourceACLRouteDefinition);
    bind(TYPES.BaasicDynamicResourceACLClient).to(dynamicResource_1.BaasicDynamicResourceACLClient);
    bind(TYPES.BaasicDynamicResourceRouteDefinition).to(dynamicResource_1.BaasicDynamicResourceRouteDefinition);
    bind(TYPES.BaasicDynamicResourceClient).to(dynamicResource_1.BaasicDynamicResourceClient);
    bind(TYPES.BaasicDynamicSchemaRouteDefinition).to(dynamicResource_1.BaasicDynamicSchemaRouteDefinition);
    bind(TYPES.BaasicDynamicSchemaClient).to(dynamicResource_1.BaasicDynamicSchemaClient);
});
exports.diModule = diModule;


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicFilesACLClient
 * @description Baasic Files ACL Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var files_1 = __webpack_require__(18);
var BaasicFilesACLClient = (function () {
    function BaasicFilesACLClient(baasicFilesACLRouteDefinition, baasicApiClient) {
        this.baasicFilesACLRouteDefinition = baasicFilesACLRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    BaasicFilesACLClient.prototype.routeDefinition = function () {
        return this.baasicFilesACLRouteDefinition;
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns a list of ACL policies established for the specified file resource.
     * @method
     * @param options ACL options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicFilesACLClient.get({id: '<file-id>'})
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicFilesACLClient.prototype.get = function (options) {
        return this.baasicApiClient.get(this.baasicFilesACLRouteDefinition.get(options));
    };
    /**
     * Returns a promise that is resolved once the update acl action has been performed, this action creates new ACL policy for the specified file resource.
     * @method
     * @param options An ACL policy object that needs to be inserted into the system. This object specifies parameters necessary for establishing user and/or role set of rights.
     * @example let options = {id : '<file-id>'};
                let aclObj =  {  actionId: '<action-id>',  roleId: '<role-id>',  userId: '<user-id>' };
                options[baasicConstants.modelPropertyName] = aclObj;
                baasicFilesACLClient.update(options)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicFilesACLClient.prototype.update = function (options) {
        return this.baasicApiClient.put(this.baasicFilesACLRouteDefinition.update(options), this.baasicFilesACLRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the removeByUser action has been performed. This action deletes ACL policy assigned to the specified user and file resource.
     * @method
     * @param id File id which uniquely identifies file resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and file resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param user A value that uniquely identifies user for which ACL policy needs to be removed.
     * @returns A promise that is resolved once the removeByUser action has been performed.
     * @example baasicFilesACLClient.removeByUser('<file-id>', '<access-action>', '<username>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicFilesACLClient.prototype.removeByUser = function (id, action, user, data) {
        return this.baasicApiClient.delete(this.baasicFilesACLRouteDefinition.deleteByUser(id, action, user, data));
    };
    /**
     * Returns a promise that is resolved once the removeByRole action has been performed. This action deletes ACL policy assigned to the specified role and file resource.
     * @method
     * @example baasicFilesACLClient.removeByRole('<file-id>', '<access-action>', '<role-name>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicFilesACLClient.prototype.removeByRole = function (id, action, role, data) {
        return this.baasicApiClient.delete(this.baasicFilesACLRouteDefinition.deleteByRole(id, action, role, data));
    };
    return BaasicFilesACLClient;
}());
BaasicFilesACLClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(files_1.TYPES.BaasicFilesACLRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [files_1.BaasicFilesACLRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicFilesACLClient);
exports.BaasicFilesACLClient = BaasicFilesACLClient;
/**
 * @overview
***Notes:**
- Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
- All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicFilesACLRouteDefinition
 * @description Baasic Files ACL Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicFilesACLRouteDefinition = (function (_super) {
    __extends(BaasicFilesACLRouteDefinition, _super);
    function BaasicFilesACLRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'files/{id}/acl/{?fields}';
        _this.updateRoute = 'files/{id}/acl/{?fields}';
        _this.deleteByUserRoute = 'files/{id}/acl/actions/{accessAction}/users/{user}/';
        _this.deleteByRoleRoute = 'files/{id}/acl/actions/{accessAction}/roles/{role}/';
        return _this;
    }
    /**
     * Parses get acl route; this URI template should be expanded with the Id of the file resource.
     * @method
     * @example baasicFilesACLRouteDefinition.get({id: '<file-id>'});
     **/
    BaasicFilesACLRouteDefinition.prototype.get = function (options) {
        var params = this.utility.extend({}, options);
        return _super.prototype.baseCreate.call(this, this.getRoute, params);
    };
    /**
     * Parses update acl route; this URI template should be expanded with the Id of the file resource.
     * @method
     * @example baasicFilesACLRouteDefinition.update({id: '<file-id>'});
     **/
    BaasicFilesACLRouteDefinition.prototype.update = function (options) {
        var params = this.utility.extend({}, options);
        return _super.prototype.baseCreate.call(this, this.updateRoute, params);
    };
    /**
     * Parses deleteByUser acl route which can be expanded with additional options. Supported items are:
     * - `id` - File id which uniquely identifies file resource whose security privileges need to be retrieved and updated.
     * - `accessAction` - Action abbreviation which identifies ACL policy assigned to the specified user and file resource.
     * - `user` - A value which uniquely identifies user for which ACL policy needs to be removed.
     * @method
     * @param id File id which uniquely identifies file resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and file resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param user A value that uniquely identifies user for which ACL policy needs to be removed.
     * @example baasicFilesACLRouteDefinition.deleteByUser({ id: '<file-id>', accessAction: '<access-action>', user: '<username>' });
     **/
    BaasicFilesACLRouteDefinition.prototype.deleteByUser = function (id, action, user, data) {
        var params = this.modelMapper.removeParams(data);
        params.id = id;
        params.user = user;
        params.accessAction = action;
        return _super.prototype.baseCreate.call(this, this.deleteByUserRoute, params);
    };
    /**
     * Parses deleteByUser acl route which can be expanded with additional options. Supported items are:
     * - `id` - File id which uniquely identifies file resource whose security privileges need to be retrieved and updated.
     * - `accessAction` - Action abbreviation which identifies ACL policy assigned to the specified role and file resource.
     * - `role` - A value which uniquely identifies role for which ACL policy needs to be removed.
     * @method
     * @param id File id which uniquely identifies file resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and file resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param role A value that uniquely identifies role for which ACL policy needs to be removed.
     * @example baasicFilesACLRouteDefinition.deleteByRole({ id: '<file-id>', accessAction: '<access-action>', role: '<role-name>' });
     **/
    BaasicFilesACLRouteDefinition.prototype.deleteByRole = function (id, action, role, data) {
        var params = this.modelMapper.removeParams(data);
        params.id = id;
        params.role = role;
        params.accessAction = action;
        return _super.prototype.baseCreate.call(this, this.deleteByRoleRoute, params);
    };
    BaasicFilesACLRouteDefinition.prototype.updateParams = function (data) {
        var params = this.utility.extend({}, data);
        return params[this.modelMapper.modelPropertyName];
    };
    return BaasicFilesACLRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicFilesACLRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicFilesACLRouteDefinition);
exports.BaasicFilesACLRouteDefinition = BaasicFilesACLRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicFilesBatchClient
 * @description Baasic Files Batch Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var files_1 = __webpack_require__(18);
var BaasicFilesBatchClient = (function () {
    function BaasicFilesBatchClient(baasicFilesBatchRouteDefinition, baasicApiClient) {
        this.baasicFilesBatchRouteDefinition = baasicFilesBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicFilesBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicFilesBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the update action has been performed; this action updates specified file resources.
     * @method
     * @param data A collection of file objects used to update specified file resources.
     * @returns A promise that is resolved once the update action has been performed.
     * @example baasicFilesClient.update(files)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicFilesBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicFilesBatchRouteDefinition.update(), this.baasicFilesBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the link action has been performed; this action links file resources from other modules into the Files module (For example: file resources from the Media Vault module can be linked directly into the Files module).
     * @method
     * @param data A collection of file objects that need to be inserted into the system.
     * @returns A promise that is resolved once the link action has been performed.
     * @example baasicFilesBatchClient.link(files)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicFilesBatchClient.prototype.link = function (data) {
        return this.baasicApiClient.post(this.baasicFilesBatchRouteDefinition.link(), this.baasicFilesBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the unlink action has been performed. This action will remove file resources from the system if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will remove just derived resource. Otherwise, specified file and all its accompanying derived resources will be removed from the system.
     * @method
     * @param data Collection of file delete requests which uniquely identifies file resources that need to be deleted.
     * @returns A promise that is resolved once the unlink action has been performed.
     * @example // Remove original file resources
                    baasicFilesBatchClient.unlink([{ id: '<file-id>' }])
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
                // Remove derived file resources
                    baasicFilesBatchClient.unlink([{ id: '<file-id>', fileFormat: { width: <width>, height: <height> } }])
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicFilesBatchClient.prototype.unlink = function (data) {
        return this.baasicApiClient.delete(this.baasicFilesBatchRouteDefinition.unlink(), undefined, data);
    };
    return BaasicFilesBatchClient;
}());
BaasicFilesBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(files_1.TYPES.BaasicFilesBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [files_1.BaasicFilesBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicFilesBatchClient);
exports.BaasicFilesBatchClient = BaasicFilesBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicFilesBatchRouteDefinition
 * @description Baasic Files Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicFilesBatchRouteDefinition = (function (_super) {
    __extends(BaasicFilesBatchRouteDefinition, _super);
    function BaasicFilesBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.updateRoute = 'files/batch';
        _this.linkRoute = 'files/batch/link';
        _this.unlinkRoute = 'files/batch/unlink';
        return _this;
    }
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicFilesBatchRouteDefinition.update();
     **/
    BaasicFilesBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseCreate.call(this, this.updateRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicFilesBatchRouteDefinition.link();
     **/
    BaasicFilesBatchRouteDefinition.prototype.link = function () {
        return _super.prototype.baseCreate.call(this, this.linkRoute, {});
    };
    /**
     * Parses unlink route; this URI template does not expose any additional options.
     * @method
     * @example baasicFilesBatchRouteDefinition.unlink();
     **/
    BaasicFilesBatchRouteDefinition.prototype.unlink = function () {
        return _super.prototype.baseCreate.call(this, this.unlinkRoute, {});
    };
    return BaasicFilesBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicFilesBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicFilesBatchRouteDefinition);
exports.BaasicFilesBatchRouteDefinition = BaasicFilesBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicFilesClient
 * @description Baasic Files Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var files_1 = __webpack_require__(18);
var BaasicFilesClient = (function () {
    function BaasicFilesClient(baasicFilesRouteDefinition, baasicApiClient, baasicFilesStreamsClient, baasicFilesBatchClient, baasicFilesACLClient) {
        this.baasicFilesRouteDefinition = baasicFilesRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        this.baasicFilesStreamsClient = baasicFilesStreamsClient;
        this.baasicFilesBatchClient = baasicFilesBatchClient;
        this.baasicFilesACLClient = baasicFilesACLClient;
    }
    Object.defineProperty(BaasicFilesClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicFilesRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicFilesClient.prototype, "streams", {
        get: function () {
            return this.baasicFilesStreamsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicFilesClient.prototype, "batch", {
        get: function () {
            return this.baasicFilesBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicFilesClient.prototype, "acl", {
        get: function () {
            return this.baasicFilesACLClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of file resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicFilesClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicFilesClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicFilesRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns requested file resource.
     * @method
     * @param id File id which uniquely identifies file resource that needs to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicFilesClient.get('<file-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicFilesClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicFilesRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update file action has been performed; this action will update a file resource if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicFilesRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(fileEntry);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data A file entry object used to update specific file entry resource in the system.
     * @example // fileEntry is a file resource previously fetched using get action.
                    fileEntry.description = '<description>';
                    baasicFilesClient.update(fileEntry)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicFilesClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicFilesRouteDefinition.update(data), this.baasicFilesRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the unlink action has been performed. This action will remove one or many file resources from the system if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will remove just derived resource. Otherwise, specified file and all its accompanying derived resources will be removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply baasicFilesRouteService route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(fileEntry);
     * let uri = params['model'].links('unlink').href;
     * ```
     * @method
     * @param data
     * @param options
     * @returns A promise that is resolved once the unlink action has been performed.
     * @example // fileEntry is a file resource previously fetched using get action. The following action will remove the original file resource and all accompanying derived file resources.
                    baasicFilesClient.unlink(fileEntry)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
                // fileEntry is a file resource previously fetched using get action. The following action will remove derived file resource only.
                    baasicFilesClient.unlink(fileEntry, {width: <width>, height: <height>})
                        .then(function (data) {
                            // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicFilesClient.prototype.unlink = function (data, options) {
        return this.baasicApiClient.delete(this.baasicFilesRouteDefinition.unlink(data, options));
    };
    /**
     * Returns a promise that is resolved once the link action has been performed; this action links file resource from other modules into the Files module (For example: file resources from the Media Vault module can be linked directly into the Files module).
     * @method
     * @param data A file object that need to be inserted into the system.
     * @returns A promise that is resolved once the link action has been performed.
     * @example baasicFilesClient.link(fileObject)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicFilesClient.prototype.link = function (data) {
        return this.baasicApiClient.post(this.baasicFilesRouteDefinition.link(), this.baasicFilesRouteDefinition.createParams(data));
    };
    return BaasicFilesClient;
}());
BaasicFilesClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(files_1.TYPES.BaasicFilesRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __param(2, inversify_1.inject(files_1.TYPES.BaasicFilesStreamsClient)),
    __param(3, inversify_1.inject(files_1.TYPES.BaasicFilesBatchClient)),
    __param(4, inversify_1.inject(files_1.TYPES.BaasicFilesACLClient)),
    __metadata("design:paramtypes", [files_1.BaasicFilesRouteDefinition,
        httpApi_1.BaasicApiClient,
        files_1.BaasicFilesStreamsClient,
        files_1.BaasicFilesBatchClient,
        files_1.BaasicFilesACLClient])
], BaasicFilesClient);
exports.BaasicFilesClient = BaasicFilesClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
    */ 


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicFilesRouteDefinition
 * @description Baasic Files Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var files_1 = __webpack_require__(18);
var contracts_1 = __webpack_require__(1);
var BaasicFilesRouteDefinition = (function (_super) {
    __extends(BaasicFilesRouteDefinition, _super);
    function BaasicFilesRouteDefinition(appOptions, baasicFilesStreamsRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicFilesStreamsRouteDefinition = baasicFilesStreamsRouteDefinition;
        _this.findRoute = 'files/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'files/{id}/{?embed,fields}';
        _this.updateRoute = 'files/{id}';
        _this.unlinkRoute = 'files/unlink/{id}/{?height,width}';
        _this.linkRoute = 'files/link';
        return _this;
    }
    Object.defineProperty(BaasicFilesRouteDefinition.prototype, "streams", {
        get: function () {
            return this.baasicFilesStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing file properties using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain file subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the file property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicFilesRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicFilesRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route should be expanded with the Id of the file resource.
     * @method
     * @param id File id which uniquely identifies file resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicFilesRouteDefinition.get({id: '<file-id>'});
     **/
    BaasicFilesRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses update route; this route should be expanded with the Id of the file resource.
     * @method
     * @param data A file entry object used to update specific file entry resource in the system.
     * @example baasicFilesRouteDefinition.get({id: '<file-id>'});
     **/
    BaasicFilesRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses unlink route; this route should be expanded with the Id of the file resource.
     * @method
     * @param data A file entry object used to update specific file entry resource in the system.
     * @example baasicFilesRouteDefinition.unlink({id: '<file-id>'});
     **/
    BaasicFilesRouteDefinition.prototype.unlink = function (data, options) {
        return _super.prototype.baseDelete.call(this, this.unlinkRoute, data, options, 'unlink');
    };
    /**
     * Parses link route; this URI template does not expose any additional options.
     * @method
     * @example baasicFilesRouteDefinition.link();
     **/
    BaasicFilesRouteDefinition.prototype.link = function () {
        return _super.prototype.baseCreate.call(this, this.linkRoute, {});
    };
    return BaasicFilesRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicFilesRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(files_1.TYPES.BaasicFilesStreamsRouteDefinition)),
    __metadata("design:paramtypes", [Object, files_1.BaasicFilesStreamsRouteDefinition])
], BaasicFilesRouteDefinition);
exports.BaasicFilesRouteDefinition = BaasicFilesRouteDefinition;
/**
 * @overview
***Notes:**
- Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
- [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
- All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicFilesStreamsClient
 * @description Baasic Files Streams Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Streams Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var files_1 = __webpack_require__(18);
var BaasicFilesStreamsClient = (function () {
    function BaasicFilesStreamsClient(baasicFilesStreamsRouteDefinition, baasicApiClient) {
        this.baasicFilesStreamsRouteDefinition = baasicFilesStreamsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicFilesStreamsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicFilesStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the file stream if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will return a stream of the derived resource. Otherwise, stream of the original file resource will be retrieved.
     * @method
     * @param id File id of the original file resource used to identify stream that needs to be retrieved from the system.
     * @returns A promise that is resolved once the get action has been performed.
     * @example // Request the original file stream
                        baasicFilesStreamsClient.get({id: '<path>'})
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
                // Request derived file stream
                    baasicFilesStreamsClient.get({id: '<path>', width: <width>, height: <height>})
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicFilesStreamsClient.prototype.get = function (data) {
        return this.baasicApiClient.get(this.baasicFilesStreamsRouteDefinition.get(data));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the file stream as a blob. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will return a blob of the derived file resource. Otherwise, blob of the original file resource will be retrieved. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method
     * @example // Request the original blob
                    baasicFilesStreamsClient.getBlob('<path>')
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
                // Request derived blob
                    baasicFilesStreamsClient.getBlob({id: '<path>', width: <width>, height: <height>})
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicFilesStreamsClient.prototype.getBlob = function (data) {
        return this.baasicApiClient.get(this.baasicFilesStreamsRouteDefinition.get(data), { 'Accept': 'application/octet-stream' });
    };
    /**
     * Returns a promise that is resolved once the update file stream action has been performed; this action will replace the existing stream with a new one. Alternatively, if a derived stream is being updated it will either create a new derived stream or replace the existing one. In order to update a derived stream, format needs to be passed (For example: `width` and `height` for the image type of file stream data type).
     * @method
     * @example // Update original file stream
                    baasicFilesStreamsClient.update('<path>', <file-stream>)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
                // Update derived file stream
                    baasicFilesStreamsClient.update({id: '<path>', width: <width>, height: <height>}, <file-stream>)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicFilesStreamsClient.prototype.update = function (data, stream) {
        var formData = new FormData();
        formData.append('file', stream);
        return this.baasicApiClient.put(this.baasicFilesStreamsRouteDefinition.update(data), data, { 'Content-Type': undefined });
    };
    /**
     * Returns a promise that is resolved once the create file stream action has been performed; this action will upload the specified blob. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method
     * @example baasicFilesStreamsClient.create('<path>', <blob>)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicFilesStreamsClient.prototype.create = function (data, stream) {
        var formData = new FormData();
        formData.append('file', stream);
        return this.baasicApiClient.post(this.baasicFilesStreamsRouteDefinition.create(data), formData, { 'Content-Type': undefined });
    };
    return BaasicFilesStreamsClient;
}());
BaasicFilesStreamsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(files_1.TYPES.BaasicFilesStreamsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [files_1.BaasicFilesStreamsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicFilesStreamsClient);
exports.BaasicFilesStreamsClient = BaasicFilesStreamsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicFilesStreamsRouteDefinition
 * @description Baasic Files Streams Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Files Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicFilesStreamsRouteDefinition = (function (_super) {
    __extends(BaasicFilesStreamsRouteDefinition, _super);
    function BaasicFilesStreamsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'file-streams/{id}/{?width,height}';
        _this.updateRoute = 'file-streams/{id}/{?width,height}';
        _this.createRoute = 'file-streams/{path}';
        return _this;
    }
    /**
     * Parses get route; this route should be expanded with id or path of desired file stream. Additional supported items are:
     * - `width` - width of desired derived image.
     * - `height` - height of desired derived image.
     * @method
     * @example baasicFilesStreamsRouteDefinition.get({id: '<path>'});
     **/
    BaasicFilesStreamsRouteDefinition.prototype.get = function (data) {
        if (!this.utility.isObject(data)) {
            data = {
                id: data
            };
        }
        return _super.prototype.baseCreate.call(this, this.getRoute, data);
    };
    /**
     * Parses update route; this route should be expanded with the id or path of the previously saved resource. Additional supported items are:
     * - `width` - width of derived image to update.
     * - `height` - height of derived image to update.
     * @method
     * @example baasicFilesStreamsRouteDefinition.update({id: '<path>'});
     **/
    BaasicFilesStreamsRouteDefinition.prototype.update = function (data) {
        if (!this.utility.isObject(data)) {
            data = {
                id: data
            };
        }
        return _super.prototype.baseCreate.call(this, this.updateRoute, data);
    };
    /**
     * Parses create route; this route should be expanded with the path which indicates where the stream will be saved.
     * @method
     * @example baasicFilesStreamsRouteDefinition.create({path: '<path>'});
     **/
    BaasicFilesStreamsRouteDefinition.prototype.create = function (data) {
        if (!this.utility.isObject(data)) {
            data = {
                path: data
            };
        }
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    return BaasicFilesStreamsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicFilesStreamsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicFilesStreamsRouteDefinition);
exports.BaasicFilesStreamsRouteDefinition = BaasicFilesStreamsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var files_1 = __webpack_require__(18);
var TYPES = {
    BaasicFilesACLClient: Symbol("BaasicFilesACLClient"),
    BaasicFilesACLRouteDefinition: Symbol("BaasicFilesACLRouteDefinition"),
    BaasicFilesBatchRouteDefinition: Symbol("BaasicFilesBatchRouteDefinition"),
    BaasicFilesBatchClient: Symbol("BaasicFilesBatchClient"),
    BaasicFilesRouteDefinition: Symbol("BaasicFilesRouteDefinition"),
    BaasicFilesClient: Symbol("BaasicFilesClient"),
    BaasicFilesStreamsRouteDefinition: Symbol("BaasicFilesStreamsRouteDefinition"),
    BaasicFilesStreamsClient: Symbol("BaasicFilesStreamsClient")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicFilesBatchRouteDefinition).to(files_1.BaasicFilesBatchRouteDefinition);
    bind(TYPES.BaasicFilesBatchClient).to(files_1.BaasicFilesBatchClient);
    bind(TYPES.BaasicFilesStreamsRouteDefinition).to(files_1.BaasicFilesStreamsRouteDefinition);
    bind(TYPES.BaasicFilesStreamsClient).to(files_1.BaasicFilesStreamsClient);
    bind(TYPES.BaasicFilesACLRouteDefinition).to(files_1.BaasicFilesACLRouteDefinition);
    bind(TYPES.BaasicFilesACLClient).to(files_1.BaasicFilesACLClient);
    bind(TYPES.BaasicFilesRouteDefinition).to(files_1.BaasicFilesRouteDefinition);
    bind(TYPES.BaasicFilesClient).to(files_1.BaasicFilesClient);
});
exports.diModule = diModule;


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ApplicationSettings = __webpack_require__(25);
exports.ApplicationSettings = ApplicationSettings;
var Membership = __webpack_require__(9);
exports.Membership = Membership;
var UserProfile = __webpack_require__(7);
exports.UserProfile = UserProfile;
var KeyValue = __webpack_require__(26);
exports.KeyValue = KeyValue;
var ValueSet = __webpack_require__(22);
exports.ValueSet = ValueSet;
var Article = __webpack_require__(5);
exports.Article = Article;
var DynamicResource = __webpack_require__(19);
exports.DynamicResource = DynamicResource;
var MediaVault = __webpack_require__(16);
exports.MediaVault = MediaVault;
var Files = __webpack_require__(18);
exports.Files = Files;
var Templating = __webpack_require__(21);
exports.Templating = Templating;
var Metering = __webpack_require__(11);
exports.Metering = Metering;
var Notifications = __webpack_require__(6);
exports.Notifications = Notifications;
var Commerce = __webpack_require__(4);
exports.Commerce = Commerce;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module baasicKeyValueClient
 * @description Baasic Key Value Client provides an easy way to consume Baasic Key Value REST API end-points. In order to obtain needed routes `baasicKeyValueClient` uses `baasicKeyValueRouteClient`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var keyValue_1 = __webpack_require__(26);
var BaasicKeyValueClient = (function () {
    function BaasicKeyValueClient(baasicKeyValueRouteDefinition, baasicApiClient) {
        this.baasicKeyValueRouteDefinition = baasicKeyValueRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicKeyValueClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicKeyValueRouteDefinition`.
         * @method
         * @example baasicKeyValueClient.routeDefinition.get();
         **/
        get: function () {
            return this.baasicKeyValueRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of key value resources matching the given criteria.
     * @param options query resource options object
     * @returns A promise that is resolved once the find action has beend performed.
     * @method
     * @example baasicKeyValueClient.find({
                 pageNumber: 1,
                 pageSize: 10,
                 orderBy: '<field>',
                 orderDirection: '<asc|desc>',
                 search: '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicKeyValueClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicKeyValueRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified key value resource.
     * @param id unique identifer of key value resources
     * @param options query resource options object
     * @returns A promise that is resolved once the get action has beend performed.
     * @method
     * @example baasicKeyValueClient.get('<key-value-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicKeyValueClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicKeyValueRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create key value action has been performed; this action creates a new key value resource.
     * @param data A key value object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create key value action has beend performed.
     * @method
     * @example baasicKeyValueClient.create({key: '<key>', value: '<value>', })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     */
    BaasicKeyValueClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicKeyValueRouteDefinition.create(), this.baasicKeyValueRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update key value action has been performed; this action updates a key value resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicKeyValueRouteService` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(keyValue);
     * let uri = params['model'].links('put').href;
     * ```
     * @param data A key value object used to update specified key value resource.
     * @return A promise that is resolved once the update key value action has been performed.
     * @method
     * @example // keyValue is a resource previously fetched using get action.
                   keyValue.value = '<new-value>';
                   baasicKeyValueClient.update(keyValue)
                   .then(function (data) {
                       // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicKeyValueClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicKeyValueRouteDefinition.update(data), this.baasicKeyValueRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a key value resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicKeyValueRouteService` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(keyValue);
     * let uri = params['model'].links('delete').href;
     * ```
     * @param data A key value object used to delete specified key value resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @method
     * @example // keyValue is a resource previously fetched using get action.
                    baasicKeyValueClient.remove(keyValue)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicKeyValueClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicKeyValueRouteDefinition.delete(data), this.baasicKeyValueRouteDefinition.deleteParams(data));
    };
    return BaasicKeyValueClient;
}());
BaasicKeyValueClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(keyValue_1.TYPES.BaasicKeyValueRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [keyValue_1.BaasicKeyValueRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicKeyValueClient);
exports.BaasicKeyValueClient = BaasicKeyValueClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicKeyValueRouteDefinition
 * @description Baasic Key Value Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Key Value Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicKeyValueRouteDefinition = (function (_super) {
    __extends(BaasicKeyValueRouteDefinition, _super);
    function BaasicKeyValueRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'key-values/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'key-values/{id}/{?embed,fields}';
        _this.createRoute = 'key-values';
        _this.updateRoute = 'key-values/{id}';
        _this.deleteRoute = 'key-values/{id}';
        return _this;
    }
    /**
     * Parses find key value route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify key value resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain key value subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the key value property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicKeyValueRouteDefinition.find(options);
     **/
    BaasicKeyValueRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get key value route which must be expanded with the Id of the previously created key value resource in the system.
     * @method
     * @param id Key value resource unique identifier.
     * @param options Query resource options object.
     * @example baasicKeyValueRouteDefinition.get();
     **/
    BaasicKeyValueRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create key value route; this URI template does not expose any additional options.
     * @method
     * @example baasicKeyValueRouteDefinition.create();
     **/
    BaasicKeyValueRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update key value route.
     * @method
     * @param data Key Value object used to create update route.
     * @example baasicKeyValueRouteDefinition.update(data);
     */
    BaasicKeyValueRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete key value route.
     * @method
     * @param data Key Value object used to create delete route.
     * @example baasicKeyValueRouteDefinition.delete(data);
     */
    BaasicKeyValueRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicKeyValueRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicKeyValueRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicKeyValueRouteDefinition);
exports.BaasicKeyValueRouteDefinition = BaasicKeyValueRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var keyValue_1 = __webpack_require__(26);
var TYPES = {
    BaasicKeyValueClient: Symbol("BaasicKeyValueClient"),
    BaasicKeyValueRouteDefinition: Symbol("BaasicKeyValueRouteDefinition")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicKeyValueRouteDefinition).to(keyValue_1.BaasicKeyValueRouteDefinition);
    bind(TYPES.BaasicKeyValueClient).to(keyValue_1.BaasicKeyValueClient);
});
exports.diModule = diModule;


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMediaVaultBatchClient
 * @description Baasic Media Vault Batch Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Media Vault Batch Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var mediaVault_1 = __webpack_require__(16);
var BaasicMediaVaultBatchClient = (function () {
    function BaasicMediaVaultBatchClient(baasicMediaVaultBatchRouteDefinition, baasicApiClient) {
        this.baasicMediaVaultBatchRouteDefinition = baasicMediaVaultBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicMediaVaultBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicMediaVaultBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the update action has been performed; this action updates specified media vault resources.
     * @method
     * @param data A collection of media vault objects used to update specified media vault resources.
     * @returns A promise that is resolved once the update action has been performed.
     * @example baasicMediaVaultStreamsClient.update(files)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicMediaVaultBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicMediaVaultBatchRouteDefinition.update(), this.baasicMediaVaultBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove media vault resources from the system if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of media vault resource, the operation will remove just derived resource. Otherwise, specified media vault and all its accompanying derived resources will be removed from the system.
     * @method
     * @param data Collection of media vault delete requests which uniquely identifies media vault resources that need to be deleted.
     * @example // Remove original media vault resources
                        baasicMediaVaultBatchClient.remove([{ id: '<media-vault-id>' }])
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
                // Remove derived media vault resources
                        baasicMediaVaultBatchClient.remove([{ id: '<media-vault-id>', fileFormat: { width: <width>, height: <height> } }])
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicMediaVaultBatchClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicMediaVaultBatchRouteDefinition.delete(), undefined, data);
    };
    return BaasicMediaVaultBatchClient;
}());
BaasicMediaVaultBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [mediaVault_1.BaasicMediaVaultBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicMediaVaultBatchClient);
exports.BaasicMediaVaultBatchClient = BaasicMediaVaultBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMediaVaultBatchRouteDefinition
 * @description Baasic Media Vault Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Media Vault Batch Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicMediaVaultBatchRouteDefinition = (function (_super) {
    __extends(BaasicMediaVaultBatchRouteDefinition, _super);
    function BaasicMediaVaultBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.updateRoute = 'media-vaults/batch';
        _this.deleteRoute = 'media-vaults/batch';
        return _this;
    }
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicMediaVaultBatchRouteDefinition.update();
     **/
    BaasicMediaVaultBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove route; this URI template does not expose any additional options.
     * @method
     * @example baasicMediaVaultBatchRouteDefinition.delete();
     **/
    BaasicMediaVaultBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicMediaVaultBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMediaVaultBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicMediaVaultBatchRouteDefinition);
exports.BaasicMediaVaultBatchRouteDefinition = BaasicMediaVaultBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMediaVaultClient
 * @description Baasic Media Vault Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Media Vault Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var mediaVault_1 = __webpack_require__(16);
var BaasicMediaVaultClient = (function () {
    function BaasicMediaVaultClient(baasicMediaVaultRouteDefinition, baasicApiClient, baasicMediaVaultStreamsClient, baasicMediaVaultBatchClient, baasicMediaVaultSettingsClient, baasicMediaVaultProcessingProviderSettingsClient) {
        this.baasicMediaVaultRouteDefinition = baasicMediaVaultRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        this.baasicMediaVaultStreamsClient = baasicMediaVaultStreamsClient;
        this.baasicMediaVaultBatchClient = baasicMediaVaultBatchClient;
        this.baasicMediaVaultSettingsClient = baasicMediaVaultSettingsClient;
        this.baasicMediaVaultProcessingProviderSettingsClient = baasicMediaVaultProcessingProviderSettingsClient;
    }
    Object.defineProperty(BaasicMediaVaultClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicMediaVaultRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMediaVaultClient.prototype, "streams", {
        get: function () {
            return this.baasicMediaVaultStreamsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMediaVaultClient.prototype, "batch", {
        get: function () {
            return this.baasicMediaVaultBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMediaVaultClient.prototype, "settings", {
        get: function () {
            return this.baasicMediaVaultSettingsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMediaVaultClient.prototype, "processingProviderSettings", {
        get: function () {
            return this.baasicMediaVaultProcessingProviderSettingsClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of media vault resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicMediaVaultClient.find({
                  pageNumber : 1,
                  pageSize : 10,
                  orderBy : '<field>',
                  orderDirection : '<asc|desc>',
                  search : '<search-phrase>'
               })
               .then(function (collection) {
                   // perform success action here
              },
               function (response, status, headers, config) {
                   // perform error handling here
              });
   **/
    BaasicMediaVaultClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicMediaVaultRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns requested media vault resource.
     * @method
     * @param id Media vault id which uniquely identifies media vault resource that needs to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicMediaVaultClient.get('<media-vault-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMediaVaultClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicMediaVaultRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update media vault action has been performed; this action will update a media vault resource if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicMediaVaultRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(mediaVaultEntry);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data A media vault object used to update specified media vault resource.
     * @returns A promise that is resolved once the update media vault action has been performed.
     * @example // mediaVaultEntry is a media vault resource previously fetched using get action.
                    mediaVaultEntry.description = '<description>';
                    baasicMediaVaultClient.update(mediaVaultEntry)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicMediaVaultClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicMediaVaultRouteDefinition.updateParams(data), this.baasicMediaVaultRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove one or many media vault resources from the system if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of media vault resource, the operation will remove just derived resource. Otherwise, specified media vault and all its accompanying derived resources will be removed from the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply baasicMediaVaultRouteService route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(mediaVaultEntry);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data Media vault object used to delete specific Media vault resource from the system.
     * @param options Options object.
     * @example // mediaVaultEntry is a media vault resource previously fetched using get action. The following action will remove the original media vault resource and all accompanying derived media vault resources.
                   baasicMediaVaultClient.remove(mediaVaultEntry)
                       .then(function (data) {
                           // perform success action here
                       },
                        function (response, status, headers, config) {
                            // perform error handling here
                       });
               // mediaVaultEntry is a media vault resource previously fetched using get action. The following action will remove derived media vault resource only.
                   baasicMediaVaultClient.remove(mediaVaultEntry, {width: <width>, height: <height>})
                       .then(function (data) {
                           // perform success action here
                       },
                        function (response, status, headers, config) {
                            // perform error handling here
                       });
    **/
    BaasicMediaVaultClient.prototype.remove = function (data, options) {
        return this.baasicApiClient.delete(this.baasicMediaVaultRouteDefinition.delete(data, options));
    };
    return BaasicMediaVaultClient;
}());
BaasicMediaVaultClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __param(2, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultStreamsClient)),
    __param(3, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultBatchClient)),
    __param(4, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultSettingsClient)),
    __param(5, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultProcessingProviderSettingsClient)),
    __metadata("design:paramtypes", [mediaVault_1.BaasicMediaVaultRouteDefinition,
        httpApi_1.BaasicApiClient,
        mediaVault_1.BaasicMediaVaultStreamsClient,
        mediaVault_1.BaasicMediaVaultBatchClient,
        mediaVault_1.BaasicMediaVaultSettingsClient,
        mediaVault_1.BaasicMediaVaultProcessingProviderSettingsClient])
], BaasicMediaVaultClient);
exports.BaasicMediaVaultClient = BaasicMediaVaultClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMediaVaultProcessingProviderSettingsClient
 * @description Baasic Media Vault Processing Provider Settings Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Media Vault Processing Provider Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var mediaVault_1 = __webpack_require__(16);
var BaasicMediaVaultProcessingProviderSettingsClient = (function () {
    function BaasicMediaVaultProcessingProviderSettingsClient(baasicMediaVaultProcessingProviderSettingsRouteDefinition, baasicApiClient) {
        this.baasicMediaVaultProcessingProviderSettingsRouteDefinition = baasicMediaVaultProcessingProviderSettingsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicMediaVaultProcessingProviderSettingsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicMediaVaultProcessingProviderSettingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of media vault processing providers matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicMediaVaultProcessingProviderSettingsClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicMediaVaultProcessingProviderSettingsClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicMediaVaultProcessingProviderSettingsRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the media vault processing provider resource.
     * @method
     * @param id Preprocessing provider id which uniquely identifies preprocessing provider whose settings need to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicMediaVaultProcessingProviderSettingsClient.get('<id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMediaVaultProcessingProviderSettingsClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicMediaVaultProcessingProviderSettingsRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update action has been performed; this action updates a media vault processing provider setting resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicMediaVaultProcessingProviderSettingsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(processingProviderSetting);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data A media vault preprocessing provider settings object used to update specified media vault preprocessing provider settings in the system.
     * @returns A promise that is resolved once the update action has been performed.
     * @example // processingProviderSettings is a resource previously fetched using get action.
                    processingProviderSettings.settings.faceDetection = true;
                    baasicMediaVaultProcessingProviderSettingsClient.update(processingProviderSetting)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicMediaVaultProcessingProviderSettingsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicMediaVaultProcessingProviderSettingsRouteDefinition.update(data), this.baasicMediaVaultProcessingProviderSettingsRouteDefinition.updateParams(data));
    };
    return BaasicMediaVaultProcessingProviderSettingsClient;
}());
BaasicMediaVaultProcessingProviderSettingsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultProcessingProviderSettingsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [mediaVault_1.BaasicMediaVaultProcessingProviderSettingsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicMediaVaultProcessingProviderSettingsClient);
exports.BaasicMediaVaultProcessingProviderSettingsClient = BaasicMediaVaultProcessingProviderSettingsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMediaVaultProcessingProviderSettingsRouteDefinition
 * @description Baasic Media Vault Processing Provider Settings Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Media Vault Processing Provider Settings Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicMediaVaultProcessingProviderSettingsRouteDefinition = (function (_super) {
    __extends(BaasicMediaVaultProcessingProviderSettingsRouteDefinition, _super);
    function BaasicMediaVaultProcessingProviderSettingsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'media-vault-preprocessing-settings/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'media-vault-settings';
        _this.updateRoute = 'media-vault-preprocessing-settings/{id}';
        return _this;
    }
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing media vault processing provider setting properties using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain media vault processing provider setting subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the media vault processing provider setting property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicMediaVaultProcessingProviderSettingsRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicMediaVaultProcessingProviderSettingsRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route should be expanded with Id of the media vault processing provider setting resource.
     * @method
     * @example baasicMediaVaultProcessingProviderSettingsRouteDefinition.get({id: '<id>'});
     **/
    BaasicMediaVaultProcessingProviderSettingsRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses update route; this route should be expanded with Id of the media vault processing provider setting resource.
     * @method
     * @param data A media vault preprocessing provider settings object used to update specified media vault preprocessing provider settings in the system.
     * @example baasicMediaVaultProcessingProviderSettingsRouteDefinition.update(data);
     **/
    BaasicMediaVaultProcessingProviderSettingsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicMediaVaultProcessingProviderSettingsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMediaVaultProcessingProviderSettingsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicMediaVaultProcessingProviderSettingsRouteDefinition);
exports.BaasicMediaVaultProcessingProviderSettingsRouteDefinition = BaasicMediaVaultProcessingProviderSettingsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMediaVaultRouteDefinition
 * @description Baasic Media Vault Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Media Vault Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var mediaVault_1 = __webpack_require__(16);
var contracts_1 = __webpack_require__(1);
var BaasicMediaVaultRouteDefinition = (function (_super) {
    __extends(BaasicMediaVaultRouteDefinition, _super);
    function BaasicMediaVaultRouteDefinition(appOptions, baasicMediaVaultStreamsRouteDefinition, baasicMediaVaultBatchRouteDefinition, baasicMediaVaultSettingsRouteDefinition, baasicMediaVaultProcessingProviderSettingsRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicMediaVaultStreamsRouteDefinition = baasicMediaVaultStreamsRouteDefinition;
        _this.baasicMediaVaultBatchRouteDefinition = baasicMediaVaultBatchRouteDefinition;
        _this.baasicMediaVaultSettingsRouteDefinition = baasicMediaVaultSettingsRouteDefinition;
        _this.baasicMediaVaultProcessingProviderSettingsRouteDefinition = baasicMediaVaultProcessingProviderSettingsRouteDefinition;
        _this.findRoute = 'media-vaults/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'media-vaults/{id}/{?embed,fields}';
        _this.updateRoute = 'media-vaults/{id}';
        _this.deleteRoute = 'media-vaults/{id}/{?height,width}';
        return _this;
    }
    Object.defineProperty(BaasicMediaVaultRouteDefinition.prototype, "streams", {
        get: function () {
            return this.baasicMediaVaultStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMediaVaultRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicMediaVaultBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMediaVaultRouteDefinition.prototype, "settings", {
        get: function () {
            return this.baasicMediaVaultSettingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMediaVaultRouteDefinition.prototype, "processingProviderSettings", {
        get: function () {
            return this.baasicMediaVaultProcessingProviderSettingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing media vault properties using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain media vault subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the media vault property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicMediaVaultRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicMediaVaultRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route should be expanded with the Id of media vault resource.
     * @method
     * @param id Media vault id which uniquely identifies media vault resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicMediaVaultRouteDefinition.get({id: '<media-vault-id>'});
     **/
    BaasicMediaVaultRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses update route; this route should be expanded with the Id of media vault resource.
     * @method
     * @param data Media vault object used to update specific Media vault resource in the system.
     * @example baasicMediaVaultRouteDefinition.get({id: '<media-vault-id>'});
     **/
    BaasicMediaVaultRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete route; this route should be expanded with the Id of media vault resource.
     * @method
     * @param data Media vault object used to update specific Media vault resource in the system.
     * @param options Options object.
     * @example baasicMediaVaultRouteDefinition.delete({id: '<media-vault-id>'});
     **/
    BaasicMediaVaultRouteDefinition.prototype.delete = function (data, options) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data, options);
    };
    return BaasicMediaVaultRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMediaVaultRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultStreamsRouteDefinition)),
    __param(2, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultBatchRouteDefinition)),
    __param(3, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultSettingsRouteDefinition)),
    __param(4, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultProcessingProviderSettingsRouteDefinition)),
    __metadata("design:paramtypes", [Object, mediaVault_1.BaasicMediaVaultStreamsRouteDefinition,
        mediaVault_1.BaasicMediaVaultBatchRouteDefinition,
        mediaVault_1.BaasicMediaVaultSettingsRouteDefinition,
        mediaVault_1.BaasicMediaVaultProcessingProviderSettingsRouteDefinition])
], BaasicMediaVaultRouteDefinition);
exports.BaasicMediaVaultRouteDefinition = BaasicMediaVaultRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMediaVaultSettingsClient
 * @description Baasic Media Vault Settings Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Media Vault Settings Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var mediaVault_1 = __webpack_require__(16);
var BaasicMediaVaultSettingsClient = (function () {
    function BaasicMediaVaultSettingsClient(baasicMediaVaultSettingsRouteDefinition, baasicApiClient) {
        this.baasicMediaVaultSettingsRouteDefinition = baasicMediaVaultSettingsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicMediaVaultSettingsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicMediaVaultSettingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns media vault settings resource.
     * @method
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicMediaVaultSettingsClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMediaVaultSettingsClient.prototype.get = function () {
        return this.baasicApiClient.get(this.baasicMediaVaultSettingsRouteDefinition.get());
    };
    /**
     * Returns a promise that is resolved once the update action has been performed; this action updates the media vault settings resource.
     * @method
     * @param data A media vault settings object used to update media vault settings in the system.
     * @returns A promise that is resolved once the update action has been performed.
     * @example baasicMediaVaultSettingsClient.update(mediaVaultSettings)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMediaVaultSettingsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicMediaVaultSettingsRouteDefinition.update(), this.baasicMediaVaultSettingsRouteDefinition.updateParams(data));
    };
    return BaasicMediaVaultSettingsClient;
}());
BaasicMediaVaultSettingsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultSettingsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [mediaVault_1.BaasicMediaVaultSettingsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicMediaVaultSettingsClient);
exports.BaasicMediaVaultSettingsClient = BaasicMediaVaultSettingsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMediaVaultSettingsRouteDefinition
 * @description Baasic Media Vault Settings Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Media Vault Settings Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicMediaVaultSettingsRouteDefinition = (function (_super) {
    __extends(BaasicMediaVaultSettingsRouteDefinition, _super);
    function BaasicMediaVaultSettingsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'media-vault-settings';
        _this.updateRoute = 'media-vault-settings';
        return _this;
    }
    /**
     * Parses get route; this route doesn not expose any additional options.
     * @method
     * @example baasicMediaVaultSettingsRouteDefinition.get();
     **/
    BaasicMediaVaultSettingsRouteDefinition.prototype.get = function () {
        return _super.prototype.baseCreate.call(this, this.getRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicMediaVaultSettingsRouteDefinition.update();
     **/
    BaasicMediaVaultSettingsRouteDefinition.prototype.update = function () {
        return _super.prototype.baseCreate.call(this, this.updateRoute, {});
    };
    return BaasicMediaVaultSettingsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMediaVaultSettingsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicMediaVaultSettingsRouteDefinition);
exports.BaasicMediaVaultSettingsRouteDefinition = BaasicMediaVaultSettingsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMediaVaultStreamsClient
 * @description Baasic Media Vault Streams Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Media Vault Streams Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var mediaVault_1 = __webpack_require__(16);
var BaasicMediaVaultStreamsClient = (function () {
    function BaasicMediaVaultStreamsClient(baasicMediaVaultStreamsRouteDefinition, baasicApiClient) {
        this.baasicMediaVaultStreamsRouteDefinition = baasicMediaVaultStreamsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicMediaVaultStreamsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicMediaVaultStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the media vault stream if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of media vault resource, the operation will return a stream of the derived resource. Otherwise, stream of the original media vault resource will be retrieved.
     * @method
     * @example // Request the original media vault stream
                        baasicMediaVaultStreamsClient.get('<path>')
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
                // Request derived media vault stream
                        baasicMediaVaultStreamsClient.get({id: '<path>', width: <width>, height: <height>})
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicMediaVaultStreamsClient.prototype.get = function (data) {
        return this.baasicApiClient.get(this.baasicMediaVaultStreamsRouteDefinition.get(data));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the media vault stream as a blob. If derived resource's format is passed, such as `width` and `height` for the image type of media vault resource, the operation will return a blob of the derived media vault resource. Otherwise, blob of the original media vault resource will be retrieved. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method
     * @example // Request the original blob
                        baasicMediaVaultStreamsClient.getBlob('<path>')
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
                // Request derived blob
                        baasicMediaVaultStreamsClient.getBlob({id: '<path>', width: <width>, height: <height>})
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicMediaVaultStreamsClient.prototype.getBlob = function (data) {
        return this.baasicApiClient.get(this.baasicMediaVaultStreamsRouteDefinition.get(data), { 'Accept': 'application/octet-stream' });
    };
    /**
     * Returns a promise that is resolved once the create media vault stream action has been performed; this action will upload the specified blob. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method
     * @example baasicMediaVaultStreamsClient.create('<path>', <blob>)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMediaVaultStreamsClient.prototype.create = function (data, stream) {
        var formData = new FormData();
        formData.append('file', stream);
        return this.baasicApiClient.post(this.baasicMediaVaultStreamsRouteDefinition.create(data), formData, { 'Content-Type': undefined });
    };
    /**
     * Returns a promise that is resolved once the update media vault stream action has been performed; this action will replace the existing stream with a new one. Alternatively, if a derived stream is being updated it will either create a new derived stream or replace the existing one. In order to update a derived stream, format needs to be passed (For example: `width` and `height` for the image type of media vault stream data type).
     * @method
     * @example // Update existing original media vault stream
                        baasicMediaVaultStreamsClient.update('<path>', <media-vault-stream>)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
                // Update derived media vault stream
                    baasicMediaVaultStreamsClient.update({id: '<path>', width: <width>, height: <height>}, <media-vault-stream>)
                        .then(function (data) {
                            // perform success action here
                        },
                          function (response, status, headers, config) {
                              // perform error handling here
                        });
     **/
    BaasicMediaVaultStreamsClient.prototype.update = function (data, stream) {
        var formData = new FormData();
        formData.append('file', stream);
        return this.baasicApiClient.put(this.baasicMediaVaultStreamsRouteDefinition.update(data), formData, { 'Content-Type': undefined });
    };
    return BaasicMediaVaultStreamsClient;
}());
BaasicMediaVaultStreamsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(mediaVault_1.TYPES.BaasicMediaVaultStreamsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [mediaVault_1.BaasicMediaVaultStreamsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicMediaVaultStreamsClient);
exports.BaasicMediaVaultStreamsClient = BaasicMediaVaultStreamsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMediaVaultStreamsRouteDefinition
 * @description Baasic MediaVault Streams Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Media Vault Streams Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicMediaVaultStreamsRouteDefinition = (function (_super) {
    __extends(BaasicMediaVaultStreamsRouteDefinition, _super);
    function BaasicMediaVaultStreamsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'media-vault-streams/{id}/{?width,height}';
        _this.createRoute = 'media-vault-streams/{path}';
        _this.updateRoute = 'media-vault-streams/{id}/{?width,height}';
        return _this;
    }
    /**
     * Parses get route; this route should be expanded with id or path of desired media vault stream. Additional supported items are:
     * - `width` - width of desired derived image.
     * - `height` - height of desired derived image.
     * @method
     * @example baasicMediaVaultRouteDefinition.get({id: '<path>'});
     **/
    BaasicMediaVaultStreamsRouteDefinition.prototype.get = function (data) {
        if (this.utility.isObject(data)) {
            data = {
                id: data
            };
        }
        return _super.prototype.baseCreate.call(this, this.getRoute, data);
    };
    /**
     * Parses create route; this route should be expanded with the path which indicates where the stream will be saved.
     * @method
     * @example baasicMediaVaultStreamsRouteDefinition.create({path: '<path>'});
     **/
    BaasicMediaVaultStreamsRouteDefinition.prototype.create = function (data) {
        if (this.utility.isObject(data)) {
            data = {
                path: data
            };
        }
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses update route; this route should be expanded with the id or path of the previously saved media vault resource. Additional supported items are:
     * - `width` - width of desired derived image.
     * - `height` - height of desired derived image.
     * @method
     * @example baasicMediaVaultStreamsRouteDefinition.update({id: '<path>'});
     **/
    BaasicMediaVaultStreamsRouteDefinition.prototype.update = function (data) {
        if (this.utility.isObject(data)) {
            data = {
                id: data
            };
        }
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicMediaVaultStreamsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMediaVaultStreamsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicMediaVaultStreamsRouteDefinition);
exports.BaasicMediaVaultStreamsRouteDefinition = BaasicMediaVaultStreamsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var mediaVault_1 = __webpack_require__(16);
var TYPES = {
    BaasicMediaVaultBatchRouteDefinition: Symbol("BaasicMediaVaultBatchRouteDefinition"),
    BaasicMediaVaultBatchClient: Symbol("BaasicMediaVaultBatchClient"),
    BaasicMediaVaultRouteDefinition: Symbol("BaasicMediaVaultRouteDefinition"),
    BaasicMediaVaultProcessingProviderSettingsClient: Symbol("BaasicMediaVaultProcessingProviderSettingsClient"),
    BaasicMediaVaultProcessingProviderSettingsRouteDefinition: Symbol("BaasicMediaVaultProcessingProviderSettingsRouteDefinition"),
    BaasicMediaVaultClient: Symbol("BaasicMediaVaultClient"),
    BaasicMediaVaultSettingsRouteDefinition: Symbol("BaasicMediaVaultSettingsRouteDefinition"),
    BaasicMediaVaultSettingsClient: Symbol("BaasicMediaVaultSettingsClient"),
    BaasicMediaVaultStreamsRouteDefinition: Symbol("BaasicMediaVaultStreamsRouteDefinition"),
    BaasicMediaVaultStreamsClient: Symbol("BaasicMediaVaultStreamsClient")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicMediaVaultStreamsRouteDefinition).to(mediaVault_1.BaasicMediaVaultStreamsRouteDefinition);
    bind(TYPES.BaasicMediaVaultStreamsClient).to(mediaVault_1.BaasicMediaVaultStreamsClient);
    bind(TYPES.BaasicMediaVaultBatchRouteDefinition).to(mediaVault_1.BaasicMediaVaultBatchRouteDefinition);
    bind(TYPES.BaasicMediaVaultBatchClient).to(mediaVault_1.BaasicMediaVaultBatchClient);
    bind(TYPES.BaasicMediaVaultSettingsRouteDefinition).to(mediaVault_1.BaasicMediaVaultSettingsRouteDefinition);
    bind(TYPES.BaasicMediaVaultSettingsClient).to(mediaVault_1.BaasicMediaVaultSettingsClient);
    bind(TYPES.BaasicMediaVaultProcessingProviderSettingsRouteDefinition).to(mediaVault_1.BaasicMediaVaultProcessingProviderSettingsRouteDefinition);
    bind(TYPES.BaasicMediaVaultProcessingProviderSettingsClient).to(mediaVault_1.BaasicMediaVaultProcessingProviderSettingsClient);
    bind(TYPES.BaasicMediaVaultRouteDefinition).to(mediaVault_1.BaasicMediaVaultRouteDefinition);
    bind(TYPES.BaasicMediaVaultClient).to(mediaVault_1.BaasicMediaVaultClient);
});
exports.diModule = diModule;


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicLoginClient
 * @description Baasic Login Client provides an easy way to consume Baasic Application Registration REST API end-points. In order to obtain needed routes `baasicLoginClient` uses `baasicLoginRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var httpApi_1 = __webpack_require__(3);
var membership_1 = __webpack_require__(9);
var BaasicLoginClient = (function () {
    function BaasicLoginClient(baasicLoginRouteDefinition, tokenHandler, baasicApiClient) {
        this.baasicLoginRouteDefinition = baasicLoginRouteDefinition;
        this.tokenHandler = tokenHandler;
        this.baasicApiClient = baasicApiClient;
        this.utility = new common_1.Utility();
    }
    Object.defineProperty(BaasicLoginClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicLoginRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the login action has been performed. This action logs user into the application and success response returns the token resource.
     * @method
     * @example baasicLoginClient.login({
                    username : '<username>',
                    password : '<password>',
                    options : ['session', 'sliding']
                })
                .then(function (data) {
                    // perform success actions here
                },
                 function (data, status) {
                     // perform error handling here
                })
                .finally (function () {});
     **/
    BaasicLoginClient.prototype.login = function (data) {
        var settings = this.utility.extend({}, data);
        if (settings.options) {
            var options = settings.options;
            if (options instanceof Array) {
                settings.options = options.join();
            }
        }
        var loginData = this.transformData({
            grant_type: 'password',
            username: settings.username,
            password: settings.password
        });
        var self = this;
        return this.baasicApiClient.createPromise(function (resolve, reject) {
            self.baasicApiClient.post(self.baasicLoginRouteDefinition.login(settings), loginData, { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' })
                .then(function (data) {
                var token = {
                    token: data.data.access_token,
                    expires_in: data.data.expires_in,
                    sliding_window: data.data.sliding_window,
                    tokenUrl: data.data.access_url_token,
                    type: data.data.token_type
                };
                self.tokenHandler.store(token);
                resolve(data);
            }, function (data) {
                reject(data);
            });
        });
    };
    /**
     * Returns a promise that is resolved once the loadUserData action has been performed. This action retrieves the account information of the currently logged in user. Retrieved account information will contain permission collection which identifies access policies assigned to the user and application sections.
     * @method
     * @example baasicLoginClient.loadUserData()
                    .then(function (data) {
                        // perform success actions here
                    },
                     function (data) {
                         // perform error handling here
                    })
                    .finally (function () {});
     */
    BaasicLoginClient.prototype.loadUserData = function (data) {
        data = data || {};
        return this.baasicApiClient.get(this.baasicLoginRouteDefinition.login(data), { 'Accept': 'application/json; charset=UTF-8' });
    };
    /**
     * Returns a promise that is resolved once the logout action has been performed. This action invalidates user token logging the user out of the system.
     * @method
     * @param token Authentication token which uniquely identifies user that needs to be logged out from the system.
     * @param type Token type.
     * @returns A promise that is resolved once the logout action has been performed.
     * @example let token = baasicAuthorizationService.getAccessToken();
                baasicLoginClient.logout(token.access_token, token.token_type)
                .then(function (data) {
                    // perform success handling here
                }, function() {
                    // perform error handling here
                })
                .finally (function () {});
     */
    BaasicLoginClient.prototype.logout = function (token, type) {
        var data = {
            token: token,
            type: type
        };
        var self = this;
        return this.baasicApiClient.createPromise(function (resolve, reject) {
            self.baasicApiClient.delete(self.baasicLoginRouteDefinition.login({}), null, data)
                .then(function (result) {
                self.tokenHandler.store(null);
                resolve();
            }, function (result) {
                reject(result);
            });
        });
    };
    /**
     * Returns url encoded form data.
     */
    BaasicLoginClient.prototype.transformData = function (data) {
        var items = [];
        for (var key in data) {
            items.push([encodeURIComponent(key), encodeURIComponent(data[key])].join('='));
        }
        return items.join('&');
    };
    return BaasicLoginClient;
}());
BaasicLoginClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(membership_1.TYPES.BaasicLoginRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.ITokenHandler)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [membership_1.BaasicLoginRouteDefinition, Object, httpApi_1.BaasicApiClient])
], BaasicLoginClient);
exports.BaasicLoginClient = BaasicLoginClient;
/**
 * @overview
  ***Notes:**
  - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
  - All end-point objects are transformed by the associated route definition.
  */ 


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
/* globals module */
/**
 * @module baasicLoginRouteDefinition
 * @description Baasic Login Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Login Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicLoginRouteDefinition = (function (_super) {
    __extends(BaasicLoginRouteDefinition, _super);
    function BaasicLoginRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        /**
         * Login route with route and query parameters.
         **/
        _this.loginRoute = 'login/{?embed,fields,options}';
        return _this;
    }
    /**
     * Parses login route which can be expanded with additional options. Supported items are:
     * - `options` - Comma separated list of options used to setup authentication token with cookie session. Supported values are: "session" and "sliding".
     * @method
     * @example baasicLoginRouteDefinition.login( {options: 'sliding'});
     **/
    BaasicLoginRouteDefinition.prototype.login = function (options) {
        return _super.prototype.baseCreate.call(this, this.loginRoute, options);
    };
    return BaasicLoginRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicLoginRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicLoginRouteDefinition);
exports.BaasicLoginRouteDefinition = BaasicLoginRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicLoginSocialClient
 * @description Baasic Login Social Client provides an easy way to consume Baasic Application Registration REST API end-points. In order to obtain needed routes `baasicLoginSocialClient` uses `baasicLoginSocialRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var contracts_1 = __webpack_require__(1);
var membership_1 = __webpack_require__(9);
var BaasicLoginSocialClient = (function () {
    function BaasicLoginSocialClient(baasicLoginSocialRouteDefinition, tokenHandler, baasicApiClient) {
        this.baasicLoginSocialRouteDefinition = baasicLoginSocialRouteDefinition;
        this.tokenHandler = tokenHandler;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicLoginSocialClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicLoginSocialRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns a resolved social login provider Url.
     * @method
     * @param provider Provider name or id for which the login URL should be generated.
     * @param returnUrl Redirect Uri for the provider which will be used when the user is redirected back to the application.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicLoginSocialClient.get('<provider>', '<returnUrl>')
                    .then(function (collection) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicLoginSocialClient.prototype.get = function (provider, returnUrl) {
        return this.baasicApiClient.get(this.baasicLoginSocialRouteDefinition.get(provider, returnUrl));
    };
    /**
     * Returns a promise that is resolved once the post action has been performed. This action logs user into the application and success response returns the token resource.
     * @method
     * @param provider Provider name or Id which uniquely identifies social login for which access token should be issued.
     * @param data Object used to identify social login information.
     * @param options Comma separated list of additional options defining token behavior. Supported values are: "session" and "sliding".
     * @example let postData = {
                    email : '<email>',
                    code:'<code>',
                    activationUrl : '<activationUrl>',
                    oAuthToken : '<oAuthToken>',
                    oAuthVerifier : '<oAuthVerifier>',
                    password : '<password>',
                    returnUrl : '<returnUrl>'
                };
                baasicLoginSocialClient.post('<provider>', postData)
                    .then(function (collection) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicLoginSocialClient.prototype.post = function (provider, data, options) {
        var params = { provider: provider };
        if (options) {
            params.options = options;
        }
        var self = this;
        return this.baasicApiClient.createPromise(function (resolve, reject) {
            self.baasicApiClient.post(self.baasicLoginSocialRouteDefinition.post(provider, options), self.baasicLoginSocialRouteDefinition.createParams(data), { 'Content-Type': 'application/json; charset=UTF-8' })
                .then(function (data) {
                if (data) {
                    var token = {
                        token: data.data.access_token,
                        expires_in: data.data.expires_in,
                        sliding_window: data.data.sliding_window,
                        tokenUrl: data.data.access_url_token,
                        type: data.data.token_type
                    };
                    self.tokenHandler.store(token);
                }
                resolve(data);
            }, function (data) {
                reject(data);
            });
        });
    };
    BaasicLoginSocialClient.prototype.parseResponse = function (provider, returnUrl) {
        var params = this.parseUrlParams();
        var result = {};
        switch (provider) {
            case 'twitter':
                /** jshint camelcase: false*/
                result.oAuthToken = params.oauth_token;
                result.oAuthVerifier = params.oauth_verifier;
                break;
            default:
                result.code = params.code;
                result.returnUrl = returnUrl;
                break;
        }
        return result;
    };
    // Getting query string values in javascript: http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript
    BaasicLoginSocialClient.prototype.parseUrlParams = function () {
        var urlParams;
        var match, pl = /\+/g, search = /([^&=]+)=?([^&]*)/g, decode = function (s) { return decodeURIComponent(s.replace(pl, ' ')); }, query = window.location.search.substring(1);
        urlParams = {};
        /* jshint -W084*/
        while (match = search.exec(query)) {
            urlParams[decode(match[1])] = decode(match[2]);
        }
        return urlParams;
    };
    return BaasicLoginSocialClient;
}());
BaasicLoginSocialClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(membership_1.TYPES.BaasicLoginSocialRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.ITokenHandler)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [membership_1.BaasicLoginSocialRouteDefinition, Object, httpApi_1.BaasicApiClient])
], BaasicLoginSocialClient);
exports.BaasicLoginSocialClient = BaasicLoginSocialClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicLoginSocialRouteDefinition
 * @description Baasic Login Social Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Login Social Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicLoginSocialRouteDefinition = (function (_super) {
    __extends(BaasicLoginSocialRouteDefinition, _super);
    function BaasicLoginSocialRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        /**
        * Social login get route with route and query parameters.
        **/
        _this.getRoute = 'login/social/{provider}/{?returnUrl}';
        /**
        * Social login post route with route and query parameters.
        **/
        _this.postRoute = 'login/social/{provider}/{?embed,fields,options}';
        return _this;
    }
    /**
     * Parses get social login route which can be expanded with additional items. Supported items are:
     * - `provider` - Provider name or Id for which the login URL should be generated.
     * - `returnUrl` - Redirect Uri for the provider which will be used when the user is redirected back to the application.
     * @method
     * @param provider Provider name or id for which the login URL should be generated.
     * @param returnUrl Redirect Uri for the provider which will be used when the user is redirected back to the application.
     * @example baasicLoginSocialRouteDefinition.get({   provider : '<provider>',   returnUrl: '<returnUrl>' });
     **/
    BaasicLoginSocialRouteDefinition.prototype.get = function (provider, returnUrl) {
        var params = {
            provider: provider,
            returnUrl: returnUrl
        };
        return _super.prototype.baseFind.call(this, this.getRoute, params);
    };
    /**
     * Parses post social login route which can be expanded with additional items. Supported items are:
     * - `provider` - Provider name or Id being used to login with.
     * @method
     * @example baasicLoginSocialClient.post({ provider : '<provider>' });
     **/
    BaasicLoginSocialRouteDefinition.prototype.post = function (provider, options) {
        return _super.prototype.baseCreate.call(this, this.postRoute, { provider: provider, options: options });
    };
    return BaasicLoginSocialRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicLoginSocialRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicLoginSocialRouteDefinition);
exports.BaasicLoginSocialRouteDefinition = BaasicLoginSocialRouteDefinition;


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicLookupClient
 * @description Baasic Lookup Client provides an easy way to consume Baasic Lookup REST API end-points. In order to obtain needed routes `baasicLookupClient` uses `baasicLookupRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var membership_1 = __webpack_require__(9);
var httpApi_1 = __webpack_require__(3);
var BaasicLookupClient = (function () {
    function BaasicLookupClient(baasicLookupRouteDefinition, baasicApiClient) {
        this.baasicLookupRouteDefinition = baasicLookupRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        this.utility = new common_1.Utility();
    }
    Object.defineProperty(BaasicLookupClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicLookupRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    BaasicLookupClient.prototype.getResponseData = function (embed, data) {
        var responseData = {};
        if (embed) {
            var embeds = embed.split(',');
        }
        for (var index in embeds) {
            var propName = embeds[index];
            if (data.hasOwnProperty(propName)) {
                responseData[propName] = data[propName];
            }
        }
        return responseData;
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the lookup resources.
     * @method
     * @param options Options object that contains comma separated list of related resources to be contained within the current representation.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicLookupClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicLookupClient.prototype.get = function (options) {
        var _this = this;
        var embed = options.embed || 'role,accessAction,accessSection,snProvider';
        var opt = this.utility.extend({}, options, { embed: embed });
        var self = this;
        return this.baasicApiClient.createPromise(function (resolve, reject) {
            self.baasicApiClient.get(_this.baasicLookupRouteDefinition.get(opt))
                .then(function (data) {
                data.data = self.getResponseData(embed, data.data);
                resolve(data);
            }, function (data) {
                reject(data);
            });
        });
    };
    return BaasicLookupClient;
}());
BaasicLookupClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(membership_1.TYPES.BaasicLookupRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [membership_1.BaasicLookupRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicLookupClient);
exports.BaasicLookupClient = BaasicLookupClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 *@module baasicLookupRouteDefinition
 * @description Baasic Lookup Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Lookup Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicLookupRouteDefinition = (function (_super) {
    __extends(BaasicLookupRouteDefinition, _super);
    function BaasicLookupRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        /**
        * Get route with route and query parameters.
        **/
        _this.getRoute = 'lookups/{?embed,fields}';
        return _this;
    }
    /**
     * Parses get route which can be expanded with additional options. Supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicLookupRouteService.get(data);
     **/
    BaasicLookupRouteDefinition.prototype.get = function (data) {
        return _super.prototype.baseCreate.call(this, this.getRoute, data);
    };
    return BaasicLookupRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicLookupRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicLookupRouteDefinition);
exports.BaasicLookupRouteDefinition = BaasicLookupRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicPasswordRecoveryClient
 * @description Baasic Password Recovery Client provides an easy way to consume Baasic Password Recovery REST API end-points. In order to obtain needed routes `baasicPasswordRecoveryClient` uses `baasicPasswordRecoveryRouteDefinition`.
*/

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var membership_1 = __webpack_require__(9);
var BaasicPasswordRecoveryClient = (function () {
    function BaasicPasswordRecoveryClient(baasicPasswordRecoveryRouteDefinition, baasicApiClient) {
        this.baasicPasswordRecoveryRouteDefinition = baasicPasswordRecoveryRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicPasswordRecoveryClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicPasswordRecoveryRouteDefinition`.
         * @method
         * @example baasicPasswordRecoveryClient.routeDefinition.requestReset(data);
         **/
        get: function () {
            return this.baasicPasswordRecoveryRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the password recovery requestReset action is completed. This action initiates the password recovery process for the user.
     * @method
     * @param data A password recovery object which contains parameters required for the password retrieval request.
     * @example baasicPasswordRecoveryClient.requestReset({
                    challengeIdentifier : '<challenge-identifier>',
                    challengeResponse : '<challenge-response>',
                    recoverUrl : '<recover-url>',
                    username : '<username>'
                })
                .then(function () {
                    // perform success action here
                },
                 function (data) {
                    // perform error handling here
                })
                .finally (function () {});
     */
    BaasicPasswordRecoveryClient.prototype.requestReset = function (data) {
        return this.baasicApiClient.post(this.baasicPasswordRecoveryRouteDefinition.passwordRecovery(), data);
    };
    /**
     * Returns a promise that is resolved once the password reset action is completed. This updates user's password selection.
     * @method
     * @param data Password recovery object used to update user's current password selection.
     * @example baasicPasswordRecoveryClient.reset({
                    newPassword : '<new-password>',
                    passwordRecoveryToken : '<password-recovery-token>'
                })
                .then(function () {
                    // perform success action here
                },
                 function (data) {
                    // perform error handling here
                })
                .finally (function () {});
     */
    BaasicPasswordRecoveryClient.prototype.reset = function (data) {
        return this.baasicApiClient.put(this.baasicPasswordRecoveryRouteDefinition.passwordRecovery(), data);
    };
    return BaasicPasswordRecoveryClient;
}());
BaasicPasswordRecoveryClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(membership_1.TYPES.BaasicPasswordRecoveryRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [membership_1.BaasicPasswordRecoveryRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicPasswordRecoveryClient);
exports.BaasicPasswordRecoveryClient = BaasicPasswordRecoveryClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicPasswordRecoveryRouteDefinition
 * @description Baasic Password Recovery Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Password Recovery Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicPasswordRecoveryRouteDefinition = (function (_super) {
    __extends(BaasicPasswordRecoveryRouteDefinition, _super);
    function BaasicPasswordRecoveryRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        /**
        * Password recovery route with route and query parameters.
        **/
        _this.passwordRecoveryRoute = 'recover-password';
        return _this;
    }
    /**
     * Parses recover-password route, recover-password route doesn't expose any additional properties.
     * @method
     * @example baasicPasswordRecoveryRouteDefinition.passwordRecovery();
     **/
    BaasicPasswordRecoveryRouteDefinition.prototype.passwordRecovery = function () {
        return _super.prototype.baseCreate.call(this, this.passwordRecoveryRoute, {});
    };
    return BaasicPasswordRecoveryRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicPasswordRecoveryRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicPasswordRecoveryRouteDefinition);
exports.BaasicPasswordRecoveryRouteDefinition = BaasicPasswordRecoveryRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
*/ 


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicPermissionClient
 * @description Baasic Role Client provides an easy way to consume Baasic Role REST API end-points. In order to obtain needed routes `baasicPermissionClient` uses `baasicPermissionRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var httpApi_1 = __webpack_require__(3);
var membership_1 = __webpack_require__(9);
var contracts_1 = __webpack_require__(1);
var BaasicPermissionClient = (function () {
    function BaasicPermissionClient(baasicPermissionRouteDefinition, baasicApiClient, application) {
        this.baasicPermissionRouteDefinition = baasicPermissionRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        this.application = application;
        this.utility = new common_1.Utility();
        this.permissionHash = {};
    }
    Object.defineProperty(BaasicPermissionClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicPermissionRouteDefinition`.
         * @method
         * @example baasicPermissionClient.routeDefinition.get().expand(expandObject);
         **/
        get: function () {
            return this.baasicPermissionRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of role resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has beend performed.
     * @example baasicPermissionClient.find({
                    section : '<access-section>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicPermissionClient.prototype.find = function (section, options) {
        return this.baasicApiClient.get(this.baasicPermissionRouteDefinition.find(section, options));
    };
    /**
    * Returns a promise that is resolved once the getActions action has been performed. Success response returns a list of access policies that match the specified search parameters.
    * @method
    * @example
            baasicPermissionClient.getActions({
            search : '<search-phrase>'
            })
            .success(function (collection) {
            // perform success action here
            })
            .error(function (response, status, headers, config) {
            // perform error handling here
            });
    **/
    BaasicPermissionClient.prototype.getActions = function (options) {
        return this.baasicApiClient.get(this.baasicPermissionRouteDefinition.getActions(options));
    };
    /**
    * Returns a promise that is resolved once the getPermissionSubjects action has been performed. Success response returns a list of matching user and role resources.
    * @method
    * @example
            baasicPermissionClient.getPermissionSubjects({
            orderBy : '<field>',
            orderDirection : '<asc|desc>',
            search : '<search-phrase>'
            })
            .success(function (collection) {
            // perform success action here
            })
            .error(function (response, status, headers, config) {
            // perform error handling here
            });
    **/
    BaasicPermissionClient.prototype.getPermissionSubjects = function (options) {
        var queue = [];
        var resolvedTasks = 0;
        var self = this;
        queue.push(this.getUsers(options)
            .then(function (collection) {
            var membCollection = [];
            collection.data.item.forEach(function (element) {
                var membershipItem = {
                    name: element.userName,
                    role: ''
                };
                membCollection.push(self.utility.extend(membershipItem, element));
            });
            return membCollection;
        }, function (data) {
            if (data.status !== undefined && data.status !== 403) {
                return data;
            }
        }));
        queue.push(self.getRoles(options)
            .then(function (collection) {
            var membCollection = [];
            collection.data.item.forEach(function (element) {
                var membershipItem = {
                    name: element.name,
                    roleName: element.name,
                    userName: ''
                };
                membCollection.push(self.utility.extend(membershipItem, element));
            });
            return membCollection;
        }, function (data) {
            if (data.status !== undefined && data.status !== 403) {
                return data;
            }
        }));
        return Promise.all(queue).then(function (membershipCollection) {
            return self.utility.OrderByArray([].concat.apply([], membershipCollection), 'name');
        });
    };
    /**
     * Returns a promise that is resolved once the create action has been performed; this action creates a new permission resource.
     * @method
     * @example
            // readAction and updateActions are resources previously fetched using getActions.
            baasicPermissionClient.create({
            actions : [readAction, updateAction],
            section : '<section-name>',
            userName : '<userName>'
            })
            .success(function (data) {
            // perform success action here
            })
            .error(function (response, status, headers, config) {
            // perform error handling here
            });
    **/
    BaasicPermissionClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicPermissionRouteDefinition.create(), data);
    };
    /**
    * Returns a promise that is resolved once the remove action has been performed. If the action is successfully complete, an access policy assigned to the specified role and section will be removed.
    * @method
    * @example
            // permission is a resource previously fetched using get action.
            baasicPermissionClient.remove(permission)
            .success(function (data) {
            // perform success action here
            })
            .error(function (response, status, headers, config) {
            // perform error handling here
            });
   **/
    BaasicPermissionClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicPermissionRouteDefinition.remove(data));
    };
    /**
    * Creates a new in-memory permission object.
    * @method
    * @example
            // action collection are lookup items fetched using baasicLookupClient.get action.
            var actionCollection;
            return baasicLookupClient.get()
            .success(function (data) {
            actionCollection = data;
            })
            .error(function (data, status, headers, config) {});
            // subjectItem is an item fetched using baasicPermissionClient.getPermissionSubjects action.
            baasicPermissionClient.createPermission('<section-Name>', actionCollection, subjectItem);
   **/
    BaasicPermissionClient.prototype.createPermission = function (section, actions, membershipItem) {
        var _this = this;
        var permission = {
            dirty: true,
            role: membershipItem.roleName,
            userName: membershipItem.userName,
            section: section,
            actions: []
        };
        actions.forEach(function (element) {
            var newAction = {
                checked: false
            };
            _this.utility.extend(newAction, element);
            permission.actions.push(newAction);
        });
        return permission;
    };
    /**
    * Finds a permission in a given permission collection.
    * @method
    * @example baasicPermissionClient.findPermission(permissionObj, permissionCollection);
   **/
    BaasicPermissionClient.prototype.findPermission = function (permission, permissionCollection) {
        for (var i = 0; i < permissionCollection.length; i++) {
            var item = permissionCollection[i];
            if (item.section === permission.section &&
                ((!this.isEmpty(item.role) && !this.isEmpty(permission.role) && item.role === permission.role) ||
                    (!this.isEmpty(item.userName) && !this.isEmpty(permission.userName) && item.userName === permission.userName))) {
                return item;
            }
        }
        return undefined;
    };
    /**
    * Checks if a permission object exists in a given permission collection.
    * @method
    * @example baasicPermissionClient.exists(permissionObj, permissionCollection);
   **/
    BaasicPermissionClient.prototype.exists = function (permission, permissionCollection) {
        return this.findPermission(permission, permissionCollection) !== undefined;
    };
    /**
    * Returns a promise that is resolved once the togglePermission action has been completed. The action will internally either call a `remove` or `create` action based on given criteria.
    * @method
    * @example baasicPermissionClient.togglePermission(permissionObj, action);
    **/
    BaasicPermissionClient.prototype.togglePermission = function (permission, action) {
        var requestPermission = {
            actions: []
        };
        this.utility.extend(requestPermission, permission);
        requestPermission.actions = [action];
        var operation;
        if (!action.checked) {
            operation = this.remove;
        }
        else {
            operation = this.create;
        }
        return operation.call(this, requestPermission);
    };
    /**
    * Fetches and returns and object containing all existing module permissions.
    * @method
    * @example baasicPermissionClient.getModulePermissions('<section-name>');
    **/
    BaasicPermissionClient.prototype.getModulePermissions = function (section) {
        var permission = {
            update: this.hasPermission(this.firstCharToLowerCase(section) + '.update'),
            create: this.hasPermission(this.firstCharToLowerCase(section) + '.create'),
            remove: this.hasPermission(this.firstCharToLowerCase(section) + '.delete'),
            read: this.hasPermission(this.firstCharToLowerCase(section) + '.read'),
            full: this.hasPermission(this.firstCharToLowerCase(section) + '.full')
        };
        return permission;
    };
    BaasicPermissionClient.prototype.resetPermissions = function () {
        this.permissionHash[this.application.getApiKey()] = {};
    };
    /**
    * Checks if current user has permissions to perform a certain action. To optimize performance this information is cached and can be reset using the resetPermissions action. Permissions cache should be reset when updated user information is set.
    * @method
    * @example baasicAuthorizationService.hasPermission("<baasic-Section>.<action>");
    **/
    BaasicPermissionClient.prototype.hasPermission = function (authorization) {
        var apiKey = this.application.getApiKey();
        //Initialize application permissions
        if (!this.permissionHash.hasOwnProperty(apiKey)) {
            this.resetPermissions();
        }
        if (this.permissionHash[apiKey].hasOwnProperty(authorization)) {
            return this.permissionHash[apiKey][authorization];
        }
        var userContainer = this.application.getUser();
        if (userContainer === undefined) {
            return;
        }
        var user = userContainer.user;
        var hasPermission = false;
        if (user.permissions) {
            var tokens = authorization.split('.');
            if (tokens.length > 0) {
                var section = tokens[0];
                var sectionPermissions = user.permissions[section];
                if (sectionPermissions) {
                    if (tokens.length > 1) {
                        var action = tokens[1].toLowerCase();
                        for (var i = 0; i < sectionPermissions.length; i++) {
                            if (sectionPermissions[i].toLowerCase() === action) {
                                hasPermission = true;
                                break;
                            }
                        }
                    }
                    else {
                        hasPermission = true;
                    }
                }
            }
        }
        this.permissionHash[apiKey][authorization] = hasPermission;
        return hasPermission;
    };
    BaasicPermissionClient.prototype.isEmpty = function (data) {
        return data === undefined || data === null || data === '';
    };
    BaasicPermissionClient.prototype.getRoles = function (options) {
        return this.baasicApiClient.get(this.baasicPermissionRouteDefinition.getRoles(options));
    };
    BaasicPermissionClient.prototype.getUsers = function (options) {
        return this.baasicApiClient.get(this.baasicPermissionRouteDefinition.getUsers(options));
    };
    BaasicPermissionClient.prototype.firstCharToLowerCase = function (text) {
        return text.replace(/^./, function (char) {
            return char.toLowerCase();
        });
    };
    return BaasicPermissionClient;
}());
BaasicPermissionClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(membership_1.TYPES.BaasicPermissionRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __param(2, inversify_1.inject(contracts_1.TYPES.IBaasicApp)),
    __metadata("design:paramtypes", [membership_1.BaasicPermissionRouteDefinition,
        httpApi_1.BaasicApiClient, Object])
], BaasicPermissionClient);
exports.BaasicPermissionClient = BaasicPermissionClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
*/ 


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
/* globals module */
/**
 * @module baasicLoginRouteDefinition
 * @description Baasic Login Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Login Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicPermissionRouteDefinition = (function (_super) {
    __extends(BaasicPermissionRouteDefinition, _super);
    function BaasicPermissionRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        /**
        * Find route with route and query parameters.
        **/
        _this.findRoute = 'permissions/sections/{section}/{?searchQuery,sort,embed,fields}';
        /**
        * Get actions route with route and query parameters.
        **/
        _this.getActionsRoute = 'permissions/actions/{?searchQuery,sort,embed,fields}';
        /**
        * Get roles route with route and query parameters.
        **/
        _this.getRolesRoute = 'lookups/roles/{?searchQuery,page,rpp,sort,embed,fields}';
        /**
        * Get users route with route and query parameters.
        **/
        _this.getUsersRoute = 'users/{?searchQuery,page,rpp,sort,embed,fields}';
        /**
        * Create route with route and query parameters.
        **/
        _this.createRoute = 'permissions/';
        /**
        * Remove route with route and query parameters.
        **/
        _this.removeRoute = 'permissions/sections/{section}/actions/{action}/{{operation}}/{{subject}}/';
        return _this;
    }
    /**
    * Parses find route which can be expanded with additional options. Supported items are:
    * - `section` - Section abbreviation which identifies part of the application for which security privileges can be retrieved and managed.
    * - `searchQuery` - A string value used to identify access policy resources using the phrase search.
    * - `sort` - A string used to set the access policy property to sort the result collection by.
    * @method
    * @example
baasicPermissionRouteDefinition.find(
    'sectionName',
    {searchQuery: '<search-phrase>'}
);
    **/
    BaasicPermissionRouteDefinition.prototype.find = function (section, options) {
        var opt = options || {};
        return _super.prototype.baseFind.call(this, this.findRoute, this.utility.extend({ section: section }, opt));
    };
    /**
    * Parses getActions route which can be expanded with additional options. Supported items are:
    * - `searchQuery` - A string value used to identify access action resources using the phrase search.
    * - `sort` - A string used to set the access action property to sort the result collection by.
    * @method
    * @example
baasicPermissionRouteDefinition.getActions(
{searchQuery: '<search-phrase>'}
);
    **/
    BaasicPermissionRouteDefinition.prototype.getActions = function (options) {
        var opt = options || {};
        return _super.prototype.baseFind.call(this, this.getActionsRoute, opt);
    };
    /**
    * Parses getRoles route which can be expanded with additional options. Supported items are:
    * - `searchQuery` - A string value used to identify access policy resources using the phrase search.
    * - `sort` - A string used to set the access policy property to sort the result collection by.
    * - `page` - A value used to set the page number, i.e. to retrieve certain access policy subset from the storage.
    * - `rpp` - A value used to limit the size of result set per page.
    * @method
    * @example
baasicPermissionRouteDefinition.getRoles(
{searchQuery: '<search-phrase>'}
);
    **/
    BaasicPermissionRouteDefinition.prototype.getRoles = function (options) {
        var opt = options || {};
        return _super.prototype.baseFind.call(this, this.getRolesRoute, opt);
    };
    /**
    * Parses getUsers route which can be expanded with additional options. Supported items are:
    * - `searchQuery` - A string value used to identify access policy resources using the phrase search.
    * - `sort` - A string used to set the access policy property to sort the result collection by.
    * - `page` - A value used to set the page number, i.e. to retrieve certain access policy subset from the storage.
    * - `rpp` - A value used to limit the size of result set per page.
    * @method
    * @example
baasicPermissionRouteDefinition.getRoles(
{searchQuery: '<search-phrase>'}
);
    **/
    BaasicPermissionRouteDefinition.prototype.getUsers = function (options) {
        var opt = options || {};
        return _super.prototype.baseFind.call(this, this.getUsersRoute, opt);
    };
    /**
    * Parses create permission route; this URI template doesn't expose any additional properties.
    * @method
    * @example baasicPermissionRouteDefinition.create({});
    **/
    BaasicPermissionRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute);
    };
    /**
     * Returns a promise that is resolved once the remove permission action has been performed. This action will remove a permission from the system, if completed successfully.
     * @param data A permission object used to delete specified permission resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @method
     * @example // Permission is a resource previously fetched using get action.
                    baasicPermissionClient.remove(permission)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicPermissionRouteDefinition.prototype.remove = function (data) {
        var params = _super.prototype.deleteParams.call(this, data);
        var action = data.actions[0];
        var operation = '';
        var subject = '';
        if (data.role && data.role.length > 0) {
            operation = 'Role';
            subject = data.role;
        }
        else {
            operation = 'User';
            subject = data.userName;
        }
        var route = this.removeRoute.replace('{{operation}}', operation.toLowerCase() + 's').replace('{{subject}}', subject);
        return _super.prototype.baseDelete.call(this, route, data, null, 'delete' + action.abrv + operation);
    };
    return BaasicPermissionRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicPermissionRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicPermissionRouteDefinition);
exports.BaasicPermissionRouteDefinition = BaasicPermissionRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicRegisterClient
 * @description Baasic Register Client provides an easy way to consume Baasic Application Registration REST API end-points. In order to obtain needed routes `baasicRegisterClient` uses `baasicRegisterRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var contracts_1 = __webpack_require__(1);
var membership_1 = __webpack_require__(9);
var BaasicRegisterClient = (function () {
    function BaasicRegisterClient(baasicRegisterRouteDefinition, baasicApiClient, tokenHandler) {
        this.baasicRegisterRouteDefinition = baasicRegisterRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        this.tokenHandler = tokenHandler;
    }
    Object.defineProperty(BaasicRegisterClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicRegisterRouteDefinition`.
         * @method
         * @example baasicRegisterClient.routeDefinition.get();
         **/
        get: function () {
            return this.baasicRegisterRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the register create has been performed. This action will create a new user if completed successfully. Created user is not approved immediately, instead an activation e-mail is sent to the user.
     * @param data A user account object that needs to be inserted into the system.
     * @method
     * @example baasicRegisterClient.create({
                    activationUrl : '<activation-url>',
                    challengeIdentifier : '<challenge-identifier>',
                    challengeResponse : '<challenge-response>',
                    confirmPassword : '<confirm-password>',
                    email : '<email>',
                    password : '<password>',
                    username : '<username>'
                })
                .success(function (data) {
                    // perform success actions here
                }).error(function (data, status) {
                    // perform error handling here
                })
                .finally (function () {});
     **/
    BaasicRegisterClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicRegisterRouteDefinition.create(), this.baasicRegisterRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the account activation action has been performed; this action activates a user account and success response returns the token resource.
     * @param data Security code which uniquely identifies user account that needs to be activated.
     * @returns A promise that is resolved once the account activation action has been performed.
     * @method
     * @example baasicRegisterClient.activate({
                   activationToken : '<activation-token>'
               })
               .then(function (data) {
                   // perform success actions here
               },
                function (data, status) {
                   // perform error handling here
               })
               .finally (function () {});
    **/
    BaasicRegisterClient.prototype.activate = function (data) {
        var self = this;
        var promise = this.baasicApiClient.put(this.baasicRegisterRouteDefinition.activate(data), data);
        promise.then(function (data) {
            var token = {
                token: data.data.access_token,
                expires_in: data.data.expires_in,
                sliding_window: data.data.sliding_window,
                tokenUrl: data.data.access_url_token,
                type: data.data.token_type
            };
            self.tokenHandler.store(token);
            return data;
        });
        return promise;
    };
    return BaasicRegisterClient;
}());
BaasicRegisterClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(membership_1.TYPES.BaasicRegisterRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __param(2, inversify_1.inject(contracts_1.TYPES.ITokenHandler)),
    __metadata("design:paramtypes", [membership_1.BaasicRegisterRouteDefinition,
        httpApi_1.BaasicApiClient, Object])
], BaasicRegisterClient);
exports.BaasicRegisterClient = BaasicRegisterClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
*/ 


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicRegisterRouteDefinition
 * @description Baasic Register Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Register Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
*/

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicRegisterRouteDefinition = (function (_super) {
    __extends(BaasicRegisterRouteDefinition, _super);
    function BaasicRegisterRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        /**
        * Create route with route and query parameters.
        **/
        _this.createRoute = 'register';
        /**
        * Activate route with route and query parameters.
        **/
        _this.activateRoute = 'register/activate/{activationToken}/';
        return _this;
    }
    /**
     * Parses register route, this route doesn't support any additional properties.
     * @method
     * @example baasicRegisterRouteDefinition.create();
     **/
    BaasicRegisterRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses activation route; route should be expanded with the `activationToken` which uniquely identifies the user account that needs to be activated.
     * @method
     * @param data Security code which uniquely identifies user account that needs to be activated.
     * @example baasicRegisterRouteDefinition.activate({activationToken: '<activation-token>'});
     **/
    BaasicRegisterRouteDefinition.prototype.activate = function (data) {
        var params = this.modelMapper.getParams(data, undefined, 'activationToken');
        return _super.prototype.baseCreate.call(this, this.activateRoute, params);
    };
    return BaasicRegisterRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicRegisterRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicRegisterRouteDefinition);
exports.BaasicRegisterRouteDefinition = BaasicRegisterRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.  - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
*/ 


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicRoleClient
 * @description Baasic Role Client provides an easy way to consume Baasic Role REST API end-points. In order to obtain needed routes `baasicRoleClient` uses `baasicRoleRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var membership_1 = __webpack_require__(9);
var BaasicRoleClient = (function () {
    function BaasicRoleClient(baasicRoleRouteDefinition, baasicApiClient) {
        this.baasicRoleRouteDefinition = baasicRoleRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicRoleClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicRoleRouteDefinition`.
         * @method
         * @example baasicRoleClient.routeDefinition.get().expand(expandObject);
         **/
        get: function () {
            return this.baasicRoleRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of role resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has beend performed.
     * @example baasicRoleClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicRoleClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicRoleRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified role resource.
     * @param id Role unique indentifer.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @method
     * @example baasicRoleClient.get('<role-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicRoleClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicRoleRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create action has been performed; this action creates a role.
     * @method
     * @param data A role object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create action has beend performed.
     * @example baasicRoleClient.create({
                    description : '<description>',
                    name : '<name>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicRoleClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicRoleRouteDefinition.create(), this.baasicRoleRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update role action has been performed; this action updates a role. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicRoleClient` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(role);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data A role object used to update specified role resource.
     * @returns A promise that is resolved once the update role action has been performed.
     * @example // role is a resource previously fetched using get action.
                    role.name = '<new-name>';
                    baasicRoleClient.update(role)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicRoleClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicRoleRouteDefinition.update(data), this.baasicRoleRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove role action has been performed. This action will remove a role from the system, if completed successfully. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicRoleClient` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(role);
     * let uri = params['model'].links('delete').href; ```
     * @param data A role object used to delete specified role resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @method
     * @example // Role is a resource previously fetched using get action.
                    baasicRoleClient.remove(role)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicRoleClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicRoleRouteDefinition.delete(data));
    };
    return BaasicRoleClient;
}());
BaasicRoleClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(membership_1.TYPES.BaasicRoleRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [membership_1.BaasicRoleRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicRoleClient);
exports.BaasicRoleClient = BaasicRoleClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
*/ 


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicRoleRouteDefinition
 * @description Baasic Role Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Role Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicRoleRouteDefinition = (function (_super) {
    __extends(BaasicRoleRouteDefinition, _super);
    function BaasicRoleRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        /**
        * Find route with route and query parameters.
        **/
        _this.findRoute = 'lookups/roles/{?searchQuery,page,rpp,sort,embed,fields}';
        /**
        * Get route with route and query parameters.
        **/
        _this.getRoute = 'lookups/roles/{id}/{?embed,fields}';
        /**
        * Create route with route and query parameters.
        **/
        _this.createRoute = 'lookups/roles';
        /**
        * Update route with route and query parameters.
        **/
        _this.updateRoute = 'lookups/roles/{id}';
        /**
        * Remove route with route and query parameters.
        **/
        _this.removeRoute = 'lookups/roles/{id}';
        return _this;
    }
    /**
     * Parses find role route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify role resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain role subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the role property to sort the result collection by.
     * @method
     * @param options Query resource options object.
     * @example baasicRoleRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicRoleRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get role route which should be expanded with the role Id. Note that the role Id is the primary key of the role.
     * @method
     * @param id Role unique indentifer.
     * @param options Query resource options object.
     * @example baasicRoleRouteDefinition.get().expand({id: '<role-id>'});
     **/
    BaasicRoleRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create role route; this URI template does not expose any additional options.
     * @method
     * @example baasicRoleRouteDefinition.create();
     **/
    BaasicRoleRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update role route.
     * @method
     * @param data A role object used to update specified role resource.
     * @example baasicRoleRouteDefinition.update(data);
     */
    BaasicRoleRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete role route.
     * @method
     * @param data A role object used to delete specified role resource.
     * @example baasicRoleRouteDefinition.delete(data);
     */
    BaasicRoleRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.removeRoute, data);
    };
    return BaasicRoleRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicRoleRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicRoleRouteDefinition);
exports.BaasicRoleRouteDefinition = BaasicRoleRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
*/ 


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserClient
 * @description Baasic User Client provides an easy way to consume Baasic User REST API end-points. In order to obtain needed routes `baasicUserClient` uses `baasicUserRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var membership_1 = __webpack_require__(9);
var BaasicUserClient = (function () {
    function BaasicUserClient(baasicUserRouteDefinition, baasicUserSocialLoginClient, baasicApiClient) {
        this.baasicUserRouteDefinition = baasicUserRouteDefinition;
        this.baasicUserSocialLoginClient = baasicUserSocialLoginClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicUserClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicUserRouteDefinition`.
         * @method
         * @example baasicUserClient.routeDefinition.get();
         **/
        get: function () {
            return this.baasicUserRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicUserClient.prototype, "socialLogin", {
        get: function () {
            return this.baasicUserSocialLoginClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the exists action has been performed. This action checks if user exists in the application.
     * @method
     * @param username A username which uniquely identifies an application user.
     * @example baasicUserClient.exists('<username>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicUserClient.prototype.exists = function (username, options) {
        return this.baasicApiClient.get(this.baasicUserRouteDefinition.exists(username, options));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of user resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @example baasicUserClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicUserClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicUserRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified user resource.
     * @method
     * @param id A username or id which uniquely identifies an application user whose account information needs to be retrieved.
     * @param options Query resources options.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicUserClient.get({
                    username : '<username>',
                    embed : '<embedded-resource>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicUserClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicUserRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create user action has been performed; this action creates a new user.
     * @method
     * @param data An user object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create user action has been performed.
     * @example baasicUserClient.create({
                    confirmPassword : '<password>',
                    email : '<email>',
                    password : '<password>',
                    sendEmailNotification : true,
                    username : '<username>',
                    roles: ['<role-name>'],
                    additionalProperty: '<additional-property>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicUserClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicUserRouteDefinition.create(), this.baasicUserRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update user action has been performed; this action updates a user. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(user);
     * let uri = params['model'].links('put').href;
     * ```
     * @param data A user object used to update specified user resource.
     * @returns A promise that is resolved once the update user action has been performed.
     * @method
     * @example // user is a resource previously fetched using get action.
                    user.roles = ['<role-name>', '<new-role-name>'];
                    user.email = '<new-email>';
                    baasicUserClient.update(user)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicUserClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicUserRouteDefinition.update(data), this.baasicUserRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove user action has been performed. This action will remove a user from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(user);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data  A user object used to delete specified user resource.
     * @returns A promise that is resolved once the remove user action has been performed.
     * @example // user is a resource previously fetched using get action.
                    baasicUserClient.remove(user)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicUserClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicUserRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the unlock user action has been performed. This action will unlock the user resource which was previously locked either manually or automatically by the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(user);
     * let uri = params['model'].links('unlock').href;
     * ```
     * @method
     * @param data A user object used to unlock specified user resource.
     * @returns A promise that is resolved once the unlock user action has been performed.
     * @example //  user is a resource previously fetched using get action.
                        baasicUserClient.unlock(user)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                // perform error handling here
                            });
     **/
    BaasicUserClient.prototype.unlock = function (data) {
        return this.baasicApiClient.put(this.baasicUserRouteDefinition.unlock(data), data);
    };
    /**
     * Returns a promise that is resolved once the lock user action has been performed. This action will lock the user resource out of the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(user);
     * let uri = params['model'].links('lock').href;
     * ```
     * @method
     * @param data A user object used to lock specified user resource.
     * @returns A promise that is resolved once the lock user action has been performed.
     * @example // user is a resource previously fetched using get action.
                    baasicUserClient.lock(user)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicUserClient.prototype.lock = function (data) {
        return this.baasicApiClient.put(this.baasicUserRouteDefinition.lock(data), data);
    };
    /**
     * Returns a promise that is resolved once the approve user action has been performed. This action will mark the user resource as 'approved' in the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(user);
     * let uri = params['model'].links('approve').href;
     * ```
     * @method
     * @param data A user object used to approve specified user resource.
     * @returns A promise that is resolved once the approve user action has been performed.
     * @example // user is a resource previously fetched using get action.
                    baasicUserClient.approve(user)
                        .then(function (data) {
                            // perform success action here
                        })
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicUserClient.prototype.approve = function (data) {
        return this.baasicApiClient.put(this.baasicUserRouteDefinition.approve(data), data);
    };
    /**
     * Returns a promise that is resolved once the disapprove user action has been performed. This action will mark the user resource as 'not approved' in the system. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(user);
     * let uri = params['model'].links('disapprove').href;
     * ```
     * @method
     * @example // user is a resource previously fetched using get action.
                    baasicUserClient.disapprove(user).then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicUserClient.prototype.disapprove = function (data) {
        return this.baasicApiClient.put(this.baasicUserRouteDefinition.disapprove(data), data);
    };
    /**
     * Returns a promise that is resolved once the changePassword action has been performed. This action will update user's password selection.
     * @method
     * @param username A username or id which uniquely identifies user resource.
     * @param data A new password object used to update specified user password resource.
     * @returns A promise that is resolved once the changedPassword action has been performed.
     * @example baasicUserClient.changePassword('<username>', {
                    newPassword : '<new-password>',
                    sendMailNotification : false
                })
                .then(function () {
                    // perform success action here
                },
                 function (data, status, headers, config) {
                    // perform error handling here
                })
                .finally (function () {});
     **/
    BaasicUserClient.prototype.changePassword = function (username, data) {
        return this.baasicApiClient.put(this.baasicUserRouteDefinition.changePassword(username), data);
    };
    return BaasicUserClient;
}());
BaasicUserClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(membership_1.TYPES.BaasicUserRouteDefinition)),
    __param(1, inversify_1.inject(membership_1.TYPES.BaasicUserSocialLoginClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [membership_1.BaasicUserRouteDefinition,
        membership_1.BaasicUserSocialLoginClient,
        httpApi_1.BaasicApiClient])
], BaasicUserClient);
exports.BaasicUserClient = BaasicUserClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserRouteDefinition
 * @description Baasic User Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var membership_1 = __webpack_require__(9);
var contracts_1 = __webpack_require__(1);
var BaasicUserRouteDefinition = (function (_super) {
    __extends(BaasicUserRouteDefinition, _super);
    function BaasicUserRouteDefinition(appOptions, baasicUserSocialLoginRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicUserSocialLoginRouteDefinition = baasicUserSocialLoginRouteDefinition;
        /**
        * Find route with route and query parameters.
        **/
        _this.findRoute = 'users/{?searchQuery,page,rpp,sort,embed,fields}';
        /**
        * Get route with route and query parameters.
        **/
        _this.getRoute = 'users/{username}/{?embed,fields}';
        /**
        * Create route with route and query parameters.
        **/
        _this.createRoute = 'users';
        /**
        * Update route with route and query parameters.
        **/
        _this.updateRoute = 'users/{id}';
        /**
        * Delete route with route and query parameters.
        **/
        _this.deleteRoute = 'users/{id}';
        /**
        * Exists route with route and query parameters.
        **/
        _this.existsRoute = 'users/{username}/exists/';
        /**
        * Change password route with route and query parameters.
        **/
        _this.changePasswordRoute = 'users/{username}/change-password';
        /**
        * Unlock route with route and query parameters.
        **/
        _this.unlockRoute = 'users/{id}/unlock';
        /**
        * Lock route with route and query parameters.
        **/
        _this.lockRoute = 'users/{id}/lock';
        /**
        * Approve route with route and query parameters.
        **/
        _this.approveRoute = 'users/{id}/approve';
        /**
        * Disapprove route with route and query parameters.
        **/
        _this.disapproveRoute = 'users/{id}/disapprove';
        return _this;
    }
    Object.defineProperty(BaasicUserRouteDefinition.prototype, "socialLogin", {
        get: function () {
            return this.baasicUserSocialLoginRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find user route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing user properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain user subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the user property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicUserRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicUserRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get user route which must be expanded with the username of the previously created user resource in the system. Additional expand supported items are:
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicUserRouteDefinition.get({username: '<username>'})
     **/
    BaasicUserRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options, 'username');
    };
    /**
     * Parses create user route, this URI template does not expose any additional options.
     * @method
     * @example baasicUserRouteDefinition.create();
     **/
    BaasicUserRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    BaasicUserRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    BaasicUserRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
     * Parses user exists route; URI template should be expanded with the username whose availability you'd like to check.
     * @method
     * @param username A username which uniquely identifies an application user.
     * @example baasicUserRouteDefinition.exists({username: '<username>'});
     **/
    BaasicUserRouteDefinition.prototype.exists = function (username, options) {
        return _super.prototype.baseGet.call(this, this.existsRoute, username, options, 'username');
    };
    /**
     * Parses change password route, URI template should be expanded with the username of the user resource whose password should be updated.
     * @method
     * @param username A username or id which uniquely identifies user resource.
     * @example baasicUserRouteDefinition.changePassword({username: '<username>'});
     **/
    BaasicUserRouteDefinition.prototype.changePassword = function (username) {
        return _super.prototype.baseUpdate.call(this, this.changePasswordRoute, { username: username });
    };
    BaasicUserRouteDefinition.prototype.unlock = function (data) {
        return _super.prototype.baseUpdate.call(this, this.unlockRoute, data, null, 'unlock');
    };
    BaasicUserRouteDefinition.prototype.lock = function (data) {
        return _super.prototype.baseUpdate.call(this, 'users/{id}/lock', data, null, 'lock');
    };
    BaasicUserRouteDefinition.prototype.approve = function (data) {
        return _super.prototype.baseUpdate.call(this, this.approveRoute, data, null, 'approve');
    };
    BaasicUserRouteDefinition.prototype.disapprove = function (data) {
        return _super.prototype.baseUpdate.call(this, this.disapproveRoute, data, null, 'disapprove');
    };
    return BaasicUserRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicUserRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(membership_1.TYPES.BaasicUserSocialLoginRouteDefinition)),
    __metadata("design:paramtypes", [Object, membership_1.BaasicUserSocialLoginRouteDefinition])
], BaasicUserRouteDefinition);
exports.BaasicUserRouteDefinition = BaasicUserRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserSocialLoginClient
 * @description Baasic User Social Login Client provides an easy way to consume Baasic User REST API end-points. In order to obtain needed routes `baasicUserSocialLoginClient` uses `baasicUserSocialLoginRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var membership_1 = __webpack_require__(9);
var BaasicUserSocialLoginClient = (function () {
    function BaasicUserSocialLoginClient(baasicUserSocialLoginRouteDefinition, baasicApiClient) {
        this.baasicUserSocialLoginRouteDefinition = baasicUserSocialLoginRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns a list user resource connected social login providers.
     * @param username A username or id which uniquely identifies user resource whose social login connections need to be retrieved.
     * @returns A promise that is resolved once the get action has been performed.
     * @method
     * @example baasicUserSocialLoginClient.get('<username>')
                    .then(function (collection) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicUserSocialLoginClient.prototype.get = function (username) {
        return this.baasicApiClient.get(this.baasicUserSocialLoginRouteDefinition.get(username));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action removes the user resource social login connection from the specified provider.
     * @param username A username or id which uniquely identifies user resource whose social login connection needs to be removed.
     * @param provider A value which uniquely identifies provider from which the user resource needs to be disconnected.
     * @returns A promise that is resolved once the remove action has been performed.
     * @method
     * @example baasicUserSocialLoginClient.remove('<username>', '<provider>')
                    .then(function (collection) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicUserSocialLoginClient.prototype.remove = function (username, provider) {
        return this.baasicApiClient.delete(this.baasicUserSocialLoginRouteDefinition.remove(username, provider));
    };
    return BaasicUserSocialLoginClient;
}());
BaasicUserSocialLoginClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(membership_1.TYPES.BaasicUserSocialLoginRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [membership_1.BaasicUserSocialLoginRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicUserSocialLoginClient);
exports.BaasicUserSocialLoginClient = BaasicUserSocialLoginClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserSocialLoginRouteDefinition
 * @description Baasic User Social Login Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicUserSocialLoginRouteDefinition = (function (_super) {
    __extends(BaasicUserSocialLoginRouteDefinition, _super);
    function BaasicUserSocialLoginRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        /**
        * Get route with route and query parameters.
        **/
        _this.getRoute = 'users/{username}/social-login';
        /**
        * Remove route with route and query parameters.
        **/
        _this.removeRoute = 'users/{username}/social-login/{provider}';
        return _this;
    }
    /**
     * Parses get social login route, URI template should be expanded with the username of the user resource whose social login connections should be retrieved.
     * @method
     * @param username A username or id which uniquely identifies user resource whose social login connections need to be retrieved.
     * @example baasicUserSocialLoginRouteDefinition.get('<username>');
     **/
    BaasicUserSocialLoginRouteDefinition.prototype.get = function (username) {
        return _super.prototype.baseGet.call(this, this.getRoute, username, { username: username });
    };
    /**
     * Parses remove social login route which can be expanded with additional items. Supported items are:
     * - `username` - A username which uniquely identifies an application user whose social login connection needs to be removed.
     * - `provider` - Provider from which to disconnect the login resource from.
     * @method
     * @param username A username which uniquely identifies an application user whose social login connection needs to be removed.
     * @param provider Provider from which to disconnect the login resource from.
     * @example baasicUserSocialLoginRouteDefinition.remove('<username>', '<provider>');
     **/
    BaasicUserSocialLoginRouteDefinition.prototype.remove = function (username, provider) {
        var params;
        if (provider.hasOwnProperty('abrv')) {
            params = {
                provider: provider.abrv
            };
        }
        else if (provider.hasOwnProperty('id')) {
            params = {
                provider: provider.id
            };
        }
        else {
            params = this.utility.extend({}, provider);
        }
        params.username = username;
        return _super.prototype.baseFind.call(this, this.removeRoute, params);
    };
    return BaasicUserSocialLoginRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicUserSocialLoginRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicUserSocialLoginRouteDefinition);
exports.BaasicUserSocialLoginRouteDefinition = BaasicUserSocialLoginRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var membership_1 = __webpack_require__(9);
var TYPES = {
    BaasicLoginRouteDefinition: Symbol("BaasicLoginRouteDefinition"),
    BaasicLoginClient: Symbol("BaasicLoginClient"),
    BaasicLoginSocialRouteDefinition: Symbol("BaasicLoginSocialRouteDefinition"),
    BaasicLoginSocialClient: Symbol("BaasicLoginSocialClient"),
    BaasicPasswordRecoveryClient: Symbol("BaasicPasswordRecoveryClient"),
    BaasicPasswordRecoveryRouteDefinition: Symbol("BaasicPasswordRecoveryRouteDefinition"),
    BaasicRegisterClient: Symbol("BaasicRegisterClient"),
    BaasicRegisterRouteDefinition: Symbol("BaasicRegisterRouteDefinition"),
    BaasicRoleClient: Symbol("BaasicRoleClient"),
    BaasicRoleRouteDefinition: Symbol("BaasicRoleRouteDefinition"),
    BaasicUserSocialLoginClient: Symbol("BaasicUserSocialLoginClient"),
    BaasicUserSocialLoginRouteDefinition: Symbol("BaasicUserSocialLoginRouteDefinition"),
    BaasicUserClient: Symbol("BaasicUserClient"),
    BaasicUserRouteDefinition: Symbol("BaasicUserRouteDefinition"),
    BaasicPermissionRouteDefinition: Symbol("BaasicPermissionRouteDefinition"),
    BaasicPermissionClient: Symbol("BaasicPermissionClient"),
    BaasicLookupRouteDefinition: Symbol("BaasicLookupRouteDefinition"),
    BaasicLookupClient: Symbol("BaasicLookupClient"),
    Root: Symbol("Membership-Root")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicLoginSocialRouteDefinition).to(membership_1.BaasicLoginSocialRouteDefinition);
    bind(TYPES.BaasicLoginSocialClient).to(membership_1.BaasicLoginSocialClient);
    bind(TYPES.BaasicLoginRouteDefinition).to(membership_1.BaasicLoginRouteDefinition);
    bind(TYPES.BaasicLoginClient).to(membership_1.BaasicLoginClient);
    bind(TYPES.BaasicPasswordRecoveryRouteDefinition).to(membership_1.BaasicPasswordRecoveryRouteDefinition);
    bind(TYPES.BaasicPasswordRecoveryClient).to(membership_1.BaasicPasswordRecoveryClient);
    bind(TYPES.BaasicRegisterRouteDefinition).to(membership_1.BaasicRegisterRouteDefinition);
    bind(TYPES.BaasicRegisterClient).to(membership_1.BaasicRegisterClient);
    bind(TYPES.BaasicRoleRouteDefinition).to(membership_1.BaasicRoleRouteDefinition);
    bind(TYPES.BaasicRoleClient).to(membership_1.BaasicRoleClient);
    bind(TYPES.BaasicUserSocialLoginRouteDefinition).to(membership_1.BaasicUserSocialLoginRouteDefinition);
    bind(TYPES.BaasicUserSocialLoginClient).to(membership_1.BaasicUserSocialLoginClient);
    bind(TYPES.BaasicUserRouteDefinition).to(membership_1.BaasicUserRouteDefinition);
    bind(TYPES.BaasicUserClient).to(membership_1.BaasicUserClient);
    bind(TYPES.BaasicPermissionRouteDefinition).to(membership_1.BaasicPermissionRouteDefinition);
    bind(TYPES.BaasicPermissionClient).to(membership_1.BaasicPermissionClient);
    bind(TYPES.BaasicLookupRouteDefinition).to(membership_1.BaasicLookupRouteDefinition);
    bind(TYPES.BaasicLookupClient).to(membership_1.BaasicLookupClient);
    bind(TYPES.Root).to(membership_1.Root);
});
exports.diModule = diModule;


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var membership_1 = __webpack_require__(9);
var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var Root = (function () {
    function Root(login, loginSocial, passwordRecovery, register, role, user, permissions, lookups) {
        this.login = login;
        this.loginSocial = loginSocial;
        this.passwordRecovery = passwordRecovery;
        this.register = register;
        this.role = role;
        this.user = user;
        this.permissions = permissions;
        this.lookups = lookups;
    }
    return Root;
}());
Root = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(membership_1.TYPES.BaasicLoginClient)),
    __param(1, inversify_1.inject(membership_1.TYPES.BaasicLoginSocialClient)),
    __param(2, inversify_1.inject(membership_1.TYPES.BaasicPasswordRecoveryClient)),
    __param(3, inversify_1.inject(membership_1.TYPES.BaasicRegisterClient)),
    __param(4, inversify_1.inject(membership_1.TYPES.BaasicRoleClient)),
    __param(5, inversify_1.inject(membership_1.TYPES.BaasicUserClient)),
    __param(6, inversify_1.inject(membership_1.TYPES.BaasicPermissionClient)),
    __param(7, inversify_1.inject(membership_1.TYPES.BaasicLookupClient)),
    __metadata("design:paramtypes", [membership_1.BaasicLoginClient,
        membership_1.BaasicLoginSocialClient,
        membership_1.BaasicPasswordRecoveryClient,
        membership_1.BaasicRegisterClient,
        membership_1.BaasicRoleClient,
        membership_1.BaasicUserClient,
        membership_1.BaasicPermissionClient,
        membership_1.BaasicLookupClient])
], Root);
exports.Root = Root;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringACLClient
 * @description Baasic Metering ACL Client provides an easy way to consume Baasic Metering REST API end-points. In order to obtain a needed routes `baasicMeteringACLClient` uses `baasicMeteringACLRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var metering_1 = __webpack_require__(11);
var BaasicMeteringACLClient = (function () {
    function BaasicMeteringACLClient(baasicMeteringACLRouteDefinition, baasicApiClient) {
        this.baasicMeteringACLRouteDefinition = baasicMeteringACLRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns a list of ACL policies established for the specified metering resource.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicMeteringClient.get({id: '<id>'})
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicMeteringACLClient.prototype.get = function (options) {
        return this.baasicApiClient.get(this.baasicMeteringACLRouteDefinition.get(options));
    };
    /**
     * Returns a promise that is resolved once the update acl action has been performed, this action creates new ACL policy for the specified metering resource.
     * @method
     * @param options ACL options object.
     * @example let options = {id : '<id>'};
                let aclObj =  {  actionId: '<action-id'>,  roleId: '<roleId>',  userId: '<userId>' };
                options[baasicConstants.modelPropertyName] = aclObj;
                baasicMeteringACLClient.update(options)
                    .then(function (data) {
                        // perform success action here
                    },
                      function (response, status, headers, config) {
                          // perform error handling here
                    });
     **/
    BaasicMeteringACLClient.prototype.update = function (options) {
        return this.baasicApiClient.put(this.baasicMeteringACLRouteDefinition.update(options), this.baasicMeteringACLRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the removeByUser action has been performed. This action deletes ACL policy assigned to the specified user and metering resource.
     * @method
     * @param id User metering data id which uniquely identifies user metering data resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and user metering data resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param user A value that uniquely identifies user for which ACL policy needs to be removed.
     * @param data ACL Policy object used to delete specified item in the system.
     * @returns A promise that is resolved once the removeByUser action has been performed.
     * @example baasicMeteringACLClient.removeByUser('<id>', '<access-action>', '<username>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMeteringACLClient.prototype.removeByUser = function (id, action, user, data) {
        return this.baasicApiClient.delete(this.baasicMeteringACLRouteDefinition.deleteByUser(id, action, user, data));
    };
    /**
     * Returns a promise that is resolved once the removeByRole action has been performed. This action deletes ACL policy assigned to the specified role and metering resource.
     * @method
     * @param id User metering data id which uniquely identifies user metering data resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and user metering data resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param role A value that uniquely identifies role for which ACL policy needs to be removed.
     * @param data ACL Policy object used to delete specified item in the system.
     * @returns A promise that is resolved once the removeByRole action has been performed.
     * @example baasicMeteringACLClient.removeByRole('<id>', '<access-action>', '<role-name>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMeteringACLClient.prototype.removeByRole = function (id, action, role, data) {
        return this.baasicApiClient.delete(this.baasicMeteringACLRouteDefinition.deleteByRole(id, action, role, data));
    };
    return BaasicMeteringACLClient;
}());
BaasicMeteringACLClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(metering_1.TYPES.BaasicMeteringACLRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [metering_1.BaasicMeteringACLRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicMeteringACLClient);
exports.BaasicMeteringACLClient = BaasicMeteringACLClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringACLRouteDefinition
 * @description Baasic Metering ACL Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Metering ACL Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicMeteringACLRouteDefinition = (function (_super) {
    __extends(BaasicMeteringACLRouteDefinition, _super);
    function BaasicMeteringACLRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'metering/data/{id}/acl/{?fields}';
        _this.updateRoute = 'metering/data/{id}/acl/{?fields}';
        _this.deleteByUserRoute = 'metering/data/{id}/acl/actions/{accessAction}/users/{user}/';
        _this.deleteByRoleRoute = 'metering/data/{id}/acl/actions/{accessAction}/roles/{role}/';
        return _this;
    }
    /**
     * Parses get metering acl route; this URI template should be expanded with the Id of the metering.
     * @method
     * @param options ACL options object.
     * @example baasicMeteringACLRouteDefinition.get({id: '<id>'});
     **/
    BaasicMeteringACLRouteDefinition.prototype.get = function (options) {
        var params = this.utility.extend({}, options);
        return _super.prototype.baseCreate.call(this, this.getRoute, params);
    };
    /**
     * Parses update metering acl route; this URI template should be expanded with the Id of the metering.
     * @method
     * @param options ACL options object.
     * @example baasicMeteringACLRouteDefinition.update({id: '<id>'});
     **/
    BaasicMeteringACLRouteDefinition.prototype.update = function (options) {
        var params = this.utility.extend({}, options);
        return _super.prototype.baseCreate.call(this, this.updateRoute, params);
    };
    /**
     * Parses deleteByUser metering acl route which can be expanded with additional options. Supported items are:
     * - `id` - Id of the metering.
     * - `accessAction` - Action abbreviation which identifies ACL policy assigned to the specified user and metering resource.
     * - `user` - A value which uniquely identifies user for which ACL policy needs to be removed.
     * @method
     * @param id User metering data id which uniquely identifies user metering data resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and user metering data resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param user A value that uniquely identifies user for which ACL policy needs to be removed.
     * @param data ACL Policy object used to delete specified item in the system.
     * @example baasicMeteringACLRouteDefinition.deleteByUser({
                    id: '<id>',
                    accessAction: '<access-action>',
                    user: '<username>'
                });
     **/
    BaasicMeteringACLRouteDefinition.prototype.deleteByUser = function (id, action, user, data) {
        var params = this.modelMapper.removeParams(data);
        params.id = id;
        params.user = user;
        params.accessAction = action;
        return _super.prototype.baseCreate.call(this, this.deleteByUserRoute, params);
    };
    /**
     * Parses deleteByUser metering acl route which can be expanded with additional options. Supported items are:
     * - `id` - Id of the metering.
     * - `accessAction` - Action abbreviation which identifies ACL policy assigned to the specified role and metering resource.
     * - `role` - A value which uniquely identifies role for which ACL policy needs to be removed.
     * @method
     * @param id User metering data id which uniquely identifies user metering data resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and user metering data resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param role A value that uniquely identifies role for which ACL policy needs to be removed.
     * @param data ACL Policy object used to delete specified item in the system.
     * @example baasicMeteringACLRouteDefinition.deleteByRole({ id: '<id>', accessAction: '<access-action>', role: '<role-name>'});
     **/
    BaasicMeteringACLRouteDefinition.prototype.deleteByRole = function (id, action, role, data) {
        var params = this.modelMapper.removeParams(data);
        params.id = id;
        params.role = role;
        params.accessAction = action;
        return _super.prototype.baseCreate.call(this, this.deleteByRoleRoute, params);
    };
    BaasicMeteringACLRouteDefinition.prototype.updateParams = function (options) {
        var params = this.utility.extend({}, options);
        return params[this.modelMapper.modelPropertyName];
    };
    return BaasicMeteringACLRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMeteringACLRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicMeteringACLRouteDefinition);
exports.BaasicMeteringACLRouteDefinition = BaasicMeteringACLRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
  - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
  - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
  - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringBatchClient
 * @description Baasic Metering Batch Client provides an easy way to consume Baasic Metering REST API end-points. In order to obtain a needed routes `baasicMeteringBatchClient` uses `baasicMeteringBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var metering_1 = __webpack_require__(11);
var BaasicMeteringBatchClient = (function () {
    function BaasicMeteringBatchClient(baasicMeteringBatchRouteDefinition, baasicApiClient) {
        this.baasicMeteringBatchRouteDefinition = baasicMeteringBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicMeteringBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicMeteringBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create data action has been performed; this action creates new data resources.
     * @method
     * @param data An MeteringData objects that need to be inserted into the system.
     * @returns A promise that is resolved once the create data action has been performed.
     * @example  baasicMeteringBatchClient.create([{
                    applicationId : '<applicationId>',
                    category : '<category>',
                    name: '<name>',
                    value: '<value>'
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicMeteringBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicMeteringBatchRouteDefinition.create(), this.baasicMeteringBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update data action has been performed; this action updates specified data resources.
     * @method
     * @param data An MeteringData objects used to update specified MeteringData resources.
     * @returns A promise that is resolved once the update data action has been performed.
     * @example   baasicMeteringBatchClient.update(companies)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicMeteringBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicMeteringBatchRouteDefinition.update(), this.baasicMeteringBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove data resources from the system if successfully completed.
     * @method
     * @param ids MeteringData ids which uniquely identify MeteringData resources that need to be deleted.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example baasicMeteringClient.remove(companyIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMeteringBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicMeteringBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicMeteringBatchClient;
}());
BaasicMeteringBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(metering_1.TYPES.BaasicMeteringBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [metering_1.BaasicMeteringBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicMeteringBatchClient);
exports.BaasicMeteringBatchClient = BaasicMeteringBatchClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringBatchRouteDefinition
 * @description Baasic Metering Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Metering Route Definition Service to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicMeteringBatchRouteDefinition = (function (_super) {
    __extends(BaasicMeteringBatchRouteDefinition, _super);
    function BaasicMeteringBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'metering/data/batch';
        _this.updateRoute = 'metering/data/batch';
        _this.deleteRoute = 'metering/data/batch';
        return _this;
    }
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicMeteringBatchRouteDefinition.create();
     **/
    BaasicMeteringBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicMeteringBatchRouteDefinition.update();
     **/
    BaasicMeteringBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove route; this URI template does not expose any additional options.
     * @method
     * @example baasicMeteringBatchRouteDefinition.delete();
     **/
    BaasicMeteringBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicMeteringBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMeteringBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicMeteringBatchRouteDefinition);
exports.BaasicMeteringBatchRouteDefinition = BaasicMeteringBatchRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringCategoryBatchClient
 * @description Baasic Metering Category Batch Client provides an easy way to consume Baasic Metering REST API end-points. In order to obtain a needed routes `baasicMeteringCategoryBatchClient` uses `baasicMeteringCategoryBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var metering_1 = __webpack_require__(11);
var BaasicMeteringCategoryBatchClient = (function () {
    function BaasicMeteringCategoryBatchClient(baasicMeteringCategoryBatchRouteDefinition, baasicApiClient) {
        this.baasicMeteringCategoryBatchRouteDefinition = baasicMeteringCategoryBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicMeteringCategoryBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicMeteringCategoryBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create category action has been performed; this action creates new category resources.
     * @method
     * @param data An MeteringCategory objects that need to be inserted into the system.
     * @returns A promise that is resolved once the create category action has been performed.
     * @example  baasicMeteringCategoryBatchClient.create([{
                    aggregateFunction : '<aggregateFunction>',
                    category : '<name>',
                     defaultSamplingRate: '<defaultSamplingRate>',
                     slug: '<slug>',
                     unitFactor: '<unitFactor>',
                     unitName: '<unitName>'
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicMeteringCategoryBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicMeteringCategoryBatchRouteDefinition.create(), this.baasicMeteringCategoryBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update category action has been performed; this action updates specified category resources.
     * @method
     * @param data An MeteringCategory objects used to update specified MeteringCategory resources.
     * @returns A promise that is resolved once the update category action has been performed.
     * @example   baasicMeteringCategoryClient.update(companies)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMeteringCategoryBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicMeteringCategoryBatchRouteDefinition.update(), this.baasicMeteringCategoryBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove category resources from the system if successfully completed.
     * @method
     * @param ids MeteringCategory ids which uniquely identify MeteringCategory resources that need to be deleted.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example baasicCompanyClient.remove(companyIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMeteringCategoryBatchClient.prototype.delete = function (ids) {
        return this.baasicApiClient.delete(this.baasicMeteringCategoryBatchRouteDefinition.delete(), this.baasicMeteringCategoryBatchRouteDefinition.deleteParams(ids));
    };
    return BaasicMeteringCategoryBatchClient;
}());
BaasicMeteringCategoryBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(metering_1.TYPES.BaasicMeteringCategoryBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [metering_1.BaasicMeteringCategoryBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicMeteringCategoryBatchClient);
exports.BaasicMeteringCategoryBatchClient = BaasicMeteringCategoryBatchClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringCategoryBatchRouteDefinition  * @description Baasic Metering Category Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Metering Category Batch Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicMeteringCategoryBatchRouteDefinition = (function (_super) {
    __extends(BaasicMeteringCategoryBatchRouteDefinition, _super);
    function BaasicMeteringCategoryBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'metering/categories/batch';
        _this.updateRoute = 'metering/categories/batch';
        _this.deleteRoute = 'metering/categories/batch';
        return _this;
    }
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicMeteringCategoryBatchRouteDefinition.create();
     **/
    BaasicMeteringCategoryBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicMeteringCategoryBatchRouteDefinition.update();
     **/
    BaasicMeteringCategoryBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove route; this URI template does not expose any additional options.
     * @method
     * @example baasicMeteringCategoryBatchRouteDefinition.delete();
     **/
    BaasicMeteringCategoryBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicMeteringCategoryBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMeteringCategoryBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicMeteringCategoryBatchRouteDefinition);
exports.BaasicMeteringCategoryBatchRouteDefinition = BaasicMeteringCategoryBatchRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringCategoryClient
 * @description Baasic Metering Category Client provides an easy way to consume Baasic Metering REST API end-points. In order to obtain a needed routes `baasicMeteringCategoryClient` uses `baasicMeteringCategoryRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var metering_1 = __webpack_require__(11);
var BaasicMeteringCategoryClient = (function () {
    function BaasicMeteringCategoryClient(baasicMeteringCategoryRouteDefinition, baasicApiClient, baasicMeteringCategoryBatchClient) {
        this.baasicMeteringCategoryRouteDefinition = baasicMeteringCategoryRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        this.baasicMeteringCategoryBatchClient = baasicMeteringCategoryBatchClient;
    }
    Object.defineProperty(BaasicMeteringCategoryClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicMeteringCategoryRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMeteringCategoryClient.prototype, "batch", {
        get: function () {
            return this.baasicMeteringCategoryBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of metering resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicMeteringCategoryClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicMeteringCategoryClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicMeteringCategoryRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the metering resource.
     * @method
     * @param id MeteringCategory id which uniquely identifies MeteringCategory resource that needs to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicMeteringCategoryClient.get(id)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMeteringCategoryClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicMeteringCategoryRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create metering action has been performed; this action creates a new metering resource.
     * @method
     * @param data An MeteringCategory object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create metering action has been performed.
     * @example baasicMeteringCategoryClient.create({
                    category : '<category-name>',
                    unitName : 'Kb',
                    unitFactor: 1,
                    defaultSamplingRate: '<value>', - Defaults: Minute = 1,Hour = 2,Day = 3,Week = 4,Month = 5,Year = 6
                    aggregateFunction: '<value>' - Defaults: None = 0,Count = 1,Avg = 2,Max = 3,Min = 4,Sum = 5
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicMeteringCategoryClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicMeteringCategoryRouteDefinition.create(), this.baasicMeteringCategoryRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update metering action has been performed; this action updates a metering resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicMeteringCategoryRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapepr.updateParams(meteringCategory);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An meteringCategory object used to update specified MeteringCategory resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example // meteringCategory is a resource previously fetched using get action.
                    meteringCategory.defaultSamplingRate = 'Day';
                    baasicMeteringCategoryClient.update(meteringCategory)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicMeteringCategoryClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicMeteringCategoryRouteDefinition.update(data), this.baasicMeteringCategoryRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a metering resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicMeteringCategoryRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(meteringCategory);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An meteringCategory object used to update specified MeteringCategory resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example // meteringCategory is a resource previously fetched using get action.
                    baasicMeteringCategoryClient.remove(meteringCategory)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicMeteringCategoryClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicMeteringCategoryRouteDefinition.delete(data));
    };
    return BaasicMeteringCategoryClient;
}());
BaasicMeteringCategoryClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(metering_1.TYPES.BaasicMeteringCategoryRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __param(2, inversify_1.inject(metering_1.TYPES.BaasicMeteringCategoryBatchClient)),
    __metadata("design:paramtypes", [metering_1.BaasicMeteringCategoryRouteDefinition,
        httpApi_1.BaasicApiClient,
        metering_1.BaasicMeteringCategoryBatchClient])
], BaasicMeteringCategoryClient);
exports.BaasicMeteringCategoryClient = BaasicMeteringCategoryClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringCategoryRouteDefinition  * @description Baasic Metering Category Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Metering Category Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var metering_1 = __webpack_require__(11);
var contracts_1 = __webpack_require__(1);
var BaasicMeteringCategoryRouteDefinition = (function (_super) {
    __extends(BaasicMeteringCategoryRouteDefinition, _super);
    function BaasicMeteringCategoryRouteDefinition(appOptions, baasicMeteringCategoryBatchRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicMeteringCategoryBatchRouteDefinition = baasicMeteringCategoryBatchRouteDefinition;
        _this.findRoute = 'metering/categories/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'metering/categories/{id}/{?embed,fields}';
        _this.createRoute = 'metering/categories';
        _this.updateRoute = 'metering/categories/{id}';
        _this.deleteRoute = 'metering/categories/{id}';
        return _this;
    }
    Object.defineProperty(BaasicMeteringCategoryRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicMeteringCategoryBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find metering category route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify metering resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain metering subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the metering property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicMeteringCategoryRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicMeteringCategoryRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @param id MeteringCategory id which uniquely identifies MeteringCategory resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicMeteringCategoryRouteDefinition.get(id);
     **/
    BaasicMeteringCategoryRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create metering category route; this URI template does not expose any additional options.
     * @method
     * @example baasicMeteringCategoryRouteDefinition.create();
     **/
    BaasicMeteringCategoryRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update metering category route; this URI template does not expose any additional options.
     * @method
     * @param data An meteringCategory object used to update specified MeteringCategory resource.
     * @example baasicMeteringCategoryRouteDefinition.update();
     **/
    BaasicMeteringCategoryRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete metering category route; this URI template does not expose any additional options.
     * @method
     * @param data An meteringCategory object used to delete specified MeteringCategory resource.
     * @example baasicMeteringCategoryRouteDefinition.delete();
     **/
    BaasicMeteringCategoryRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicMeteringCategoryRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMeteringCategoryRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(metering_1.TYPES.BaasicMeteringCategoryBatchRouteDefinition)),
    __metadata("design:paramtypes", [Object, metering_1.BaasicMeteringCategoryBatchRouteDefinition])
], BaasicMeteringCategoryRouteDefinition);
exports.BaasicMeteringCategoryRouteDefinition = BaasicMeteringCategoryRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](http://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringClient
 * @description Baasic Metering Client provides an easy way to consume Baasic Metering REST API end-points. In order to obtain a needed routes `baasicMeteringClient` uses `baasicMeteringRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var metering_1 = __webpack_require__(11);
var BaasicMeteringClient = (function () {
    function BaasicMeteringClient(baasicMeteringRouteDefinition, baasicApiClient, baasicMeteringBatchClient, baasicMeteringStatisticsClient, baasicMeteringACLClient, baasicMeteringCategoryClient, baasicMeteringSettingsClient) {
        this.baasicMeteringRouteDefinition = baasicMeteringRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        this.baasicMeteringBatchClient = baasicMeteringBatchClient;
        this.baasicMeteringStatisticsClient = baasicMeteringStatisticsClient;
        this.baasicMeteringACLClient = baasicMeteringACLClient;
        this.baasicMeteringCategoryClient = baasicMeteringCategoryClient;
        this.baasicMeteringSettingsClient = baasicMeteringSettingsClient;
    }
    Object.defineProperty(BaasicMeteringClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicMeteringRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMeteringClient.prototype, "batch", {
        get: function () {
            return this.baasicMeteringBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMeteringClient.prototype, "statistics", {
        get: function () {
            return this.baasicMeteringStatisticsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMeteringClient.prototype, "acl", {
        get: function () {
            return this.baasicMeteringACLClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMeteringClient.prototype, "settings", {
        get: function () {
            return this.baasicMeteringSettingsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMeteringClient.prototype, "category", {
        get: function () {
            return this.baasicMeteringCategoryClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of metering resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicMeteringClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    categories: 'Storage,Requests,Bandwidth'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicMeteringClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicMeteringRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the metering resource.
     * @method
     * @param id MeteringData id which uniquely identifies MeteringData resource that needs to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicMeteringClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMeteringClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicMeteringRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create metering action has been performed; this action creates a new metering resource.
     * @method
     * @param data An MeteringData object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create metering action has been performed
     * @example baasicMeteringClient.create({
                    category : '<category-name>',
                    name : '<sub-category-name>',
                    value: '<value>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
      **/
    BaasicMeteringClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicMeteringRouteDefinition.create(), this.baasicMeteringRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update metering action has been performed; this action updates a metering resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicMeteringRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(meteringData);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An metering data object used to update specified MeteringData resource.
     * @returns A promise that is resolved once the update metering action has been performed.
     * @example // meteringData is a resource previously fetched using get action.
                    meteringData.value = '<some-new-value>';
                    baasicMeteringClient.update(meteringData)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicMeteringClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicMeteringRouteDefinition.update(data), this.baasicMeteringRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a metering resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicMeteringRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(meteringData);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An metering data object used to remove specified MeteringData resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example // meteringData is a resource previously fetched using get action.
                        baasicMeteringClient.remove(meteringData)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicMeteringClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicMeteringRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the purge action has been performed. This action will remove all metering resources from the system if successfully completed.
     * @method
     * @returns A promise that is resolved once the purge action has been performed.
     * @example baasicMeteringClient.purge()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicMeteringClient.prototype.purge = function () {
        return this.baasicApiClient.delete(this.baasicMeteringRouteDefinition.purge());
    };
    return BaasicMeteringClient;
}());
BaasicMeteringClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(metering_1.TYPES.BaasicMeteringRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __param(2, inversify_1.inject(metering_1.TYPES.BaasicMeteringBatchClient)),
    __param(3, inversify_1.inject(metering_1.TYPES.BaasicMeteringStatisticsClient)),
    __param(4, inversify_1.inject(metering_1.TYPES.BaasicMeteringACLClient)),
    __param(5, inversify_1.inject(metering_1.TYPES.BaasicMeteringCategoryClient)),
    __param(6, inversify_1.inject(metering_1.TYPES.BaasicMeteringSettingsClient)),
    __metadata("design:paramtypes", [metering_1.BaasicMeteringRouteDefinition,
        httpApi_1.BaasicApiClient,
        metering_1.BaasicMeteringBatchClient,
        metering_1.BaasicMeteringStatisticsClient,
        metering_1.BaasicMeteringACLClient,
        metering_1.BaasicMeteringCategoryClient,
        metering_1.BaasicMeteringSettingsClient])
], BaasicMeteringClient);
exports.BaasicMeteringClient = BaasicMeteringClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
/* globals module */
/**
 * @module baasicMeteringRouteDefinition
 * @description Baasic Metering Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Metering Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var metering_1 = __webpack_require__(11);
var contracts_1 = __webpack_require__(1);
var BaasicMeteringRouteDefinition = (function (_super) {
    __extends(BaasicMeteringRouteDefinition, _super);
    function BaasicMeteringRouteDefinition(appOptions, baasicMeteringBatchRouteDefinition, baasicMeteringStatisticsRouteDefinition, baasicMeteringACLRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicMeteringBatchRouteDefinition = baasicMeteringBatchRouteDefinition;
        _this.baasicMeteringStatisticsRouteDefinition = baasicMeteringStatisticsRouteDefinition;
        _this.baasicMeteringACLRouteDefinition = baasicMeteringACLRouteDefinition;
        _this.findRoute = 'metering/data/{?applicationId,searchQuery,categories,from,to,names,moduleNames,statuses,endpoints,sources,page,rpp,sort,embed,fields}';
        _this.getRoute = 'metering/data/{id}/{?embed,fields}';
        _this.createRoute = 'metering/data';
        _this.updateRoute = 'metering/data/{id}';
        _this.deleteRoute = '/metering/data/{id}';
        _this.purgeRoute = 'metering/data/purge';
        return _this;
    }
    Object.defineProperty(BaasicMeteringRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicMeteringBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMeteringRouteDefinition.prototype, "statistics", {
        get: function () {
            return this.baasicMeteringStatisticsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicMeteringRouteDefinition.prototype, "acl", {
        get: function () {
            return this.baasicMeteringACLRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find metering route which can be expanded with additional options. Supported items are:
     * - `applicationId` - The application identifier.
     * - `categories` - The metering categories  in CSV format.
     * - `from` - The from date.
     * - `to` - The to date.
     * - `names` - The name of the resource inside the category in CSV format.
     * - `moduleNames` - The name of the resource inside the category in CSV format.
     * - `statuses` - The operation status in CSV format.
     * - `endpoints` - The back-end endpoint in CSV format.
     * - `sources` - The metering collector source in CSV format.
     * - `searchQuery` - A string value used to identify metering resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain metering subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the metering property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicMeteringRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicMeteringRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @param id MeteringData id which uniquely identifies MeteringData resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicMeteringRouteDefinition.get();
     **/
    BaasicMeteringRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create metering route; this URI template does not expose any additional options.
     * @method
     * @example baasicMeteringRouteDefinition.create();
     **/
    BaasicMeteringRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update metering route; this URI template does not expose any additional options.
     * @method
     * @param data An metering data object used to update specified MeteringData resource.
     * @example baasicMeteringRouteDefinition.update(data);
     **/
    BaasicMeteringRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete metering route; this URI template does not expose any additional options.
     * @method
     * @param data An metering data object used to delete specified MeteringData resource.
     * @example baasicMeteringRouteDefinition.delete(data);
     **/
    BaasicMeteringRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
     * Parses purge metering data route: this URI template does not expose any additional options.
     * @method
     * @example baasicMeteringRouteDefinition.purge();
     **/
    BaasicMeteringRouteDefinition.prototype.purge = function () {
        return _super.prototype.baseDelete.call(this, this.purgeRoute, {});
    };
    return BaasicMeteringRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMeteringRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(metering_1.TYPES.BaasicMeteringBatchRouteDefinition)),
    __param(2, inversify_1.inject(metering_1.TYPES.BaasicMeteringStatisticsRouteDefinition)),
    __param(3, inversify_1.inject(metering_1.TYPES.BaasicMeteringACLRouteDefinition)),
    __metadata("design:paramtypes", [Object, metering_1.BaasicMeteringBatchRouteDefinition,
        metering_1.BaasicMeteringStatisticsRouteDefinition,
        metering_1.BaasicMeteringACLRouteDefinition])
], BaasicMeteringRouteDefinition);
exports.BaasicMeteringRouteDefinition = BaasicMeteringRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringSettingsClient
 * @description Baasic Metering Settings Client provides an easy way to consume Baasic Metering REST API end-points. In order to obtain a needed routes `baasicMeteringSettingsClient` uses `baasicMeteringSettingsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var metering_1 = __webpack_require__(11);
var BaasicMeteringSettingsClient = (function () {
    function BaasicMeteringSettingsClient(baasicMeteringSettingsRouteDefinition, baasicApiClient) {
        this.baasicMeteringSettingsRouteDefinition = baasicMeteringSettingsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicMeteringSettingsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicMeteringSettingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the metering resource.
     * @method
     * @example baasicMeteringSettingsClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                      function (response, status, headers, config) {
                          // perform error handling here
                    });
     **/
    BaasicMeteringSettingsClient.prototype.get = function (options) {
        return this.baasicApiClient.get(this.baasicMeteringSettingsRouteDefinition.get(options));
    };
    /**
     * Returns a promise that is resolved once the update metering action has been performed; this action updates a metering resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicMeteringSettingsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(meteringSettings);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An meteringSetting object used to update specified MeteringSetting resource.
     * @returns A promise that is resolved once the update metering action has been performed.
     * @example // meteringSettings is a resource previously fetched using get action.
                    meteringSettings.dataRetentionPeriod = 60;
                    baasicMeteringSettingsClient.update(meteringSettings)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicMeteringSettingsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicMeteringSettingsRouteDefinition.update(data), this.baasicMeteringSettingsRouteDefinition.updateParams(data));
    };
    return BaasicMeteringSettingsClient;
}());
BaasicMeteringSettingsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(metering_1.TYPES.BaasicMeteringSettingsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [metering_1.BaasicMeteringSettingsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicMeteringSettingsClient);
exports.BaasicMeteringSettingsClient = BaasicMeteringSettingsClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringSettingsRouteDefinition
 * @description Baasic Metering Settings Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Metering Settings Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicMeteringSettingsRouteDefinition = (function (_super) {
    __extends(BaasicMeteringSettingsRouteDefinition, _super);
    function BaasicMeteringSettingsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'metering/settings/{id}/{?embed,fields}';
        _this.updateRoute = 'metering/settings/{id}';
        return _this;
    }
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @example baasicMeteringSettingsRouteDefinition.get();
     **/
    BaasicMeteringSettingsRouteDefinition.prototype.get = function (options) {
        return _super.prototype.baseGet.call(this, this.getRoute, undefined, options);
    };
    /**
    * Parses updatea route; this route doesn't expose any properties.
    * @method
    * @param data An meteringSetting object used to update specified MeteringSetting resource.
    * @example baasicMeteringSettingsRouteDefinition.update(data);
    **/
    BaasicMeteringSettingsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicMeteringSettingsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMeteringSettingsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicMeteringSettingsRouteDefinition);
exports.BaasicMeteringSettingsRouteDefinition = BaasicMeteringSettingsRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringStatisticsClient
 * @description Baasic Metering Statistics Client provides an easy way to consume Baasic Metering REST API end-points. In order to obtain a needed routes `baasicMeteringStatisticsClient` uses `baasicMeteringStatisticsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var metering_1 = __webpack_require__(11);
var BaasicMeteringStatisticsClient = (function () {
    function BaasicMeteringStatisticsClient(baasicMeteringStatisticsRouteDefinition, baasicApiClient) {
        this.baasicMeteringStatisticsRouteDefinition = baasicMeteringStatisticsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of metering resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicMeteringClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    category: 'Requests',
                    rateBy : '<minute,hour,day,week,month,year>',
                    from: '2 days ago',
                    to: 'now'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicMeteringStatisticsClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicMeteringStatisticsRouteDefinition.find(options));
    };
    return BaasicMeteringStatisticsClient;
}());
BaasicMeteringStatisticsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(metering_1.TYPES.BaasicMeteringStatisticsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [metering_1.BaasicMeteringStatisticsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicMeteringStatisticsClient);
exports.BaasicMeteringStatisticsClient = BaasicMeteringStatisticsClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicMeteringStatisticsRouteDefinition
 * @description Baasic Metering Statistics Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Metering Statistics Route Definition Service to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicMeteringStatisticsRouteDefinition = (function (_super) {
    __extends(BaasicMeteringStatisticsRouteDefinition, _super);
    function BaasicMeteringStatisticsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'metering/statistics/{category}/{?applicationIds,rateBy,from,to,names,moduleNames,statuses,endpoints,sources,page,rpp,sort,embed,fields}';
        return _this;
    }
    /**
     * Parses find metering route which can be expanded with additional options. Supported items are:
     * - `category` - The metering category.
     * - `applicationId` - The application identifier.
     * - `rateBy` - The sampling rate by minute,hour,day,week, month or year.
     * - `from` - The from date.
     * - `to` - The to date.
     * - `names` - The name of the resource inside the category in CSV format.
     * - `moduleNames` - The name of the resource inside the category in CSV format.
     * - `statuses` - The operation status in CSV format.
     * - `endpoints` - The back-end endpoint in CSV format.
     * - `sources` - The metering collector source in CSV format.
     * - `page` - A value used to set the page number, i.e. to retrieve certain metering subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the metering property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicMeteringStatisticsRouteDefinition.find({category: '<category-name-or-id>'});
     **/
    BaasicMeteringStatisticsRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    return BaasicMeteringStatisticsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicMeteringStatisticsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicMeteringStatisticsRouteDefinition);
exports.BaasicMeteringStatisticsRouteDefinition = BaasicMeteringStatisticsRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var metering_1 = __webpack_require__(11);
var TYPES = {
    BaasicMeteringACLClient: Symbol("BaasicMeteringACLClient"),
    BaasicMeteringACLRouteDefinition: Symbol("BaasicMeteringACLRouteDefinition"),
    BaasicMeteringBatchClient: Symbol("BaasicMeteringBatchClient"),
    BaasicMeteringBatchRouteDefinition: Symbol("BaasicMeteringBatchRouteDefinition"),
    BaasicMeteringCategoryBatchClient: Symbol("BaasicMeteringCategoryBatchClient"),
    BaasicMeteringCategoryBatchRouteDefinition: Symbol("BaasicMeteringCategoryBatchRouteDefinition"),
    BaasicMeteringCategoryRouteDefinition: Symbol("BaasicMeteringCategoryRouteDefinition"),
    BaasicMeteringCategoryClient: Symbol("BaasicMeteringCategoryClient"),
    BaasicMeteringRouteDefinition: Symbol("BaasicMeteringRouteDefinition"),
    BaasicMeteringClient: Symbol("BaasicMeteringClient"),
    BaasicMeteringSettingsRouteDefinition: Symbol("BaasicMeteringSettingsRouteDefinition"),
    BaasicMeteringSettingsClient: Symbol("BaasicMeteringSettingsClient"),
    BaasicMeteringStatisticsClient: Symbol("BaasicMeteringStatisticsClient"),
    BaasicMeteringStatisticsRouteDefinition: Symbol("BaasicMeteringStatisticsRouteDefinition")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicMeteringCategoryBatchRouteDefinition).to(metering_1.BaasicMeteringCategoryBatchRouteDefinition);
    bind(TYPES.BaasicMeteringCategoryBatchClient).to(metering_1.BaasicMeteringCategoryBatchClient);
    bind(TYPES.BaasicMeteringCategoryRouteDefinition).to(metering_1.BaasicMeteringCategoryRouteDefinition);
    bind(TYPES.BaasicMeteringCategoryClient).to(metering_1.BaasicMeteringCategoryClient);
    bind(TYPES.BaasicMeteringBatchRouteDefinition).to(metering_1.BaasicMeteringBatchRouteDefinition);
    bind(TYPES.BaasicMeteringBatchClient).to(metering_1.BaasicMeteringBatchClient);
    bind(TYPES.BaasicMeteringStatisticsRouteDefinition).to(metering_1.BaasicMeteringStatisticsRouteDefinition);
    bind(TYPES.BaasicMeteringStatisticsClient).to(metering_1.BaasicMeteringStatisticsClient);
    bind(TYPES.BaasicMeteringACLRouteDefinition).to(metering_1.BaasicMeteringACLRouteDefinition);
    bind(TYPES.BaasicMeteringACLClient).to(metering_1.BaasicMeteringACLClient);
    bind(TYPES.BaasicMeteringRouteDefinition).to(metering_1.BaasicMeteringRouteDefinition);
    bind(TYPES.BaasicMeteringClient).to(metering_1.BaasicMeteringClient);
    bind(TYPES.BaasicMeteringSettingsRouteDefinition).to(metering_1.BaasicMeteringSettingsRouteDefinition);
    bind(TYPES.BaasicMeteringSettingsClient).to(metering_1.BaasicMeteringSettingsClient);
});
exports.diModule = diModule;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsClient
 * @description Baasic Notifications Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsClient` uses `baasicNotificationsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsClient = (function () {
    function BaasicNotificationsClient(baasicNotificationsPublishClient, basicNotificationsSubscriptionsClient, baasicNotificationsRegistrationsClient, baasicNotificationsSettingsClient, baasicNotificationsRouteDefinition) {
        this.baasicNotificationsPublishClient = baasicNotificationsPublishClient;
        this.basicNotificationsSubscriptionsClient = basicNotificationsSubscriptionsClient;
        this.baasicNotificationsRegistrationsClient = baasicNotificationsRegistrationsClient;
        this.baasicNotificationsSettingsClient = baasicNotificationsSettingsClient;
        this.baasicNotificationsRouteDefinition = baasicNotificationsRouteDefinition;
    }
    Object.defineProperty(BaasicNotificationsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicNotificationsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsClient.prototype, "publish", {
        get: function () {
            return this.baasicNotificationsPublishClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsClient.prototype, "subscriptions", {
        get: function () {
            return this.basicNotificationsSubscriptionsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsClient.prototype, "registrations", {
        get: function () {
            return this.baasicNotificationsRegistrationsClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsClient.prototype, "settings", {
        get: function () {
            return this.baasicNotificationsSettingsClient;
        },
        enumerable: true,
        configurable: true
    });
    return BaasicNotificationsClient;
}());
BaasicNotificationsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsPublishClient)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsClient)),
    __param(2, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsClient)),
    __param(3, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSettingsClient)),
    __param(4, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRouteDefinition)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsPublishClient,
        notifications_1.BaasicNotificationsSubscriptionsClient,
        notifications_1.BaasicNotificationsRegistrationsClient,
        notifications_1.BaasicNotificationsSettingsClient,
        notifications_1.BaasicNotificationsRouteDefinition])
], BaasicNotificationsClient);
exports.BaasicNotificationsClient = BaasicNotificationsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsPublishBatchClient
 * @description Baasic Notifications Publish Batch Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsPublishBatchClient` uses `baasicNotificationsPublishBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsPublishBatchClient = (function () {
    function BaasicNotificationsPublishBatchClient(baasicNotificationsPublishBatchRouteDefinition, baasicApiClient) {
        this.baasicNotificationsPublishBatchRouteDefinition = baasicNotificationsPublishBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create notification action has been performed; this action creates new notification resources.
     * @method
     * @param data The notification collection.
     * @returns A promise that is resolved once the create notification action has been performed.
     * @example baasicNotificationsPublishBatchClient.create([{
                    channels: ['<channel-name', '<channel-name>'],
                    moduleName: '<module-name>',
                    templateName: '<template-name>',
                    templateContext: {
                        prop1: '<prop1-value>',
                        prop2: '<prop2-value>'
                    }
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsPublishBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicNotificationsPublishBatchRouteDefinition.create(), this.baasicNotificationsPublishBatchRouteDefinition.createParams(data));
    };
    return BaasicNotificationsPublishBatchClient;
}());
BaasicNotificationsPublishBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsPublishBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsPublishBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsPublishBatchClient);
exports.BaasicNotificationsPublishBatchClient = BaasicNotificationsPublishBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsPublishBatchRouteDefinition
 * @description Baasic Notifications Publish Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Publish Batch Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicNotificationsPublishBatchRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsPublishBatchRouteDefinition, _super);
    function BaasicNotificationsPublishBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'notifications/publish/batch';
        return _this;
    }
    /**
     * Parses create publish batch route; this route does not expose any additional options.
     * @method
     * @example baasicNotificationsPublishBatchRouteDefinition.create();
     */
    BaasicNotificationsPublishBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    return BaasicNotificationsPublishBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsPublishBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicNotificationsPublishBatchRouteDefinition);
exports.BaasicNotificationsPublishBatchRouteDefinition = BaasicNotificationsPublishBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsPublishClient
 * @description Baasic Notifications Publish Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsPublishClient` uses `baasicNotificationsPublishRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsPublishClient = (function () {
    function BaasicNotificationsPublishClient(baasicNotificationsPublishRouteDefinition, baasicNotificationsPublishBatchClient, baasicApiClient) {
        this.baasicNotificationsPublishRouteDefinition = baasicNotificationsPublishRouteDefinition;
        this.baasicNotificationsPublishBatchClient = baasicNotificationsPublishBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    BaasicNotificationsPublishClient.prototype.routeDefinition = function () {
        return this.baasicNotificationsPublishRouteDefinition;
    };
    BaasicNotificationsPublishClient.prototype.batch = function () {
        return this.baasicNotificationsPublishBatchClient;
    };
    /**
     * Returns a promise that is resolved once the create notification action has been performed; this action creates a new notification resource.
     * @method
     * @param data The notification.
     * @returns A promise that is resolved once the create notification action has been performed.
     * @example baasicNotificationsPublishClient.create({
                    channels: ['<channel-name', '<channel-name>'],
                    moduleName: '<module-name>',
                    templateName: '<template-name>',
                    templateContext: {
                        prop1: '<prop1-value>',
                        prop2: '<prop2-value>'
                    }
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsPublishClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicNotificationsPublishRouteDefinition.create(), this.baasicNotificationsPublishRouteDefinition.createParams(data));
    };
    return BaasicNotificationsPublishClient;
}());
BaasicNotificationsPublishClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsPublishRouteDefinition)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsPublishBatchClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsPublishRouteDefinition,
        notifications_1.BaasicNotificationsPublishBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsPublishClient);
exports.BaasicNotificationsPublishClient = BaasicNotificationsPublishClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsPublishRouteDefinition
 * @description Baasic Notifications Publish Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsPublishRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsPublishRouteDefinition, _super);
    function BaasicNotificationsPublishRouteDefinition(appOptions, baasicNotificationsPublishBatchRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicNotificationsPublishBatchRouteDefinition = baasicNotificationsPublishBatchRouteDefinition;
        _this.createRoute = 'notifications/publish';
        return _this;
    }
    BaasicNotificationsPublishRouteDefinition.prototype.batch = function () {
        return this.baasicNotificationsPublishBatchRouteDefinition;
    };
    /**
     * Parses create publish route; this route does not expose any additional options.
     * @method
     * @example baasicNotificationsPublishRouteDefinition.create();
     */
    BaasicNotificationsPublishRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    return BaasicNotificationsPublishRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsPublishRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsPublishBatchRouteDefinition)),
    __metadata("design:paramtypes", [Object, notifications_1.BaasicNotificationsPublishBatchRouteDefinition])
], BaasicNotificationsPublishRouteDefinition);
exports.BaasicNotificationsPublishRouteDefinition = BaasicNotificationsPublishRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRegistrationsAnonymousBatchClient
 * @description Baasic Notifications Registrations Anonymous Batch Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsRegistrationsAnonymousBatchClient` uses `baasicNotificationsRegistrationsAnonymousBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsRegistrationsAnonymousBatchClient = (function () {
    function BaasicNotificationsRegistrationsAnonymousBatchClient(baasicNotificationsRegistrationsAnonymousBatchRouteDefinition, baasicApiClient) {
        this.baasicNotificationsRegistrationsAnonymousBatchRouteDefinition = baasicNotificationsRegistrationsAnonymousBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicNotificationsRegistrationsAnonymousBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicNotificationsRegistrationsAnonymousBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create anonymous registration action has been performed; this action creates new anonymous registration resources.
     * @method
     * @param data AnonymousRegistration objects that need to be inserted into the system.
     * @returns A promise that is resolved once the create anonymous registration action has been performed.
     * @example baasicNotificationsRegistrationsAnonymousBatchClient.create([{
                    provider: '<provider-name>',
                    providerData: <provider-data>,
                    expirationDate: <expiration-date>
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsRegistrationsAnonymousBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicNotificationsRegistrationsAnonymousBatchRouteDefinition.create(), this.baasicNotificationsRegistrationsAnonymousBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove anonymous registration resources from the system if successfully completed.
     * @method
     * @param ids The registration ids which uniquely identify AnonymousRegistration resources that need to be deleted.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example baasicNotificationsRegistrationsAnonymousBatchClient.remove(subscriptionIds)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    */
    BaasicNotificationsRegistrationsAnonymousBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicNotificationsRegistrationsAnonymousBatchRouteDefinition.delete(), undefined, ids);
    };
    /**
     * Returns a promise that is resolved once the update anonymous registration action has been performed; this action updates specified anonymous registration  resources.
     * @method
     * @param data AnonymousRegistration objects used to update specified AnonymousRegistration resources.
     * @returns A promise that is resolved once the update anonymous registration action has been performed.
     * @example baasicNotificationsRegistrationsAnonymousBatchClient.update(registrations)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     */
    BaasicNotificationsRegistrationsAnonymousBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicNotificationsRegistrationsAnonymousBatchRouteDefinition.update(), this.baasicNotificationsRegistrationsAnonymousBatchRouteDefinition.updateParams(data));
    };
    return BaasicNotificationsRegistrationsAnonymousBatchClient;
}());
BaasicNotificationsRegistrationsAnonymousBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsRegistrationsAnonymousBatchClient);
exports.BaasicNotificationsRegistrationsAnonymousBatchClient = BaasicNotificationsRegistrationsAnonymousBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRegistrationsAnonymousBatchRouteDefinition
 * @description Baasic Notifications Registrations Anonymous Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Registrations Anonymous Batch Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition, _super);
    function BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'notifications/registrations/anonymous/batch';
        _this.deleteRoute = 'notifications/registrations/anonymous/batch';
        return _this;
    }
    /**
     * Parses create anonymous registrations batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsRegistrationsAnonymousBatchRouteDefinition.create();
     */
    BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition.prototype.create = function () {
        return this.baseCreate(this.createRoute, {});
    };
    /**
     * Parses delete anonymous registrations batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsRegistrationsAnonymousBatchRouteDefinition.delete();
     */
    BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition.prototype.delete = function () {
        return this.baseDelete(this.deleteRoute, {});
    };
    /**
     * Parses update anonymous registrations batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsRegistrationsAnonymousBatchRouteDefinition.update();
     */
    BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition.prototype.update = function () {
        return this.baseUpdate('notifications/registrations/anonymous/batch', {});
    };
    return BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition);
exports.BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition = BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRegistrationsAnonymousClient
 * @description Baasic Notifications Registrations Anonymous Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsRegistrationsAnonymousClient` uses `baasicNotificationsRegistrationsAnonymousRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsRegistrationsAnonymousClient = (function () {
    function BaasicNotificationsRegistrationsAnonymousClient(baasicNotificationsRegistrationsAnonymousRouteDefinition, baasicNotificationsRegistrationsAnonymousBatchClient, baasicApiClient) {
        this.baasicNotificationsRegistrationsAnonymousRouteDefinition = baasicNotificationsRegistrationsAnonymousRouteDefinition;
        this.baasicNotificationsRegistrationsAnonymousBatchClient = baasicNotificationsRegistrationsAnonymousBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicNotificationsRegistrationsAnonymousClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicNotificationsRegistrationsAnonymousRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsRegistrationsAnonymousClient.prototype, "batch", {
        get: function () {
            return this.baasicNotificationsRegistrationsAnonymousBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create anonymous registration action has been performed; this action creates a new anonymous registration resource.
     * @method
     * @param data An AnonymousRegistration object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create anonymous registration action has been performed.
     * @example baasicNotificationsRegistrationsAnonymousClient.create({
                    provider: '<provider-name>',
                    providerdata: <provider-data>,
                    expirationData: '<expiration-date>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsRegistrationsAnonymousClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicNotificationsRegistrationsAnonymousRouteDefinition.create(), this.baasicNotificationsRegistrationsAnonymousRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of anonymous registration resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicNotificationsRegistrationsAnonymousClient.find({
                   pageNumber : 1,
                   pageSize : 10,
                   orderBy : '<field>',
                   orderDirection : '<asc|desc>',
                   search : '<search-phrase>',
                   providers: '<provider-name1>,<provider-name2>',
                   embed: '<embed>'
               })
               .then(function (collection) {
                   // perform success action here
               },
                function (response, status, headers, config) {
                    // perform error handling here
               });
    */
    BaasicNotificationsRegistrationsAnonymousClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicNotificationsRegistrationsAnonymousRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified anonymous registration resource.
     * @method
     * @param id The registration identifier which uniquely identifies AnonymousRegistration resource that needs to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicNotificationsRegistrationsAnonymousClient.get('<registration-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     */
    BaasicNotificationsRegistrationsAnonymousClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicNotificationsRegistrationsAnonymousRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the remove anonymous registration action has been performed. This action will remove a anonymous registration resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicNotificationsRegistrationsAnonymousRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(registration);
     * var uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An object used to delete specified AnonymousRegistration resource.
     * @returns A promise that is resolved once the remove anonymous registration action has been performed.
     * @example // registration is a resource previously fetched using get action.
                    baasicNotificationsRegistrationsAnonymousClient.remove(registration)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     */
    BaasicNotificationsRegistrationsAnonymousClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicNotificationsRegistrationsAnonymousRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the update anonymous registration action has been performed; this action updates a anonymous registration resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicNotificationsRegistrationsAnonymousRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(registration);
     * var uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An object used to update specified AnonymousRegistration resource.
     * @returns A promise that is resolved once the update anonymous registration action has been performed
     * @example // registration is a resource previously fetched using get action.
                        subscription.provider = '<provider-name>';
                        baasicNotificationsRegistrationsAnonymousClient.update(registration)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     */
    BaasicNotificationsRegistrationsAnonymousClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicNotificationsRegistrationsAnonymousRouteDefinition.update(data), this.baasicNotificationsRegistrationsAnonymousRouteDefinition.updateParams(data));
    };
    return BaasicNotificationsRegistrationsAnonymousClient;
}());
BaasicNotificationsRegistrationsAnonymousClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsAnonymousRouteDefinition)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsAnonymousBatchClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsRegistrationsAnonymousRouteDefinition,
        notifications_1.BaasicNotificationsRegistrationsAnonymousBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsRegistrationsAnonymousClient);
exports.BaasicNotificationsRegistrationsAnonymousClient = BaasicNotificationsRegistrationsAnonymousClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRegistrationsAnonymousRouteDefinition
 * @description Baasic Notifications Registrations Anonymous Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Registrations Anonymous Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsRegistrationsAnonymousRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsRegistrationsAnonymousRouteDefinition, _super);
    function BaasicNotificationsRegistrationsAnonymousRouteDefinition(appOptions, baasicNotificationsRegistrationsAnonymousBatchRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicNotificationsRegistrationsAnonymousBatchRouteDefinition = baasicNotificationsRegistrationsAnonymousBatchRouteDefinition;
        _this.createRoute = 'notifications/registrations/anonymous';
        _this.findRoute = 'notifications/registrations/anonymous/{?searchQuery,providers,page,rpp,sort,embed,fields}';
        _this.getRoute = 'notifications/registrations/anonymous/{id}/{?embed}';
        _this.updateRoute = 'notifications/registrations/anonymous/{id}';
        _this.deleteRoute = 'notifications/registrations/anonymous/{id}';
        return _this;
    }
    Object.defineProperty(BaasicNotificationsRegistrationsAnonymousRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicNotificationsRegistrationsAnonymousBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses create anonymous registrations route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsRegistrationsAnonymousRouteDefinition.create();
     */
    BaasicNotificationsRegistrationsAnonymousRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses find anonymous registrations route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing user subscription properties using the phrase search.
     * - `providers` - Comma separated list of notification providers.
     * - `page` - A value used to set the page number, i.e. to retrieve certain user subscription subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the user subscription property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicNotificationsRegistrationsAnonymousRouteDefinition.find({
                   searchQuery: '<search-phrase>',
                   providers: '<provider-name>,<provider-name>'
               });
    */
    BaasicNotificationsRegistrationsAnonymousRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get anonymous registrations route; this route should be expanded with the Id of anonymous registrations resource.
     * @method
     * @param id The registration identifier which uniquely identifies AnonymousRegistration resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicNotificationsRegistrationsAnonymousRouteDefinition.get({ id: '<registration-id>' });
     */
    BaasicNotificationsRegistrationsAnonymousRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses update anonymous registrations route; this route should be expanded with the Id of anonymous registrations resource.
     * @method
     * @param data An object used to update specified AnonymousRegistration resource.
     * @example baasicNotificationsRegistrationsAnonymousRouteDefinition.update(data);
     */
    BaasicNotificationsRegistrationsAnonymousRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete anonymous registrations route; this route should be expanded with the Id of anonymous registrations resource.
     * @method
     * @param data An object used to delete specified AnonymousRegistration resource.
     * @example baasicNotificationsRegistrationsAnonymousRouteDefinition.delete(data);
     */
    BaasicNotificationsRegistrationsAnonymousRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicNotificationsRegistrationsAnonymousRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsRegistrationsAnonymousRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition)),
    __metadata("design:paramtypes", [Object, notifications_1.BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition])
], BaasicNotificationsRegistrationsAnonymousRouteDefinition);
exports.BaasicNotificationsRegistrationsAnonymousRouteDefinition = BaasicNotificationsRegistrationsAnonymousRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRegistrationsClient
 * @description Baasic Notifications Registrations Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsRegistrationsClient` uses `baasicNotificationsRegistrationsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsRegistrationsClient = (function () {
    function BaasicNotificationsRegistrationsClient(baasicNotificationsRegistrationsRouteDefinition, baasicNotificationsRegistrationsAnonymousClient, baasicNotificationsRegistrationsUsersClient) {
        this.baasicNotificationsRegistrationsRouteDefinition = baasicNotificationsRegistrationsRouteDefinition;
        this.baasicNotificationsRegistrationsAnonymousClient = baasicNotificationsRegistrationsAnonymousClient;
        this.baasicNotificationsRegistrationsUsersClient = baasicNotificationsRegistrationsUsersClient;
    }
    Object.defineProperty(BaasicNotificationsRegistrationsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicNotificationsRegistrationsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsRegistrationsClient.prototype, "anonymous", {
        get: function () {
            return this.baasicNotificationsRegistrationsAnonymousClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsRegistrationsClient.prototype, "users", {
        get: function () {
            return this.baasicNotificationsRegistrationsUsersClient;
        },
        enumerable: true,
        configurable: true
    });
    return BaasicNotificationsRegistrationsClient;
}());
BaasicNotificationsRegistrationsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsRouteDefinition)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsAnonymousClient)),
    __param(2, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsUsersClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsRegistrationsRouteDefinition,
        notifications_1.BaasicNotificationsRegistrationsAnonymousClient,
        notifications_1.BaasicNotificationsRegistrationsUsersClient])
], BaasicNotificationsRegistrationsClient);
exports.BaasicNotificationsRegistrationsClient = BaasicNotificationsRegistrationsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRegistrationsRouteDefinition
 * @description Baasic Notifications Registrations Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Registrations Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsRegistrationsRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsRegistrationsRouteDefinition, _super);
    function BaasicNotificationsRegistrationsRouteDefinition(appOptions, baasicNotificationsRegistrationsUsersRouteDefinition, baasicNotificationsRegistrationsAnonymousRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicNotificationsRegistrationsUsersRouteDefinition = baasicNotificationsRegistrationsUsersRouteDefinition;
        _this.baasicNotificationsRegistrationsAnonymousRouteDefinition = baasicNotificationsRegistrationsAnonymousRouteDefinition;
        return _this;
    }
    Object.defineProperty(BaasicNotificationsRegistrationsRouteDefinition.prototype, "users", {
        get: function () {
            return this.baasicNotificationsRegistrationsUsersRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsRegistrationsRouteDefinition.prototype, "anonymous", {
        get: function () {
            return this.baasicNotificationsRegistrationsAnonymousRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    return BaasicNotificationsRegistrationsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsRegistrationsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsUsersRouteDefinition)),
    __param(2, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsAnonymousRouteDefinition)),
    __metadata("design:paramtypes", [Object, notifications_1.BaasicNotificationsRegistrationsUsersRouteDefinition,
        notifications_1.BaasicNotificationsRegistrationsAnonymousRouteDefinition])
], BaasicNotificationsRegistrationsRouteDefinition);
exports.BaasicNotificationsRegistrationsRouteDefinition = BaasicNotificationsRegistrationsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRegistrationsUsersBatchClient
 * @description Baasic Notifications Registrations Users Batch Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsRegistrationsUsersBatchClient` uses `baasicNotificationsRegistrationsUsersBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsRegistrationsUsersBatchClient = (function () {
    function BaasicNotificationsRegistrationsUsersBatchClient(baasicNotificationsRegistrationsUsersBatchRouteDefinition, baasicApiClient) {
        this.baasicNotificationsRegistrationsUsersBatchRouteDefinition = baasicNotificationsRegistrationsUsersBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicNotificationsRegistrationsUsersBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicNotificationsRegistrationsUsersBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create user registration action has been performed; this action creates new user registration resources.
     * @method
     * @param data UserRegistration collection that need to be inserted into the system.
     * @returns A promise that is resolved once the create user registration action has been performed.
     * @example baasicNotificationsRegistrationsUsersBatchClient.create([{
                    provider: '<provider-name>',
                    providerData: <provider-data>,
                    userId: '<user-id>'
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsRegistrationsUsersBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicNotificationsRegistrationsUsersBatchRouteDefinition.create(), this.baasicNotificationsRegistrationsUsersBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove user registration resources from the system if successfully completed.
     * @method
     * @param ids The subscription ids which uniquely identify UserRegistration resources that need to be deleted.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example baasicNotificationsRegistrationsUsersBatchClient.remove(subscriptionIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     */
    BaasicNotificationsRegistrationsUsersBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicNotificationsRegistrationsUsersBatchRouteDefinition.delete(), undefined, ids);
    };
    /**
     * Returns a promise that is resolved once the update user registration action has been performed; this action updates specified user registration resources.
     * @method
     * @param data UserRegistration objects used to update specified UserRegistration resources.
     * @returns A promise that is resolved once the update user registration action has been performed.
     * @example baasicNotificationsRegistrationsUsersBatchClient.update(registrations)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     */
    BaasicNotificationsRegistrationsUsersBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicNotificationsRegistrationsUsersBatchRouteDefinition.update(), this.baasicNotificationsRegistrationsUsersBatchRouteDefinition.updateParams(data));
    };
    return BaasicNotificationsRegistrationsUsersBatchClient;
}());
BaasicNotificationsRegistrationsUsersBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsUsersBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsRegistrationsUsersBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsRegistrationsUsersBatchClient);
exports.BaasicNotificationsRegistrationsUsersBatchClient = BaasicNotificationsRegistrationsUsersBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRegistrationsUsersBatchRouteDefinition
 * @description Baasic Notifications Registrations Users Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Registrations Users Batch Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicNotificationsRegistrationsUsersBatchRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsRegistrationsUsersBatchRouteDefinition, _super);
    function BaasicNotificationsRegistrationsUsersBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'notifications/registrations/batch';
        _this.deleteRoute = 'notifications/registrations/batch';
        _this.updateRoute = 'notifications/registrations/batch';
        return _this;
    }
    /**
     * Parses create users registrations batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsRegistrationsUsersBatchRouteDefinition.create();
     */
    BaasicNotificationsRegistrationsUsersBatchRouteDefinition.prototype.create = function () {
        return this.baseCreate(this.createRoute, {});
    };
    /**
     * Parses remove users registrations batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsRegistrationsUsersBatchRouteDefinition.delete();
     */
    BaasicNotificationsRegistrationsUsersBatchRouteDefinition.prototype.delete = function () {
        return this.baseDelete(this.deleteRoute, {});
    };
    /**
     * Parses update users registrations batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsRegistrationsUsersBatchRouteDefinition.update();
     */
    BaasicNotificationsRegistrationsUsersBatchRouteDefinition.prototype.update = function () {
        return this.baseUpdate(this.updateRoute, {});
    };
    return BaasicNotificationsRegistrationsUsersBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsRegistrationsUsersBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicNotificationsRegistrationsUsersBatchRouteDefinition);
exports.BaasicNotificationsRegistrationsUsersBatchRouteDefinition = BaasicNotificationsRegistrationsUsersBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRegistrationsUsersClient
 * @description Baasic Notifications Registrations Users Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsRegistrationsUsersClient` uses `baasicNotificationsRegistrationsUsersRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsRegistrationsUsersClient = (function () {
    function BaasicNotificationsRegistrationsUsersClient(baasicNotificationsRegistrationsUsersRouteDefinition, baasicNotificationsRegistrationsUsersBatchClient, baasicApiClient) {
        this.baasicNotificationsRegistrationsUsersRouteDefinition = baasicNotificationsRegistrationsUsersRouteDefinition;
        this.baasicNotificationsRegistrationsUsersBatchClient = baasicNotificationsRegistrationsUsersBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicNotificationsRegistrationsUsersClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicNotificationsRegistrationsUsersRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsRegistrationsUsersClient.prototype, "batch", {
        get: function () {
            return this.baasicNotificationsRegistrationsUsersBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create user registration action has been performed; this action creates a new user registration resource.
     * @method
     * @param data An UserRegistration object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create user registration action has been performed.
     * @example baasicNotificationsRegistrationsUsersClient.create({
                    provider: '<provider-name>',
                    providerData: <provider-data>,
                    userId: '<user-id>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsRegistrationsUsersClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicNotificationsRegistrationsUsersRouteDefinition.create(), this.baasicNotificationsRegistrationsUsersRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of user registrations resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicNotificationsRegistrationsUsersClient.find({
                   pageNumber : 1,
                   pageSize : 10,
                   orderBy : '<field>',
                   orderDirection : '<asc|desc>',
                   search : '<search-phrase>',
                   providers: '<provider-name1>,<provider-name2>',
                   userIds: '<user-id1>,<user-id2>',
                   embed: '<embed>'
               })
               .then(function (collection) {
                   // perform success action here
               },
                function (response, status, headers, config) {
                    // perform error handling here
               });
    */
    BaasicNotificationsRegistrationsUsersClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicNotificationsRegistrationsUsersRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified user registrations resource.
     * @method
     * @param id The registration identifier which uniquely identifies UserRegistration resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicNotificationsRegistrationsUsersClient.get('<registration-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    */
    BaasicNotificationsRegistrationsUsersClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicNotificationsRegistrationsUsersRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the remove user registrations action has been performed. This action will remove a user registrations resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicNotificationsRegistrationsUsersRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(registration);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An object used to delete specified UserRegistration resource.
     * @example // registration is a resource previously fetched using get action.
                    baasicNotificationsRegistrationsUsersClient.remove(registration)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     */
    BaasicNotificationsRegistrationsUsersClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicNotificationsRegistrationsUsersRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the update user registration action has been performed; this action updates a user registration resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicNotificationsRegistrationsUsersRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(subsregistrationcription);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An object used to update specified UserRegistration resource.
     * @returns A promise that is resolved once the update user registration action has been performed.
     * @example // registration is a resource previously fetched using get action.
                    registration.provider = '<provider-name>';
                    baasicNotificationsRegistrationsUsersClient.update(registration)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     */
    BaasicNotificationsRegistrationsUsersClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicNotificationsRegistrationsUsersRouteDefinition.update(data), this.baasicNotificationsRegistrationsUsersRouteDefinition.updateParams(data));
    };
    return BaasicNotificationsRegistrationsUsersClient;
}());
BaasicNotificationsRegistrationsUsersClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsUsersRouteDefinition)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsUsersBatchClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsRegistrationsUsersRouteDefinition,
        notifications_1.BaasicNotificationsRegistrationsUsersBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsRegistrationsUsersClient);
exports.BaasicNotificationsRegistrationsUsersClient = BaasicNotificationsRegistrationsUsersClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRegistrationsUsersRouteDefinition
 * @description Baasic Notifications Registrations Users Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Registrations Users Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsRegistrationsUsersRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsRegistrationsUsersRouteDefinition, _super);
    function BaasicNotificationsRegistrationsUsersRouteDefinition(appOptions, baasicNotificationsRegistrationsUsersBatchRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicNotificationsRegistrationsUsersBatchRouteDefinition = baasicNotificationsRegistrationsUsersBatchRouteDefinition;
        _this.createRoute = 'notifications/registrations';
        _this.findRoute = 'notifications/registrations/{?searchQuery,userIds,providers,page,rpp,sort,embed,fields}';
        _this.getRoute = 'notifications/registrations/{id}/{?embed}';
        _this.deleteRoute = 'notifications/registrations/{id}';
        _this.updateRoute = 'notifications/registrations/{id}';
        return _this;
    }
    Object.defineProperty(BaasicNotificationsRegistrationsUsersRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicNotificationsRegistrationsUsersBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses create users registrations route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsRegistrationsUsersRouteDefinition.create();
     */
    BaasicNotificationsRegistrationsUsersRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses find users registrations route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing user subscription properties using the phrase search.
     * - `userIds` - Comma separated list of user identifiers.
     * - `providers` - Comma separated list of notification providers.
     * - `page` - A value used to set the page number, i.e. to retrieve certain user subscription subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the user subscription property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicNotificationsRegistrationsUsersRouteDefinition.find({ searchQuery: '<search-phrase>', providers: '<provider-name>,<provider-name>' });
     */
    BaasicNotificationsRegistrationsUsersRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get users registrations route; this route should be expanded with the Id of users registrations resource.
     * @method
     * @param id The registration identifier which uniquely identifies UserRegistration resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicNotificationsRegistrationsUsersRouteDefinition.get({ id: '<registration-id>' });
     */
    BaasicNotificationsRegistrationsUsersRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses delete users registrations route; this route should be expanded with the Id of users registrations resource.
     * @method
     * @param data An object used to delete specified UserRegistration resource.
     * @example baasicNotificationsRegistrationsUsersRouteDefinition.delete(data);
     */
    BaasicNotificationsRegistrationsUsersRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
     * Parses update users registrations route; this route should be expanded with the Id of users registrations resource.
     * @method
     * @param data An object used to update specified UserRegistration resource.
     * @example baasicNotificationsRegistrationsUsersRouteDefinition.update(data);
     */
    BaasicNotificationsRegistrationsUsersRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicNotificationsRegistrationsUsersRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsRegistrationsUsersRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsUsersBatchRouteDefinition)),
    __metadata("design:paramtypes", [Object, notifications_1.BaasicNotificationsRegistrationsUsersBatchRouteDefinition])
], BaasicNotificationsRegistrationsUsersRouteDefinition);
exports.BaasicNotificationsRegistrationsUsersRouteDefinition = BaasicNotificationsRegistrationsUsersRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsRouteDefinition
 * @description Baasic Notifications Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsRouteDefinition, _super);
    function BaasicNotificationsRouteDefinition(appOptions, baasicNotificationsPublishRouteDefinition, basicNotificationsSubscriptionsRouteDefinition, baasicNotificationsRegistrationsRouteDefinition, baasicNotificationsSettingsRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicNotificationsPublishRouteDefinition = baasicNotificationsPublishRouteDefinition;
        _this.basicNotificationsSubscriptionsRouteDefinition = basicNotificationsSubscriptionsRouteDefinition;
        _this.baasicNotificationsRegistrationsRouteDefinition = baasicNotificationsRegistrationsRouteDefinition;
        _this.baasicNotificationsSettingsRouteDefinition = baasicNotificationsSettingsRouteDefinition;
        return _this;
    }
    Object.defineProperty(BaasicNotificationsRouteDefinition.prototype, "publish", {
        get: function () {
            return this.baasicNotificationsPublishRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsRouteDefinition.prototype, "subscriptions", {
        get: function () {
            return this.basicNotificationsSubscriptionsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsRouteDefinition.prototype, "registrations", {
        get: function () {
            return this.baasicNotificationsRegistrationsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsRouteDefinition.prototype, "settings", {
        get: function () {
            return this.baasicNotificationsSettingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    return BaasicNotificationsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsPublishRouteDefinition)),
    __param(2, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsRouteDefinition)),
    __param(3, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsRegistrationsRouteDefinition)),
    __param(4, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSettingsRouteDefinition)),
    __metadata("design:paramtypes", [Object, notifications_1.BaasicNotificationsPublishRouteDefinition,
        notifications_1.BaasicNotificationsSubscriptionsRouteDefinition,
        notifications_1.BaasicNotificationsRegistrationsRouteDefinition,
        notifications_1.BaasicNotificationsSettingsRouteDefinition])
], BaasicNotificationsRouteDefinition);
exports.BaasicNotificationsRouteDefinition = BaasicNotificationsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSettingsClient
 * @description Baasic Notifications Settings Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsSettingsClient` uses `baasicNotificationsSettingsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsSettingsClient = (function () {
    function BaasicNotificationsSettingsClient(baasicNotificationsSettingsRouteDefinition, baasicApiClient) {
        this.baasicNotificationsSettingsRouteDefinition = baasicNotificationsSettingsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicNotificationsSettingsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicNotificationsSettingsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified setting resource.
     * @method
     * @param provider The notification provider name.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicNotificationsSettingsClient.get('<provider-name>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     */
    BaasicNotificationsSettingsClient.prototype.get = function (provider) {
        return this.baasicApiClient.get(this.baasicNotificationsSettingsRouteDefinition.get(provider));
    };
    /**
     * Returns a promise that is resolved once the update settings action has been performed; this action updates a settings resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicNotificationsSettingsRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(settings);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data The notification settings.
     * @returns A promise that is resolved once the update settings action has been performed.
     * @example // settings is a resource previously fetched using get action.
                    baasicNotificationsSettingsClient.update(settings)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     */
    BaasicNotificationsSettingsClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicNotificationsSettingsRouteDefinition.update(data), this.baasicNotificationsSettingsRouteDefinition.updateParams(data));
    };
    return BaasicNotificationsSettingsClient;
}());
BaasicNotificationsSettingsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSettingsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsSettingsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsSettingsClient);
exports.BaasicNotificationsSettingsClient = BaasicNotificationsSettingsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSettingsRouteDefinition
 * @description Baasic Notifications Settings Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Settings Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicNotificationsSettingsRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsSettingsRouteDefinition, _super);
    function BaasicNotificationsSettingsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'notifications/settings/{id}';
        _this.updateRoute = 'notifications/settings/{id}';
        return _this;
    }
    /**
     * Parses get notification settings route; this route should be expanded with the notification provider name.
     * @method
     * @param provider The notification provider name.
     * @example baasicNotificationsSettingsRouteDefinition.get({ id: '<provider-name>' });
     */
    BaasicNotificationsSettingsRouteDefinition.prototype.get = function (provider) {
        return _super.prototype.baseGet.call(this, this.getRoute, provider);
    };
    /**
     * Parses update notification settings route; this route should be expanded with the notification provider name.
     * @method
     * @param data The notification settings.
     * @example baasicNotificationsSettingsRouteDefinition.update({ id: '<provider-name>' });
     */
    BaasicNotificationsSettingsRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicNotificationsSettingsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsSettingsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicNotificationsSettingsRouteDefinition);
exports.BaasicNotificationsSettingsRouteDefinition = BaasicNotificationsSettingsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSubscriptionsAnonymousBatchClient
 * @description Baasic Notifications Subscriptions Anonymous Batch Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsSubscriptionsAnonymousBatchClient` uses `baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsSubscriptionsAnonymousBatchClient = (function () {
    function BaasicNotificationsSubscriptionsAnonymousBatchClient(baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition, baasicApiClient) {
        this.baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition = baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicNotificationsSubscriptionsAnonymousBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create anonymous subscription action has been performed; this action creates new anonymous subscription resources.
     * @method
     * @param data AnonymousSubscription objects that need to be inserted into the system.
     * @returns A promise that is resolved once the create anonymous subscription action has been performed.
     * @example baasicNotificationsSubscriptionsAnonymousBatchClient.create([{
                    channel: '<channel-name>',
                    registrationId: '<registration-id>' ž
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsSubscriptionsAnonymousBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition.create(), this.baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove anonymous subscription resources from the system if successfully completed.
     * @method
     * @param ids The subscription ids which uniquely identify AnonymousSubscription resources that need to be deleted.
     * @returns a promise that is resolved once the remove action has been performed.
     * @example baasicNotificationsSubscriptionsAnonymousBatchClient.remove(subscriptionIds)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    */
    BaasicNotificationsSubscriptionsAnonymousBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition.delete(), undefined, ids);
    };
    /**
     * Returns a promise that is resolved once the update anonymous subscriptions action has been performed; this action updates specified anonymous subscription resources.
     * @method
     * @param data AnonymousSubscription objects used to update specified AnonymousSubscription resources.
     * @returns A promise that is resolved once the update anonymous subscriptions action has been performed.
     * @example baasicNotificationsSubscriptionsAnonymousBatchClient.update(subscriptions)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     */
    BaasicNotificationsSubscriptionsAnonymousBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition.update(), this.baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition.updateParams(data));
    };
    return BaasicNotificationsSubscriptionsAnonymousBatchClient;
}());
BaasicNotificationsSubscriptionsAnonymousBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsSubscriptionsAnonymousBatchClient);
exports.BaasicNotificationsSubscriptionsAnonymousBatchClient = BaasicNotificationsSubscriptionsAnonymousBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition
 * @description Baasic Notifications Subscriptions Anonymous Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Subscriptions Anonymous Batch Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition, _super);
    function BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'notifications/subscriptions/anonymous/batch';
        _this.deleteRoute = 'notifications/subscriptions/anonymous/batch';
        _this.updateRoute = 'notifications/subscriptions/anonymous/batch';
        return _this;
    }
    /**
     * Parses create anonymous subscription batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition.create();
     */
    BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition.prototype.create = function () {
        return this.baseCreate(this.createRoute, {});
    };
    /**
     * Parses remove anonymous subscription batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsSubscriptionsAnonymousBatchRouteDefinitio.delete();
     */
    BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition.prototype.delete = function () {
        return this.baseDelete(this.deleteRoute, {});
    };
    /**
     * Parses update anonymous subscription batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition.update();
     */
    BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition.prototype.update = function () {
        return this.baseUpdate(this.updateRoute, {});
    };
    return BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition);
exports.BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition = BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSubscriptionsAnonymousClient
 * @description Baasic Notifications Subscriptions Anonymous Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsSubscriptionsAnonymousClient` uses `baasicNotificationsSubscriptionsAnonymousRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsSubscriptionsAnonymousClient = (function () {
    function BaasicNotificationsSubscriptionsAnonymousClient(baasicNotificationsSubscriptionsAnonymousRouteDefinition, baasicApiClient) {
        this.baasicNotificationsSubscriptionsAnonymousRouteDefinition = baasicNotificationsSubscriptionsAnonymousRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    BaasicNotificationsSubscriptionsAnonymousClient.prototype.routeDefinition = function () {
        return this.baasicNotificationsSubscriptionsAnonymousRouteDefinition;
    };
    /**
     * Returns a promise that is resolved once the create anonymous subscription action has been performed; this action creates a new anonymous subscription resource.
     * @method
     * @param data An AnonymousSubscription object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create anonymous subscription action has been performed.
     * @example baasicNotificationsSubscriptionsAnonymousClient.create({
                    channel: '<channel-name>',
                    registrationId: '<registration-id>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsSubscriptionsAnonymousClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicNotificationsSubscriptionsAnonymousRouteDefinition.create(), this.baasicNotificationsSubscriptionsAnonymousRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of anonymous subscription resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicNotificationsSubscriptionsAnonymousClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>',
                    channels: '<channel-name1>,<channel-name2>',
                    registrationIds: '<registration-id1>,<registration-id2>',
                    embed: '<embed>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsSubscriptionsAnonymousClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicNotificationsSubscriptionsAnonymousRouteDefinition.find());
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified anonymous subscription resource.
     * @method
     * @param id The subscription identifier which uniquely identifies AnonymousSubscription resource that needs to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicNotificationsSubscriptionsAnonymousClient.get('<subscription-id>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     */
    BaasicNotificationsSubscriptionsAnonymousClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicNotificationsSubscriptionsAnonymousRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the remove anonymous subscription action has been performed. This action will remove a anonymous subscription resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicNotificationsSubscriptionsAnonymousRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(subscription);
     * var uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data The subscription identifier used to delete specific subscription resource in the system.
     * @returns A promise that is resolved once the remove anonymous subscription action has been performed.
     * @example // subscription is a resource previously fetched using get action.
                        baasicNotificationsSubscriptionsAnonymousClient.remove(subscription)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     */
    BaasicNotificationsSubscriptionsAnonymousClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicNotificationsSubscriptionsAnonymousRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the update anonymous subscription action has been performed; this action updates a anonymous subscription resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicNotificationsSubscriptionsAnonymousRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(subscription);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An object used to update specified AnonymousSubscription resource.
     * @returns A promise that is resolved once the update anonymous subscription action has been performed.
     * @example // subscription is a resource previously fetched using get action.
                    subscription.channel = '<channel-name>';
                    baasicNotificationsSubscriptionsAnonymousClient.update(subscription)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     */
    BaasicNotificationsSubscriptionsAnonymousClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicNotificationsSubscriptionsAnonymousRouteDefinition.update(data), this.baasicNotificationsSubscriptionsAnonymousRouteDefinition.updateParams(data));
    };
    return BaasicNotificationsSubscriptionsAnonymousClient;
}());
BaasicNotificationsSubscriptionsAnonymousClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsAnonymousRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsSubscriptionsAnonymousRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsSubscriptionsAnonymousClient);
exports.BaasicNotificationsSubscriptionsAnonymousClient = BaasicNotificationsSubscriptionsAnonymousClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSubscriptionsAnonymousRouteDefinition
 * @description Baasic Notifications Subscriptions Anonymous Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Subscriptions Anonymous Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsSubscriptionsAnonymousRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsSubscriptionsAnonymousRouteDefinition, _super);
    function BaasicNotificationsSubscriptionsAnonymousRouteDefinition(baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition = baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition;
        _this.appOptions = appOptions;
        _this.createRoute = 'notifications/subscriptions/batch';
        _this.findRoute = 'notifications/subscriptions/anonymous/{?searchQuery,registrationIds,channels,page,rpp,sort,embed,fields}';
        _this.getRoute = 'notifications/subscriptions/anonymous/{id}/{?embed,fields}';
        _this.deleteRoute = 'notifications/subscriptions/anonymous/{id}';
        _this.updateRoute = 'notifications/subscriptions/anonymous/{id}';
        return _this;
    }
    Object.defineProperty(BaasicNotificationsSubscriptionsAnonymousRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicNotificationsSubscriptionsAnonymousBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses create anonymous subscription route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsSubscriptionsAnonymousRouteDefinition.create();
     */
    BaasicNotificationsSubscriptionsAnonymousRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses find anonymous subscriptions route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing user subscription properties using the phrase search.
     * - `registrationIds` - Comma separated list of anonymous registration identifiers.
     * - `channels` - Comma separated list of channels.
     * - `page` - A value used to set the page number, i.e. to retrieve certain user subscription subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the user subscription property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicNotificationsSubscriptionsAnonymousRouteDefinition.find({
                   searchQuery: '<search-phrase>',
                   channels: '<channel-name>,<channel-name>'
               });
    */
    BaasicNotificationsSubscriptionsAnonymousRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get anonymous subscription route; this route should be expanded with the Id of anonymous subscription resource.
     * @method
     * @param id The subscription identifier which uniquely identifies AnonymousSubscription resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicNotificationsSubscriptionsAnonymousRouteDefinition.get({id: '<subscription-id>'});
     */
    BaasicNotificationsSubscriptionsAnonymousRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses delete anonymous subscription route; this route should be expanded with the Id of anonymous subscription resource.
     * @method
     * @param data The subscription identifier used to delete specific subscription resource in the system.
     * @example baasicNotificationsSubscriptionsAnonymousRouteDefinition.delete(data);
     */
    BaasicNotificationsSubscriptionsAnonymousRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
     * Parses update anonymous subscription route; this route should be expanded with the Id of anonymous subscription resource.
     * @method
     * @param data The subscription identifier used to update specific subscription resource in the system.
     * @example baasicNotificationsSubscriptionsAnonymousRouteDefinition.update(data);
     */
    BaasicNotificationsSubscriptionsAnonymousRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicNotificationsSubscriptionsAnonymousRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsSubscriptionsAnonymousRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition)),
    __param(1, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition, Object])
], BaasicNotificationsSubscriptionsAnonymousRouteDefinition);
exports.BaasicNotificationsSubscriptionsAnonymousRouteDefinition = BaasicNotificationsSubscriptionsAnonymousRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSubscriptionsClient
 * @description Baasic Notifications Subscriptions Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsSubscriptionsClient` uses `baasicNotificationsSubscriptionsRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsSubscriptionsClient = (function () {
    function BaasicNotificationsSubscriptionsClient(baasicNotificationsSubscriptionsRouteDefinition, baasicNotificationsSubscriptionsAnonymousClient, baasicNotificationsSubscriptionsUsersClient) {
        this.baasicNotificationsSubscriptionsRouteDefinition = baasicNotificationsSubscriptionsRouteDefinition;
        this.baasicNotificationsSubscriptionsAnonymousClient = baasicNotificationsSubscriptionsAnonymousClient;
        this.baasicNotificationsSubscriptionsUsersClient = baasicNotificationsSubscriptionsUsersClient;
    }
    Object.defineProperty(BaasicNotificationsSubscriptionsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicNotificationsSubscriptionsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsSubscriptionsClient.prototype, "anonymous", {
        get: function () {
            return this.baasicNotificationsSubscriptionsAnonymousClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsSubscriptionsClient.prototype, "users", {
        get: function () {
            return this.baasicNotificationsSubscriptionsUsersClient;
        },
        enumerable: true,
        configurable: true
    });
    return BaasicNotificationsSubscriptionsClient;
}());
BaasicNotificationsSubscriptionsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsRouteDefinition)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsAnonymousClient)),
    __param(2, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsUsersClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsSubscriptionsRouteDefinition,
        notifications_1.BaasicNotificationsSubscriptionsAnonymousClient,
        notifications_1.BaasicNotificationsSubscriptionsUsersClient])
], BaasicNotificationsSubscriptionsClient);
exports.BaasicNotificationsSubscriptionsClient = BaasicNotificationsSubscriptionsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSubscriptionsRouteDefinition
 * @description Baasic Notifications Subscriptions Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsSubscriptionsRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsSubscriptionsRouteDefinition, _super);
    function BaasicNotificationsSubscriptionsRouteDefinition(baasicNotificationsSubscriptionsAnonymousRouteDefinition, baasicNotificationsSubscriptionsUsersRouteDefinition, appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.baasicNotificationsSubscriptionsAnonymousRouteDefinition = baasicNotificationsSubscriptionsAnonymousRouteDefinition;
        _this.baasicNotificationsSubscriptionsUsersRouteDefinition = baasicNotificationsSubscriptionsUsersRouteDefinition;
        _this.appOptions = appOptions;
        return _this;
    }
    Object.defineProperty(BaasicNotificationsSubscriptionsRouteDefinition.prototype, "users", {
        get: function () {
            return this.baasicNotificationsSubscriptionsUsersRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicNotificationsSubscriptionsRouteDefinition.prototype, "anonymous", {
        get: function () {
            return this.baasicNotificationsSubscriptionsAnonymousRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    return BaasicNotificationsSubscriptionsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsSubscriptionsRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsAnonymousRouteDefinition)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsUsersRouteDefinition)),
    __param(2, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsSubscriptionsAnonymousRouteDefinition,
        notifications_1.BaasicNotificationsSubscriptionsUsersRouteDefinition, Object])
], BaasicNotificationsSubscriptionsRouteDefinition);
exports.BaasicNotificationsSubscriptionsRouteDefinition = BaasicNotificationsSubscriptionsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSubscriptionsUsersBatchClient
 * @description Baasic Notifications Subscriptions Users Batch Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsSubscriptionsUsersBatchUsersClient` uses `baasicNotificationsSubscriptionsUsersBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsSubscriptionsUsersBatchClient = (function () {
    function BaasicNotificationsSubscriptionsUsersBatchClient(baasicNotificationsSubscriptionsUsersBatchRouteDefinition, baasicApiClient) {
        this.baasicNotificationsSubscriptionsUsersBatchRouteDefinition = baasicNotificationsSubscriptionsUsersBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create user subscription action has been performed; this action creates new user subscription resources.
     * @method
     * @param data UserSubscription collection that need to be inserted into the system.
     * @returns A promise that is resolved once the create user subscription action has been performed.
     * @example baasicNotificationsSubscriptionsUsersBatchClient.create([{
                    channel: '<channel-name>',
                    userId: '<user-id>'
                }])
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsSubscriptionsUsersBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicNotificationsSubscriptionsUsersBatchRouteDefinition.create(), this.baasicNotificationsSubscriptionsUsersBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove user subscription resources from the system if successfully completed.
     * @method
     * @param ids The subscription ids which uniquely identify UserSubscription resources that need to be deleted.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example baasicNotificationsSubscriptionsUsersBatchClient.remove(subscriptionIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     */
    BaasicNotificationsSubscriptionsUsersBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicNotificationsSubscriptionsUsersBatchRouteDefinition.delete(), undefined, ids);
    };
    /**
     * Returns a promise that is resolved once the update user subscriptions action has been performed; this action updates specified user subscription resources.
     * @method
     * @param data UserSubscription objects used to update specified UserSubscription resources.
     * @returns A promise that is resolved once the update user subscriptions action has been performed.
     * @example baasicNotificationsSubscriptionsUsersBatchClient.update(subscriptions)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     */
    BaasicNotificationsSubscriptionsUsersBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicNotificationsSubscriptionsUsersBatchRouteDefinition.update(), this.baasicNotificationsSubscriptionsUsersBatchRouteDefinition.updateParams(data));
    };
    return BaasicNotificationsSubscriptionsUsersBatchClient;
}());
BaasicNotificationsSubscriptionsUsersBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsUsersBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsSubscriptionsUsersBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsSubscriptionsUsersBatchClient);
exports.BaasicNotificationsSubscriptionsUsersBatchClient = BaasicNotificationsSubscriptionsUsersBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSubscriptionsUsersBatchRouteDefinition
 * @description Baasic Notifications Subscriptions Users Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Subscriptions Users Batch Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicNotificationsSubscriptionsUsersBatchRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsSubscriptionsUsersBatchRouteDefinition, _super);
    function BaasicNotificationsSubscriptionsUsersBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'notifications/subscriptions/batch';
        _this.deleteRoute = 'notifications/subscriptions/batch';
        _this.updateRoute = 'notifications/subscriptions/batch';
        return _this;
    }
    /**
     * Parses create user subscriptions batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsSubscriptionsUsersBatchRouteDefinition.create();
     */
    BaasicNotificationsSubscriptionsUsersBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses remove user subscriptions batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsSubscriptionsUsersBatchRouteDefinition.delete(ids);
     */
    BaasicNotificationsSubscriptionsUsersBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    /**
     * Parses update user subscriptions batch route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsSubscriptionsUsersBatchRouteDefinition.update();
     */
    BaasicNotificationsSubscriptionsUsersBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    return BaasicNotificationsSubscriptionsUsersBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsSubscriptionsUsersBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicNotificationsSubscriptionsUsersBatchRouteDefinition);
exports.BaasicNotificationsSubscriptionsUsersBatchRouteDefinition = BaasicNotificationsSubscriptionsUsersBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSubscriptionsUsersClient
 * @description Baasic Notifications Subscriptions Users Client provides an easy way to consume Baasic Notifications REST API end-points. In order to obtain needed routes `baasicNotificationsSubscriptionsUsersClient` uses `baasicNotificationsSubscriptionsUsersRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsSubscriptionsUsersClient = (function () {
    function BaasicNotificationsSubscriptionsUsersClient(baasicNotificationsSubscriptionsUsersRouteDefinition, BaasicNotificationsSubscriptionsUsersBatchClient, baasicApiClient) {
        this.baasicNotificationsSubscriptionsUsersRouteDefinition = baasicNotificationsSubscriptionsUsersRouteDefinition;
        this.BaasicNotificationsSubscriptionsUsersBatchClient = BaasicNotificationsSubscriptionsUsersBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    BaasicNotificationsSubscriptionsUsersClient.prototype.routeDefinition = function () {
        return this.baasicNotificationsSubscriptionsUsersRouteDefinition;
    };
    BaasicNotificationsSubscriptionsUsersClient.prototype.batch = function () {
        return this.BaasicNotificationsSubscriptionsUsersBatchClient;
    };
    /**
     * Returns a promise that is resolved once the create user subscription action has been performed; this action creates a new user subscription resource.
     * @method
     * @param data An UserSubscription object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create user subscription action has been performed.
     * @example baasicNotificationsSubscriptionsUsersClient.create({
                    channel: '<channel-name>',
                    userId: '<user-id>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsSubscriptionsUsersClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicNotificationsSubscriptionsUsersRouteDefinition.create(), this.baasicNotificationsSubscriptionsUsersRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of user subscription resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicNotificationsSubscriptionsUsersClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>',
                    channels: '<channel-name1>,<channel-name2>',
                    userIds: '<user-id1>,<user-id2>',
                    embed: '<embed>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     */
    BaasicNotificationsSubscriptionsUsersClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicNotificationsSubscriptionsUsersRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified user subscription resource.
     * @method
     * @param id The subscription identifier which uniquely identifies UserSubscription resource that needs to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicNotificationsSubscriptionsUsersClient.get('<subscription-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    */
    BaasicNotificationsSubscriptionsUsersClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicNotificationsSubscriptionsUsersRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the remove user subscription action has been performed. This action will remove a user subscription resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicNotificationsSubscriptionsUsersRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(subscription);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An object used to delete specified UserSubscription resource.
     * @returns A promise that is resolved once the remove user subscription action has been performed.
     * @example // subscription is a resource previously fetched using get action.
                    baasicNotificationsSubscriptionsUsersClient.remove(subscription)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     */
    BaasicNotificationsSubscriptionsUsersClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicNotificationsSubscriptionsUsersRouteDefinition.delete(data));
    };
    /**
     * Returns a promise that is resolved once the update user subscription action has been performed; this action updates a user subscription resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicNotificationsSubscriptionsUsersRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(subscription);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An object used to update specified UserSubscription resource.
     * @example // subscription is a resource previously fetched using get action.
                       subscription.channel = '<channel-name>';
                       baasicNotificationsSubscriptionsUsersClient.update(subscription)
                           .then(function (data) {
                               // perform success action here
                           },
                            function (response, status, headers, config) {
                                // perform error handling here
                           });
    */
    BaasicNotificationsSubscriptionsUsersClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicNotificationsSubscriptionsUsersRouteDefinition.update(data), this.baasicNotificationsSubscriptionsUsersRouteDefinition.updateParams(data));
    };
    return BaasicNotificationsSubscriptionsUsersClient;
}());
BaasicNotificationsSubscriptionsUsersClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsUsersRouteDefinition)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsUsersBatchClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [notifications_1.BaasicNotificationsSubscriptionsUsersRouteDefinition,
        notifications_1.BaasicNotificationsSubscriptionsUsersBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicNotificationsSubscriptionsUsersClient);
exports.BaasicNotificationsSubscriptionsUsersClient = BaasicNotificationsSubscriptionsUsersClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicNotificationsSubscriptionsUsersRouteDefinition
 * @description Baasic Notifications Subscriptions Users Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Notifications Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var notifications_1 = __webpack_require__(6);
var BaasicNotificationsSubscriptionsUsersRouteDefinition = (function (_super) {
    __extends(BaasicNotificationsSubscriptionsUsersRouteDefinition, _super);
    function BaasicNotificationsSubscriptionsUsersRouteDefinition(appOptions, baasicNotificationsSubscriptionsUsersBatchRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicNotificationsSubscriptionsUsersBatchRouteDefinition = baasicNotificationsSubscriptionsUsersBatchRouteDefinition;
        _this.createRoute = 'notifications/subscriptions';
        _this.findRoute = 'notifications/subscriptions/{?searchQuery,userIds,channels,page,rpp,sort,embed,fields}';
        _this.getRoute = 'notifications/subscriptions/{id}/{?embed,fields}';
        _this.deleteRoute = 'notifications/subscriptions/{id}';
        _this.updateRoute = 'notifications/subscriptions/{id}';
        return _this;
    }
    BaasicNotificationsSubscriptionsUsersRouteDefinition.prototype.batch = function () {
        return this.baasicNotificationsSubscriptionsUsersBatchRouteDefinition;
    };
    /**
     * Parses create user subscription route; this route does not expose any additional options
     * @method
     * @example baasicNotificationsSubscriptionsUsersRouteDefinition.create();
     */
    BaasicNotificationsSubscriptionsUsersRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses find user subscriptions route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing user subscription properties using the phrase search.
     * - `userIds` - Comma separated list of user identifiers.
     * - `channels` - Comma separated list of channels.
     * - `page` - A value used to set the page number, i.e. to retrieve certain user subscriptions subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the user subscription property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @example baasicNotificationsSubscriptionsUsersRouteDefinition.find({ searchQuery: '<search-phrase>', channels: '<channel-name>,<channel-name>' });
     */
    BaasicNotificationsSubscriptionsUsersRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get user subscription route; this route should be expanded with the Id of user subscription resource.
     * @method
     * @param id The subscription identifier which uniquely identifies UserSubscription resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicNotificationsSubscriptionsUsersRouteDefinition.get({ id: '<subscription-id>' });
     */
    BaasicNotificationsSubscriptionsUsersRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses delete user subscription route; this route should be expanded with the Id of user subscription resource.
     * @method
     * @param data An object used to delete specified UserSubscription resource.
     * @example baasicNotificationsSubscriptionsUsersRouteDefinition.delete(data);
     */
    BaasicNotificationsSubscriptionsUsersRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    /**
     * Parses update user subscription route; this route should be expanded with the Id of user subscription resource.
     * @method
     * @param data An object used to update specified UserSubscription resource.
     * @example baasicNotificationsSubscriptionsUsersRouteDefinition.update(data);
     */
    BaasicNotificationsSubscriptionsUsersRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    return BaasicNotificationsSubscriptionsUsersRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicNotificationsSubscriptionsUsersRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(notifications_1.TYPES.BaasicNotificationsSubscriptionsUsersBatchRouteDefinition)),
    __metadata("design:paramtypes", [Object, notifications_1.BaasicNotificationsSubscriptionsUsersBatchRouteDefinition])
], BaasicNotificationsSubscriptionsUsersRouteDefinition);
exports.BaasicNotificationsSubscriptionsUsersRouteDefinition = BaasicNotificationsSubscriptionsUsersRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var notifications_1 = __webpack_require__(6);
var TYPES = {
    BaasicNotificationsClient: Symbol("BaasicNotificationsClient"),
    BaasicNotificationsPublishBatchClient: Symbol("BaasicNotificationsPublishBatchClient"),
    BaasicNotificationsPublishBatchRouteDefinition: Symbol("BaasicNotificationsPublishBatchRouteDefinition"),
    BaasicNotificationsPublishRouteDefinition: Symbol("BaasicNotificationsPublishRouteDefinition"),
    BaasicNotificationsPublishClient: Symbol("BaasicNotificationsPublishClient"),
    BaasicNotificationsRegistrationsAnonymousBatchClient: Symbol("BaasicNotificationsRegistrationsAnonymousBatchClient"),
    BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition: Symbol("BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition"),
    BaasicNotificationsRegistrationsAnonymousClient: Symbol("BasicNotificationsRegistrationsAnonymousClient"),
    BaasicNotificationsRegistrationsAnonymousRouteDefinition: Symbol("BaasicNotificationsRegistrationsAnonymousRouteDefinition"),
    BaasicNotificationsRegistrationsRouteDefinition: Symbol("BaasicNotificationsRegistrationsRouteDefinition"),
    BaasicNotificationsRegistrationsUsersBatchRouteDefinition: Symbol("BaasicNotificationsRegistrationsUsersBatchRouteDefinition"),
    BaasicNotificationsRegistrationsUsersBatchClient: Symbol("BaasicNotificationsRegistrationsUsersBatchClient"),
    BaasicNotificationsRegistrationsUsersClient: Symbol("BaasicNotificationsRegistrationsUsersClient"),
    BaasicNotificationsRegistrationsUsersRouteDefinition: Symbol("BaasicNotificationsRegistrationsUsersRouteDefinition"),
    BaasicNotificationsRouteDefinition: Symbol("BaasicNotificationsRouteDefinition"),
    BaasicNotificationsRegistrationsClient: Symbol("BaasicNotificationsRegistrationsClient"),
    BaasicNotificationsSubscriptionsClient: Symbol("BaasicNotificationsSubscriptionsClient"),
    BaasicNotificationsSubscriptionsRouteDefinition: Symbol("BaasicNotificationsSubscriptionsRouteDefinition"),
    BaasicNotificationsSubscriptionsAnonymousBatchClient: Symbol("BaasicNotificationsSubscriptionsAnonymousBatchClient"),
    BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition: Symbol("BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition"),
    BaasicNotificationsSubscriptionsAnonymousRouteDefinition: Symbol("BaasicNotificationsSubscriptionsAnonymousRouteDefinition"),
    BaasicNotificationsSubscriptionsAnonymousClient: Symbol("BaasicNotificationsSubscriptionsAnonymousClient"),
    BaasicNotificationsSubscriptionsUsersRouteDefinition: Symbol("BasicNotificationsSubscriptionsRouteDefinition"),
    BaasicNotificationsSubscriptionsUsersBatchClient: Symbol("BaasicNotificationsSubscriptionsUsersBatchClient"),
    BaasicNotificationsSubscriptionsUsersBatchRouteDefinition: Symbol("BaasicNotificationsSubscriptionsUsersBatchRouteDefinition"),
    BaasicNotificationsSubscriptionsUsersClient: Symbol("BaasicNotificationsSubscriptionsUsersClient"),
    BaasicNotificationsSettingsRouteDefinition: Symbol("BaasicNotificationsSettingsRouteDefinition"),
    BaasicNotificationsSettingsClient: Symbol("BaasicNotificationsSettingsClient")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicNotificationsPublishBatchRouteDefinition).to(notifications_1.BaasicNotificationsPublishBatchRouteDefinition);
    bind(TYPES.BaasicNotificationsPublishBatchClient).to(notifications_1.BaasicNotificationsPublishBatchClient);
    bind(TYPES.BaasicNotificationsPublishRouteDefinition).to(notifications_1.BaasicNotificationsPublishRouteDefinition);
    bind(TYPES.BaasicNotificationsPublishClient).to(notifications_1.BaasicNotificationsPublishClient);
    bind(TYPES.BaasicNotificationsSubscriptionsUsersBatchRouteDefinition).to(notifications_1.BaasicNotificationsSubscriptionsUsersBatchRouteDefinition);
    bind(TYPES.BaasicNotificationsSubscriptionsUsersBatchClient).to(notifications_1.BaasicNotificationsSubscriptionsUsersBatchClient);
    bind(TYPES.BaasicNotificationsSubscriptionsUsersRouteDefinition).to(notifications_1.BaasicNotificationsSubscriptionsUsersRouteDefinition);
    bind(TYPES.BaasicNotificationsSubscriptionsUsersClient).to(notifications_1.BaasicNotificationsSubscriptionsUsersClient);
    bind(TYPES.BaasicNotificationsSubscriptionsAnonymousRouteDefinition).to(notifications_1.BaasicNotificationsSubscriptionsAnonymousRouteDefinition);
    bind(TYPES.BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition).to(notifications_1.BaasicNotificationsSubscriptionsAnonymousBatchRouteDefinition);
    bind(TYPES.BaasicNotificationsSubscriptionsAnonymousBatchClient).to(notifications_1.BaasicNotificationsSubscriptionsAnonymousBatchClient);
    bind(TYPES.BaasicNotificationsSubscriptionsAnonymousClient).to(notifications_1.BaasicNotificationsSubscriptionsAnonymousClient);
    bind(TYPES.BaasicNotificationsSubscriptionsRouteDefinition).to(notifications_1.BaasicNotificationsSubscriptionsRouteDefinition);
    bind(TYPES.BaasicNotificationsSubscriptionsClient).to(notifications_1.BaasicNotificationsSubscriptionsClient);
    bind(TYPES.BaasicNotificationsRegistrationsUsersBatchRouteDefinition).to(notifications_1.BaasicNotificationsRegistrationsUsersBatchRouteDefinition);
    bind(TYPES.BaasicNotificationsRegistrationsUsersBatchClient).to(notifications_1.BaasicNotificationsRegistrationsUsersBatchClient);
    bind(TYPES.BaasicNotificationsRegistrationsUsersRouteDefinition).to(notifications_1.BaasicNotificationsRegistrationsUsersRouteDefinition);
    bind(TYPES.BaasicNotificationsRegistrationsUsersClient).to(notifications_1.BaasicNotificationsRegistrationsUsersClient);
    bind(TYPES.BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition).to(notifications_1.BaasicNotificationsRegistrationsAnonymousBatchRouteDefinition);
    bind(TYPES.BaasicNotificationsRegistrationsAnonymousBatchClient).to(notifications_1.BaasicNotificationsRegistrationsAnonymousBatchClient);
    bind(TYPES.BaasicNotificationsRegistrationsAnonymousRouteDefinition).to(notifications_1.BaasicNotificationsRegistrationsAnonymousRouteDefinition);
    bind(TYPES.BaasicNotificationsRegistrationsAnonymousClient).to(notifications_1.BaasicNotificationsRegistrationsAnonymousClient);
    bind(TYPES.BaasicNotificationsRegistrationsRouteDefinition).to(notifications_1.BaasicNotificationsRegistrationsRouteDefinition);
    bind(TYPES.BaasicNotificationsRegistrationsClient).to(notifications_1.BaasicNotificationsRegistrationsClient);
    bind(TYPES.BaasicNotificationsSettingsRouteDefinition).to(notifications_1.BaasicNotificationsSettingsRouteDefinition);
    bind(TYPES.BaasicNotificationsSettingsClient).to(notifications_1.BaasicNotificationsSettingsClient);
    bind(TYPES.BaasicNotificationsRouteDefinition).to(notifications_1.BaasicNotificationsRouteDefinition);
    bind(TYPES.BaasicNotificationsClient).to(notifications_1.BaasicNotificationsClient);
});
exports.diModule = diModule;


/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicTemplatingBatchClient
 * @description Baasic Templating Batch Client provides an easy way to consume Baasic Templating REST API end-points. In order to obtain a needed routes `baasicTemplatingBatchClient` uses `baasicTemplatingBatchRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var templating_1 = __webpack_require__(21);
var BaasicTemplatingBatchClient = (function () {
    function BaasicTemplatingBatchClient(baasicTemplatingBatchRouteDefinition, baasicApiClient) {
        this.baasicTemplatingBatchRouteDefinition = baasicTemplatingBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicTemplatingBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicTemplatingBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create action has been performed; this action creates new template resources.
     * @method
     * @param data An Template objects that need to be inserted into the system.
     * @returns A promise that is resolved once the create action has been performed.
     * @example baasicTemplatingBatchClient.create([{ content : '<content>', templateId : '<template-id>' }])
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
    **/
    BaasicTemplatingBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicTemplatingBatchRouteDefinition.create(), this.baasicTemplatingBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update action has been performed; this action updates specified template resources.
     * @method
     * @param data An Template objects that need to be inserted into the system.
     * @returns A promise that is resolved once the update action has been performed.
     * @example baasicTemplatingBatchClient.update(templates)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicTemplatingBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicTemplatingBatchRouteDefinition.update(), this.baasicTemplatingBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove template resources from the system if successfully completed.
     * @method
     * @param ids Template ids which uniquely identify Template resources that need to be deleted.
     * @returns A promise that is resolved once the update action has been performed.
     * @example baasicTemplatingBatchClient.remove(companyIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicTemplatingBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicTemplatingBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicTemplatingBatchClient;
}());
BaasicTemplatingBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(templating_1.TYPES.BaasicTemplatingBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [templating_1.BaasicTemplatingBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicTemplatingBatchClient);
exports.BaasicTemplatingBatchClient = BaasicTemplatingBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*global module */
/**
 * @module baasicTemplatingBatchRouteDefinition
 * @description Baasic Templating Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Templating Batch Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicTemplatingBatchRouteDefinition = (function (_super) {
    __extends(BaasicTemplatingBatchRouteDefinition, _super);
    function BaasicTemplatingBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'templates/batch';
        _this.updateRoute = 'templates/batch';
        _this.deleteRoute = 'templates/batch';
        return _this;
    }
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicTemplatingBatchRouteDefinition.create();
     **/
    BaasicTemplatingBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicTemplatingBatchRouteDefinition.update();
     **/
    BaasicTemplatingBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove route; this URI template does not expose any additional options.
     * @method
     * @example baasicTemplatingBatchRouteDefinition.delete();
     **/
    BaasicTemplatingBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicTemplatingBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicTemplatingBatchRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicTemplatingBatchRouteDefinition);
exports.BaasicTemplatingBatchRouteDefinition = BaasicTemplatingBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicTemplatingClient
 * @description Baasic Templating Client provides an easy way to consume Baasic Templating REST API end-points. In order to obtain a needed routes `baasicTemplatingClient` uses `baasicTemplatingRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var templating_1 = __webpack_require__(21);
var BaasicTemplatingClient = (function () {
    function BaasicTemplatingClient(baasicTemplatingRouteDefinition, baasicTemplatingBatchClient, baasicApiClient) {
        this.baasicTemplatingRouteDefinition = baasicTemplatingRouteDefinition;
        this.baasicTemplatingBatchClient = baasicTemplatingBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicTemplatingClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicTemplatingRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicTemplatingClient.prototype, "batch", {
        get: function () {
            return this.baasicTemplatingBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of template resources matching the given criteria.
     * @method
     * @param options Query resource options.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicTemplatingClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicTemplatingClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicTemplatingRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified template resource.
     * @method
     * @param id Template id which uniquely identifies Template resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicTemplatingClient.get('<template-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicTemplatingClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicTemplatingRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create template action has been performed; this action creates a new template resource.
     * @method
     * @param data An Template object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create template action has been performed.
     * @example baasicTemplatingClient.create({  content : '<content>',  templateId : '<template-id>' })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicTemplatingClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicTemplatingRouteDefinition.create(), this.baasicTemplatingRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update template action has been performed; this action updates a template resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicTemplatingRouteService` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(template);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An template object used to update specified Template resource.
     * @returns A promise that is resolved once the update template action has been performed.
     * @example // template is a resource previously fetched using get action.
                    template.content = '<new-content>';
                    baasicTemplatingClient.update(template)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicTemplatingClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicTemplatingRouteDefinition.update(data), this.baasicTemplatingRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a template resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicTemplatingRouteDefiniton` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(template);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An template object used to delete specified Template resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example // template is a resource previously fetched using get action.
                    baasicTemplatingClient.remove(template)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicTemplatingClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicTemplatingRouteDefinition.delete(data));
    };
    return BaasicTemplatingClient;
}());
BaasicTemplatingClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(templating_1.TYPES.BaasicTemplatingRouteDefinition)),
    __param(1, inversify_1.inject(templating_1.TYPES.BaasicTemplatingBatchClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [templating_1.BaasicTemplatingRouteDefinition,
        templating_1.BaasicTemplatingBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicTemplatingClient);
exports.BaasicTemplatingClient = BaasicTemplatingClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*global module */
/**
 * @module baasicTemplatingRouteDefinition
 * @description Baasic Templating Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Templating Route Definition to obtain a needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var templating_1 = __webpack_require__(21);
var contracts_1 = __webpack_require__(1);
var BaasicTemplatingRouteDefinition = (function (_super) {
    __extends(BaasicTemplatingRouteDefinition, _super);
    function BaasicTemplatingRouteDefinition(appOptions, baasicTemplatingBatchRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicTemplatingBatchRouteDefinition = baasicTemplatingBatchRouteDefinition;
        _this.findRoute = 'templates/{?searchQuery,page,rpp,sort,embed,fields,moduleNames}';
        _this.getRoute = 'templates/{id}/{?embed,fields}';
        _this.createRoute = 'templates';
        _this.updateRoute = 'templates/{id}';
        _this.deleteRoute = 'templates/{id}';
        return _this;
    }
    Object.defineProperty(BaasicTemplatingRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicTemplatingBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify template resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain template subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the template property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options.
     * @example baasicTemplatingRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicTemplatingRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route which must be expanded with the Id of the previously created template resource in the system.
     * @method
     * @param id Template id which uniquely identifies Template resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicTemplatingRouteDefinition.get({id: '<template-id>'});
     **/
    BaasicTemplatingRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicTemplatingRouteDefinition.create();
     **/
    BaasicTemplatingRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @param data An template object used to update specified Template resource.
     * @example baasicTemplatingRouteDefinition.update(data);
     **/
    BaasicTemplatingRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete route; this URI template does not expose any additional options.
     * @method
     * @param data An template object used to delete specified Template resource.
     * @example baasicTemplatingRouteDefinition.update(data);
     **/
    BaasicTemplatingRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicTemplatingRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicTemplatingRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(templating_1.TYPES.BaasicTemplatingBatchRouteDefinition)),
    __metadata("design:paramtypes", [Object, templating_1.BaasicTemplatingBatchRouteDefinition])
], BaasicTemplatingRouteDefinition);
exports.BaasicTemplatingRouteDefinition = BaasicTemplatingRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var templating_1 = __webpack_require__(21);
var TYPES = {
    BaasicTemplatingBatchClient: Symbol("BaasicTemplatingBatchClient"),
    BaasicTemplatingBatchRouteDefinition: Symbol("BaasicTemplatingBatchRouteDefinition"),
    BaasicTemplatingClient: Symbol("BaasicTemplatingClient"),
    BaasicTemplatingRouteDefinition: Symbol("BaasicTemplatingRouteDefinition")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicTemplatingBatchRouteDefinition).to(templating_1.BaasicTemplatingBatchRouteDefinition);
    bind(TYPES.BaasicTemplatingBatchClient).to(templating_1.BaasicTemplatingBatchClient);
    bind(TYPES.BaasicTemplatingRouteDefinition).to(templating_1.BaasicTemplatingRouteDefinition);
    bind(TYPES.BaasicTemplatingClient).to(templating_1.BaasicTemplatingClient);
});
exports.diModule = diModule;


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCompanyBatchClient
 * @description Baasic Company Batch Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Company Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicCompanyBatchClient = (function () {
    function BaasicCompanyBatchClient(baasicCompanyBatchRouteDefinition, baasicApiClient) {
        this.baasicCompanyBatchRouteDefinition = baasicCompanyBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create company action has been performed; this action creates new company resources.
     * @method
     * @param data A collection of company objects that need to be inserted into the system.
     * @returns A promise that is resolved once the create company action has been performed.
     * @example  baasicCompanyBatchClient.create([{
                    description : '<description>',
                    name : '<name>',
                    slug: '<slug>'
                 }])
                 .then(function (data) {
                     // perform success action here
                  },
                   function (response, status, headers, config) {
                       // perform error handling here
                 });
     **/
    BaasicCompanyBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCompanyBatchRouteDefinition.create(), this.baasicCompanyBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update company action has been performed; this action updates specified company resources.
     * @method
     * @param data A collection of company objects used to update specified company resources.
     * @returns A promise that is resolved once the update company action has been performed.
     * @example   baasicCompanyBatchClient.update(companies)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCompanyBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCompanyBatchRouteDefinition.update(), this.baasicCompanyBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove company resources from the system if successfully completed.
     * @method
     * @param ids Collection of company ids which uniquely identifies company resources that need to be deleted.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example baasicCompanyBatchClient.remove(companyIds)
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicCompanyBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicCompanyBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicCompanyBatchClient;
}());
BaasicCompanyBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicCompanyBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicCompanyBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCompanyBatchClient);
exports.BaasicCompanyBatchClient = BaasicCompanyBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCompanyBatchRouteDefinition
 * @description Baasic Company Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Company Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicCompanyBatchRouteDefinition = (function (_super) {
    __extends(BaasicCompanyBatchRouteDefinition, _super);
    function BaasicCompanyBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'lookups/companies/batch';
        _this.updateRoute = 'lookups/companies/batch';
        _this.deleteRoute = 'lookups/companies/batch';
        return _this;
    }
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicCompanyRouteDefinition.create();
     **/
    BaasicCompanyBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicCompanyRouteDefinition.update();
     **/
    BaasicCompanyBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove route; this URI template does not expose any additional options.
     * @method
     * @example baasicCompanyRouteDefinition.remove();
     **/
    BaasicCompanyBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicCompanyBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCompanyBatchRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicCompanyBatchRouteDefinition);
exports.BaasicCompanyBatchRouteDefinition = BaasicCompanyBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCompanyClient
 * @description Baasic Company Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Company Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicCompanyClient = (function () {
    function BaasicCompanyClient(baasicCompanyBatchClient, baasicCompanyRouteDefinition, baasicApiClient) {
        this.baasicCompanyBatchClient = baasicCompanyBatchClient;
        this.baasicCompanyRouteDefinition = baasicCompanyRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicCompanyClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicCompanyRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicCompanyClient.prototype, "batch", {
        get: function () {
            return this.baasicCompanyBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of company resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicCompanyClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCompanyClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicCompanyRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the company resource.
     * @method
     * @param id Company id which uniquely identifies resource that needs to be retrieved.
     * @returns A promise that is resolved once the get action has been performed.
     * @param options Query resource options object.
     * @example baasicCompanyClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicCompanyClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicCompanyRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create company action has been performed; this action creates a new company resource.
     * @method
     * @param data A company object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create company action has been performed.
     * @example baasicCompanyClient.create({
                    description : '<description>',
                    name : '<name>',
                    slug: '<slug>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicCompanyClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicCompanyRouteDefinition.create(), this.baasicCompanyRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update company action has been performed; this action updates a company resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCompanyRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(company);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data A company object used to update specified company resource.
     * @returns A promise that is resolved once the update company action has been performed.
     * @example // company is a resource previously fetched using get action.
                    company.description = '<description>';
                    baasicCompanyService.update(company)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicCompanyClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicCompanyRouteDefinition.update(data), this.baasicCompanyRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a company resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicCompanyRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(company);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data A company object used to delete specified company resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example // company is a resource previously fetched using get action.
                    baasicCompanyClient.remove(company)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                    });
     **/
    BaasicCompanyClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicCompanyRouteDefinition.delete(data));
    };
    return BaasicCompanyClient;
}());
BaasicCompanyClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicCompanyBatchClient)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicCompanyRouteDefinition)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicCompanyBatchClient,
        userProfile_1.BaasicCompanyRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicCompanyClient);
exports.BaasicCompanyClient = BaasicCompanyClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicCompanyRouteDefinition
 * @description Baasic Company Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Company Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var userProfile_1 = __webpack_require__(7);
var contracts_1 = __webpack_require__(1);
var BaasicCompanyRouteDefinition = (function (_super) {
    __extends(BaasicCompanyRouteDefinition, _super);
    function BaasicCompanyRouteDefinition(appOptions, baasicCompanyBatchRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicCompanyBatchRouteDefinition = baasicCompanyBatchRouteDefinition;
        _this.findRoute = 'lookups/companies/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.createRoute = 'lookups/companies';
        _this.getRoute = 'lookups/companies/{id}/{?embed,fields}';
        _this.updateRoute = 'lookups/companies/{id}';
        _this.deleteRoute = 'lookups/companies/{id}';
        return _this;
    }
    Object.defineProperty(BaasicCompanyRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicCompanyBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing company properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain company subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the company property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicCompanyRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicCompanyRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicCompanyRouteDefinition.create();
     **/
    BaasicCompanyRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @param id Company id which uniquely identifies resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicCompanyRouteDefinition.get();
     **/
    BaasicCompanyRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    BaasicCompanyRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    BaasicCompanyRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicCompanyRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicCompanyRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicCompanyBatchRouteDefinition)),
    __metadata("design:paramtypes", [Object, userProfile_1.BaasicCompanyBatchRouteDefinition])
], BaasicCompanyRouteDefinition);
exports.BaasicCompanyRouteDefinition = BaasicCompanyRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicOrganizationBatchClient
 * @description Baasic Organization Batch Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Organization Batch Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicOrganizationBatchClient = (function () {
    function BaasicOrganizationBatchClient(baasicOrganizationBatchRouteDefinition, baasicApiClient) {
        this.baasicOrganizationBatchRouteDefinition = baasicOrganizationBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicOrganizationBatchClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicOrganizationBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the create organization action has been performed; this action creates new organization resources.
     * @method
     * @param data A collection of organization objects that need to be inserted into the system.
     * @returns A promise that is resolved once the create organization action has been performed.
     * @example   baasicOrganizationBatchClient.create([{
                    description : '<description>',
                    name : '<name>',
                    slug: '<slug>'
                  }])
                  .then(function (data) {
                      // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
     **/
    BaasicOrganizationBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicOrganizationBatchRouteDefinition.create(), this.baasicOrganizationBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update organization action has been performed; this action updates specified organization resources.
     * @method
     * @param data A collection of organization objects used to update specified organization resources.
     * @returns A promise that is resolved once the update organization action has been performed.
     * @example   baasicOrganizationBatchClient.update(organizations)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicOrganizationBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicOrganizationBatchRouteDefinition.update(), this.baasicOrganizationBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove organization resources from the system if successfully completed.
     * @method
     * @example baasicOrganizationBatchClient.remove(organizationIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicOrganizationBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicOrganizationBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicOrganizationBatchClient;
}());
BaasicOrganizationBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicOrganizationBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicOrganizationBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicOrganizationBatchClient);
exports.BaasicOrganizationBatchClient = BaasicOrganizationBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicOrganizationBatchRouteDefinition
 * @description Baasic Organization Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Organization Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicOrganizationBatchRouteDefinition = (function (_super) {
    __extends(BaasicOrganizationBatchRouteDefinition, _super);
    function BaasicOrganizationBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'lookups/organizations/batch';
        _this.updateRoute = 'lookups/organizations/batch';
        _this.deleteRoute = 'lookups/organizations/batch';
        return _this;
    }
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicOrganizationBatchRouteDefinition.create();
     **/
    BaasicOrganizationBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @example baasicOrganizationBatchRouteDefinition.update();
     **/
    BaasicOrganizationBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
     * Parses remove route; this URI template does not expose any additional options.
     * @method
     * @example baasicOrganizationBatchRouteDefinition.delete();
     **/
    BaasicOrganizationBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicOrganizationBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicOrganizationBatchRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicOrganizationBatchRouteDefinition);
exports.BaasicOrganizationBatchRouteDefinition = BaasicOrganizationBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicOrganizationClient
 * @description Baasic Organization Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Organization Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicOrganizationClient = (function () {
    function BaasicOrganizationClient(baasicOrganizationRouteDefinition, baasicOrganizationBatchClient, baasicApiClient) {
        this.baasicOrganizationRouteDefinition = baasicOrganizationRouteDefinition;
        this.baasicOrganizationBatchClient = baasicOrganizationBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicOrganizationClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicOrganizationRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicOrganizationClient.prototype, "batch", {
        get: function () {
            return this.baasicOrganizationBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of organization resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicOrganizationClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicOrganizationClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicOrganizationRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the organization resource.
     * @method
     * @param id Organization id which uniquely identifies resource that needs to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicOrganizationClient.get(id, options)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicOrganizationClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicOrganizationRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create organization action has been performed; this action creates a new organization resource.
     * @method
     * @param data An organization object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create organization action has been performed.
     * @example baasicOrganizationClient.create({
                    description : '<description>',
                    name : '<name>',
                    slug: '<slug>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicOrganizationClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicOrganizationRouteDefinition.create(), this.baasicOrganizationRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update organization action has been performed; this action updates an organization resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicOrganizationRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(organization);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An organization object used to update specified organization resource.
     * @returns A promise that is resolved once the update organization action has been performed.
     * @example // organization is a resource previously fetched using get action.
                    organization.description = '<description>';
                    baasicOrganizationClient.update(organization)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicOrganizationClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicOrganizationRouteDefinition.update(data), this.baasicOrganizationRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove an organization resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicOrganizationRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(organization);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An organization object used to delete specified organization resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example // organization is a resource previously fetched using get action.
                       baasicOrganizationClient.remove(organization)
                           .then(function (data) {
                               // perform success action here
                           },
                            function (response, status, headers, config) {
                                // perform error handling here
                           });
    **/
    BaasicOrganizationClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicOrganizationRouteDefinition.delete(data));
    };
    return BaasicOrganizationClient;
}());
BaasicOrganizationClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicOrganizationRouteDefinition)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicOrganizationBatchClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicOrganizationRouteDefinition,
        userProfile_1.BaasicOrganizationBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicOrganizationClient);
exports.BaasicOrganizationClient = BaasicOrganizationClient;


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicOrganizationRouteDefinition
 * @description Baasic Organization Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Organization Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var userProfile_1 = __webpack_require__(7);
var contracts_1 = __webpack_require__(1);
var BaasicOrganizationRouteDefinition = (function (_super) {
    __extends(BaasicOrganizationRouteDefinition, _super);
    function BaasicOrganizationRouteDefinition(appOptions, baasicOrganizationBatchRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicOrganizationBatchRouteDefinition = baasicOrganizationBatchRouteDefinition;
        _this.findRoute = 'lookups/organizations/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'lookups/organizations/{id}/{?embed,fields}';
        _this.createRoute = 'lookups/organizations';
        _this.updateRoute = 'lookups/organizations/{id}';
        _this.deleteRoute = 'lookups/organizations/{id}';
        return _this;
    }
    Object.defineProperty(BaasicOrganizationRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicOrganizationBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing organization properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain organization subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the organization property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicOrganizationRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicOrganizationRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @param id Organization id which uniquely identifies resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicOrganizationRouteDefinition.get(id, options);
     **/
    BaasicOrganizationRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicOrganizationRouteDefinition.create();
     **/
    BaasicOrganizationRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @param data An organization object used to update specified organization resource.
     * @example baasicOrganizationRouteDefinition.updata(data);
     **/
    BaasicOrganizationRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete route; this URI template does not expose any additional options.
     * @method
     * @param data An organization object used to delete specified organization resource.
     * @example baasicOrganizationRouteDefinition.delete(data);
     **/
    BaasicOrganizationRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicOrganizationRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicOrganizationRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicOrganizationBatchRouteDefinition)),
    __metadata("design:paramtypes", [Object, userProfile_1.BaasicOrganizationBatchRouteDefinition])
], BaasicOrganizationRouteDefinition);
exports.BaasicOrganizationRouteDefinition = BaasicOrganizationRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicSkillBatchClient
 * @description Baasic Skill Batch Service provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Skill Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicSkillBatchClient = (function () {
    function BaasicSkillBatchClient(baasicSkillBatchRouteDefinition, baasicApiClient) {
        this.baasicSkillBatchRouteDefinition = baasicSkillBatchRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the create skill action has been performed; this action creates new skill resources.
     * @method
     * @param data A collection of skill objects that need to be inserted into the system.
     * @returns A promise that is resolved once the create skill action has been performed.
     * @example   baasicSkillClient.create([{
                    description : '<description>',
                    name : '<name>',
                    slug: '<slug>'
                  }])
                  .then(function (data) {
                      // perform success action here
                  },
                    function (response, status, headers, config) {
                        // perform error handling here
                  });
     **/
    BaasicSkillBatchClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicSkillBatchRouteDefinition.create(), this.baasicSkillBatchRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update skill action has been performed; this action updates specified skill resources.
     * @method
     * @param data A collection of skill objects used to update specified skill resources.
     * @returns A promise that is resolved once the update skill action has been performed.
     * @example   baasicSkillBatchClient.update(companies)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicSkillBatchClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicSkillBatchRouteDefinition.update(), this.baasicSkillBatchRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove skill resources from the system if successfully completed.
     * @method
     * @param ids Collection of skill ids which uniquely identifies skill resources that need to be deleted.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example baasicSkillBatchClient.remove(skillIds)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicSkillBatchClient.prototype.remove = function (ids) {
        return this.baasicApiClient.delete(this.baasicSkillBatchRouteDefinition.delete(), undefined, ids);
    };
    return BaasicSkillBatchClient;
}());
BaasicSkillBatchClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicSkillBatchRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicSkillBatchRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicSkillBatchClient);
exports.BaasicSkillBatchClient = BaasicSkillBatchClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicSkillBatchRouteDefinition
 * @description Baasic Skill Batch Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Skill Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicSkillBatchRouteDefinition = (function (_super) {
    __extends(BaasicSkillBatchRouteDefinition, _super);
    function BaasicSkillBatchRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.createRoute = 'profile/lookups/skills/batch';
        _this.updateRoute = 'profile/lookups/skills/batch';
        _this.deleteRoute = 'profile/lookups/skills/batch';
        return _this;
    }
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicSkillBatchRouteDefinition.create();
     **/
    BaasicSkillBatchRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
      * Parses update route; this URI template does not expose any additional options.
      * @method
      * @example baasicSkillBatchRouteDefinition.update();
      **/
    BaasicSkillBatchRouteDefinition.prototype.update = function () {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, {});
    };
    /**
      * Parses delete route; this URI template does not expose any additional options.
      * @method
      * @example baasicSkillBatchRouteDefinition.delete();
      **/
    BaasicSkillBatchRouteDefinition.prototype.delete = function () {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, {});
    };
    return BaasicSkillBatchRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicSkillBatchRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicSkillBatchRouteDefinition);
exports.BaasicSkillBatchRouteDefinition = BaasicSkillBatchRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicSkillClient
 * @description Baasic Skill Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Skill Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicSkillClient = (function () {
    function BaasicSkillClient(baasicSkillRouteDefinition, baasicSkillBatchClient, baasicApiClient) {
        this.baasicSkillRouteDefinition = baasicSkillRouteDefinition;
        this.baasicSkillBatchClient = baasicSkillBatchClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicSkillClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicSkillRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicSkillClient.prototype, "batch", {
        get: function () {
            return this.baasicSkillBatchClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of skill resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicSkillClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicSkillClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicSkillRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the skill resource.
     * @method
     * @param id Skill id which uniquely identifies skill resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicSkillClient.get(id, options)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicSkillClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicSkillRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create skill action has been performed; this action creates a new skill resource.
     * @method
     * @param data A skill object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create skill action has been performed.
     * @example baasicSkillClient.create({
                    description : '<description>',
                    name : '<name>',
                    slug: '<slug>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicSkillClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicSkillRouteDefinition.create(), this.baasicSkillRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update skill action has been performed; this action updates a skill resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicSkillRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(skill);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data A skill object used to update specified skill resource.
     * @returns A promise that is resolved once the update skill action has been performed.
     * @example // skill is a resource previously fetched using get action.
                    skill.description = '<description>';
                    baasicSkillClient.update(skill)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicSkillClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicSkillRouteDefinition.update(data), this.baasicSkillRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a skill resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicSkillRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(skill);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param A skill object used to delete specified skill resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example // skill is a resource previously fetched using get action.
                       baasicSkillClient.remove(skill)
                           .then(function (data) {
                               // perform success action here
                           },
                            function (response, status, headers, config) {
                                // perform error handling here
                           });
    **/
    BaasicSkillClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicSkillRouteDefinition.delete(data));
    };
    return BaasicSkillClient;
}());
BaasicSkillClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicSkillRouteDefinition)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicSkillBatchClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicSkillRouteDefinition,
        userProfile_1.BaasicSkillBatchClient,
        httpApi_1.BaasicApiClient])
], BaasicSkillClient);
exports.BaasicSkillClient = BaasicSkillClient;


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicSkillRouteDefinition
 * @description Baasic Skill Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Skill Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var userProfile_1 = __webpack_require__(7);
var contracts_1 = __webpack_require__(1);
var BaasicSkillRouteDefinition = (function (_super) {
    __extends(BaasicSkillRouteDefinition, _super);
    function BaasicSkillRouteDefinition(appOptions, baasicSkillBatchRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicSkillBatchRouteDefinition = baasicSkillBatchRouteDefinition;
        _this.findRoute = 'profile/lookups/skills/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'profile/lookups/skills';
        _this.createRoute = 'profile/lookups/skills';
        _this.updateRoute = 'profile/lookups/skills/{id}';
        _this.deleteRoute = 'lookups/skills/{id}';
        return _this;
    }
    Object.defineProperty(BaasicSkillRouteDefinition.prototype, "batch", {
        get: function () {
            return this.baasicSkillBatchRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing skill properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain skill subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the skill property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicSkillRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicSkillRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @param id Skill id which uniquely identifies skill resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicSkillRouteDefinition.get(id, options);
     **/
    BaasicSkillRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @example baasicSkillRouteDefinition.create();
     **/
    BaasicSkillRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @param data A skill object used to update specified skill resource.
     * @example baasicSkillRouteDefinition.update(data);
     **/
    BaasicSkillRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete route; this URI template does not expose any additional options.
     * @method
     * @param data A skill object used to delete specified skill resource.
     * @example baasicSkillRouteDefinition.delete(data);
     **/
    BaasicSkillRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicSkillRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicSkillRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicSkillBatchRouteDefinition)),
    __metadata("design:paramtypes", [Object, userProfile_1.BaasicSkillBatchRouteDefinition])
], BaasicSkillRouteDefinition);
exports.BaasicSkillRouteDefinition = BaasicSkillRouteDefinition;


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserEducationClient  * @description Baasic User Education Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Education Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicUserEducationClient = (function () {
    function BaasicUserEducationClient(baasicUserEducationRouteDefinition, baasicApiClient) {
        this.baasicUserEducationRouteDefinition = baasicUserEducationRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicUserEducationClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicUserEducationRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of user education resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicUserEducationClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicUserEducationClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicUserEducationRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the user education resource.
     * @method
     * @example baasicUserEducationClient.get(id)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserEducationClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicUserEducationRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create user education action has been performed; this action creates a new user education resource.
     * @method
     * @param data An user education object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create user education action has been performed.
     * @example baasicUserEducationClient.create({
                    organizationName : '<organization-name>',
                    summary: '<summary>',
                    userId: '<user-id>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicUserEducationClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicUserEducationRouteDefinition.create(data), this.baasicUserEducationRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update user education action has been performed; this action updates a user education resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserEducationRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(education);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An user education object used to update specified user education resource.
     * @returns A promise that is resolved once the update user education action has been performed.
     * @example // education is a resource previously fetched using get action.
                    education.degree = '<degree>';
                    baasicUserEducationClient.update(education)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicUserEducationClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicUserEducationRouteDefinition.update(data), this.baasicUserEducationRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a user education resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserEducationRoutDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(education);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // education is a resource previously fetched using get action.
                    baasicUserEducationClient.remove(education)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicUserEducationClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicUserEducationRouteDefinition.delete(data));
    };
    return BaasicUserEducationClient;
}());
BaasicUserEducationClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicUserEducationRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicUserEducationRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicUserEducationClient);
exports.BaasicUserEducationClient = BaasicUserEducationClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserEducationRouteDefinition
 * @description Baasic User Education Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Education Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicUserEducationRouteDefinition = (function (_super) {
    __extends(BaasicUserEducationRouteDefinition, _super);
    function BaasicUserEducationRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'profiles/{userId}/educations/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'profiles/{userId}/educations/{id}/{?embed,fields}';
        _this.createRoute = 'profiles/{userId}/educations';
        _this.updateRoute = 'profiles/{userId}/educations/{id}';
        _this.deleteRoute = 'profiles/{userId}/educations/{id}';
        return _this;
    }
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing user education properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain user education subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the user education property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicUserEducationRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicUserEducationRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @param id User education id which uniquely identifies user education resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicUserEducationRouteDefinition.get(id);
     **/
    BaasicUserEducationRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @param data An user education object that needs to be inserted into the system.
     * @example baasicUserEducationRouteDefinition.create(data);
     **/
    BaasicUserEducationRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @param data An user education object used to update specified skill resource.
     * @example baasicUserEducationRouteDefinition.update(data);
     **/
    BaasicUserEducationRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delte route; this URI template does not expose any additional options.
     * @method
     * @param data An user education object used to delete specified skill resource.
     * @example baasicUserEducationRouteDefinition.delete(data);
     **/
    BaasicUserEducationRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicUserEducationRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicUserEducationRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicUserEducationRouteDefinition);
exports.BaasicUserEducationRouteDefinition = BaasicUserEducationRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserProfileACLClient
 * @description Baasic User Profile ACL Client provides an easy way to consume Baasic User Profile REST API end-points. In order to obtain needed routes `baasicUserProfileACLClient` uses `baasicUserProfileACLRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicUserProfileACLClient = (function () {
    function BaasicUserProfileACLClient(baasicUserProfileACLRouteDefinition, baasicApiClient) {
        this.baasicUserProfileACLRouteDefinition = baasicUserProfileACLRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicUserProfileACLClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicUserProfileACLRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns a list of ACL policies established for the specified user profile resource.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicUserProfileACLClient.get({id: '<profile-id>'})
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserProfileACLClient.prototype.get = function (options) {
        return this.baasicApiClient.get(this.baasicUserProfileACLRouteDefinition.get(options));
    };
    /**
     * Returns a promise that is resolved once the update acl action has been performed, this action creates new ACL policy for the specified user profile resource.
     * @method
     * @param options ACL options object.
     * @returns A promise that is resolved once the update acl action has been performed.
     * @example let options = {id : '<profile-id>'};
                let aclObj =  {  actionId: '<action-id'>,  roleId: '<roleId>',  userId: '<userId>' };
                options[baasicConstants.modelPropertyName] = aclObj;
                baasicUserProfileACLClient.update(options)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserProfileACLClient.prototype.update = function (options) {
        return this.baasicApiClient.put(this.baasicUserProfileACLRouteDefinition.update(options), this.baasicUserProfileACLRouteDefinition.updateParams(options));
    };
    /**
     * Returns a promise that is resolved once the removeByUser action has been performed. This action deletes ACL policy assigned to the specified user and user profile resource.
     * @method
     * @param profileId User profile id which uniquely identifies user profile resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and user profile resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param user A value that uniquely identifies user for which ACL policy needs to be removed.
     * @param data ACL policy object used to delete specified ACL policy resource.
     * @returns A promise that is resolved once the removeByUser action has been performed.
     * @example baasicUserProfileACLClient.removeByUser('<profile-id>', '<access-action>', '<username>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserProfileACLClient.prototype.removeByUser = function (profileId, action, user, data) {
        return this.baasicApiClient.delete(this.baasicUserProfileACLRouteDefinition.deleteByUser(profileId, action, user, data));
    };
    /**
     * Returns a promise that is resolved once the removeByRole action has been performed. This action deletes ACL policy assigned to the specified role and user profile resource.
     * @method
     * @param profileId User profile id which uniquely identifies user profile resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and user profile resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param role A value that uniquely identifies role for which ACL policy needs to be removed.
     * @param data  ACL policy object used to delete specified ACL policy resource.
     * @returns A promise that is resolved once the removeByRole action has been performed.
     * @example baasicUserProfileACLClient.removeByRole('<profile-id>', '<access-action>', '<role-name>')
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserProfileACLClient.prototype.removeByRole = function (profileId, action, role, data) {
        return this.baasicApiClient.delete(this.baasicUserProfileACLRouteDefinition.deleteByRole(profileId, action, role, data));
    };
    return BaasicUserProfileACLClient;
}());
BaasicUserProfileACLClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicUserProfileACLRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicUserProfileACLRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicUserProfileACLClient);
exports.BaasicUserProfileACLClient = BaasicUserProfileACLClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserProfileACLRouteDefinition
 * @description Baasic User ACL Profile Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Profile ACL Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicUserProfileACLRouteDefinition = (function (_super) {
    __extends(BaasicUserProfileACLRouteDefinition, _super);
    function BaasicUserProfileACLRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'profiles/{id}/acl/{?fields}';
        _this.updateRoute = 'profiles/{id}/acl/{?fields}';
        _this.deleteByUserRoute = 'profiles/{id}/acl/actions/{accessAction}/users/{user}/';
        _this.deleteByRoleRoute = 'profiles/{id}/acl/actions/{accessAction}/roles/{role}/';
        return _this;
    }
    /**
     * Parses get user profile acl route; this URI template should be expanded with the Id of the user profile resource.
     * @method
     * @param options Query resource options object.
     * @example baasicUserProfileACLRouteDefinition.get({id: '<profile-id>'});
     **/
    BaasicUserProfileACLRouteDefinition.prototype.get = function (options) {
        var params = this.utility.extend({}, options);
        return _super.prototype.baseCreate.call(this, this.getRoute, params);
    };
    /**
     * Parses update user profile acl route; this URI template should be expanded with the Id of the user profile.
     * @method
     * @param options ACL options object.
     * @example baasicUserProfileACLRouteDefinition.update({id: '<profile-id>'});
     **/
    BaasicUserProfileACLRouteDefinition.prototype.update = function (options) {
        var params = this.utility.extend({}, options);
        return _super.prototype.baseCreate.call(this, this.updateRoute, params);
    };
    BaasicUserProfileACLRouteDefinition.prototype.updateParams = function (options) {
        var params = this.utility.extend({}, options);
        return params[this.modelMapper.modelPropertyName];
    };
    /**
     * Parses deleteByUser user profile acl route which can be expanded with additional options. Supported items are:
     * - `id` - Id of the user profile resource.
     * - `accessAction` - Action abbreviation which identifies ACL policy assigned to the specified user and user profile resource.
     * - `user` - A value which uniquely identifies user for which ACL policy needs to be removed.
     * @method
     * @param profileId User profile id which uniquely identifies user profile resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and user profile resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param user A value that uniquely identifies user for which ACL policy needs to be removed.
     * @param data ACL policy object used to delete specified ACL policy resource.
     * @example baasicUserProfileACLRouteDefinition.deleteByUser({ id: '<profile-id>', accessAction: '<access-action>', user: '<username>' });
     **/
    BaasicUserProfileACLRouteDefinition.prototype.deleteByUser = function (profileId, action, user, data) {
        var params = this.modelMapper.removeParams(data);
        params.profileId = profileId;
        params.user = user;
        params.accessAction = action;
        return _super.prototype.baseCreate.call(this, this.deleteByUserRoute, params);
    };
    /**
     * Parses deleteByUser user profile acl route which can be expanded with additional options. Supported items are:
     * - `id` - Id of the user profile.
     * - `accessAction` - Action abbreviation which identifies ACL policy assigned to the specified role and user profile resource.
     * - `role` - A value which uniquely identifies role for which ACL policy needs to be removed.
     * @method
     * @param profileId User profile id which uniquely identifies user profile resource whose security privileges need to be retrieved and updated.
     * @param action Action abbreviation which identifies ACL policy assigned to the specified user and user profile resource.
     *               Supported Values:
     *               "Create"
     *               "Delete"
     *               "Read"
     *               "Update"
     * @param role A value that uniquely identifies role for which ACL policy needs to be removed.
     * @param data  ACL policy object used to delete specified ACL policy resource.
     * @example baasicUserProfileACLRouteDefinition.deleteByRole.expand({ id: '<profile-id>', accessAction: '<access-action>', role: '<role-name>' });
     **/
    BaasicUserProfileACLRouteDefinition.prototype.deleteByRole = function (profileId, action, role, data) {
        var params = this.modelMapper.removeParams(data);
        params.profileId = profileId;
        params.role = role;
        params.accessAction = action;
        return _super.prototype.baseCreate.call(this, this.deleteByRoleRoute, params);
    };
    return BaasicUserProfileACLRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicUserProfileACLRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicUserProfileACLRouteDefinition);
exports.BaasicUserProfileACLRouteDefinition = BaasicUserProfileACLRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserProfileAvatarClient
 * @description Baasic User Profile Avatar Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Profile Avatar Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicUserProfileAvatarClient = (function () {
    function BaasicUserProfileAvatarClient(baasicUserProfileAvatarRouteDefinition, baasicUserProfileAvatarStreamsClient, baasicApiClient) {
        this.baasicUserProfileAvatarRouteDefinition = baasicUserProfileAvatarRouteDefinition;
        this.baasicUserProfileAvatarStreamsClient = baasicUserProfileAvatarStreamsClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicUserProfileAvatarClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicUserProfileAvatarRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicUserProfileAvatarClient.prototype, "streams", {
        get: function () {
            return this.baasicUserProfileAvatarStreamsClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns requested file resource.
     * @method
     * @param id User Profile id which uniquely identifies user avatar resource that needs to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicUserProfileAvatarClient.get('<file-id>')
                   .then(function (data) {
                       // perform success action here
                   },
                    function (response, status, headers, config) {
                        // perform error handling here
                   });
    **/
    BaasicUserProfileAvatarClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicUserProfileAvatarRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the update file action has been performed; this action will update a file resource if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserProfileAvatarRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(fileEntry);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data Avatar file object that need to be updated in the system.
     * @returns A promise that is resolved once the update file action has been performed.
     * @example // fileEntry is a file resource previously fetched using get action.
                       fileEntry.description = '<description>';
                       baasicUserProfileAvatarClient.update(fileEntry)
                           .then(function (data) {
                               // perform success action here
                           },
                            function (response, status, headers, config) {
                           });
                                // perform error handling here
    **/
    BaasicUserProfileAvatarClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicUserProfileAvatarRouteDefinition.update(data), data);
    };
    /**
     * Returns a promise that is resolved once the link action has been performed; this action links file resource from other modules into the Profile Files module (For example: file resources from the Media Vault module can be linked directly into the Profile Files module).
     * @method
     * @param id User Profile id which uniquely identifies user avatar resource that needs to be retrieved.
     * @param data A profile avatar file object that need to be inserted into the system.
     * @returns A promise that is resolved once the link action has been performed.
     * @example baasicUserProfileAvatarClient.link(fileObject)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserProfileAvatarClient.prototype.link = function (id, data) {
        return this.baasicApiClient.post(this.baasicUserProfileAvatarRouteDefinition.link(id, data), this.baasicUserProfileAvatarRouteDefinition.createParams(data, id));
    };
    /**
     * Returns a promise that is resolved once the unlink action has been performed. This action will remove one or many file resources from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply baasicUserProfileAvatarRouteDefinition route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(fileEntry);
     * let uri = params['model'].links('unlink').href;
     * ```
     * @method
     * @param data A profile avatar file object used to remove specific profile avatar from the system.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the unlink action has been performed.
     * @example // fileEntry is a file resource previously fetched using get action. The following action will remove the original file resource and all accompanying derived file resources.
                    baasicUserProfileAvatarRouteDefinition.remove(fileEntry)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicUserProfileAvatarClient.prototype.unlink = function (data, options) {
        return this.baasicApiClient.delete(this.baasicUserProfileAvatarRouteDefinition.unlink(data, options));
    };
    return BaasicUserProfileAvatarClient;
}());
BaasicUserProfileAvatarClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicUserProfileAvatarRouteDefinition)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicUserProfileAvatarStreamsClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicUserProfileAvatarRouteDefinition,
        userProfile_1.BaasicUserProfileAvatarStreamsClient,
        httpApi_1.BaasicApiClient])
], BaasicUserProfileAvatarClient);
exports.BaasicUserProfileAvatarClient = BaasicUserProfileAvatarClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserProfileAvatarRouteDefinition
 * @description Baasic User Profile Avatar Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Profile Avatar Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var userProfile_1 = __webpack_require__(7);
var contracts_1 = __webpack_require__(1);
var BaasicUserProfileAvatarRouteDefinition = (function (_super) {
    __extends(BaasicUserProfileAvatarRouteDefinition, _super);
    function BaasicUserProfileAvatarRouteDefinition(appOptions, baasicUserProfileAvatarStreamsRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicUserProfileAvatarStreamsRouteDefinition = baasicUserProfileAvatarStreamsRouteDefinition;
        _this.getRoute = 'profiles/{id}/avatars/{?embed,fields}';
        _this.updateRoute = 'profiles/{userId}/avatars';
        _this.linkRoute = 'profiles/{id}/avatars/link';
        _this.unlinkRoute = 'profiles/{userId}/avatars/unlink';
        return _this;
    }
    Object.defineProperty(BaasicUserProfileAvatarRouteDefinition.prototype, "streams", {
        get: function () {
            return this.baasicUserProfileAvatarStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses get route; this route should be expanded with the Id of the profile.
     * @method
     * @param id User Profile id which uniquely identifies user avatar resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicUserProfileAvatarRouteDefinition.get({id: '<file-id>'});
     **/
    BaasicUserProfileAvatarRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @param data A Profile Avatar object used to update specified Profile Avatar resource.
     * @example baasicUserProfileAvatarRouteDefinition.update(data);
     **/
    BaasicUserProfileAvatarRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses link route; this route should be expanded with the Id of the profile.
     * @method
     * @param id User Profile id which uniquely identifies user avatar resource that needs to be retrieved.
     * @param data A Profile Avatar object used to link specified Profile Avatar resource.
     * @example baasicUserProfileAvatarRouteDefinition.link({id: '<file-id>'});
     **/
    BaasicUserProfileAvatarRouteDefinition.prototype.link = function (id, data) {
        var params = this.utility.extend({}, data);
        params.id = id;
        return _super.prototype.baseCreate.call(this, this.linkRoute, params);
    };
    /**
     * Parses link route; this route should be expanded with the Id of the profile.
     * @method
     * @param data A Profile Avatar object used to unlink specified Profile Avatar resource.
     * @param options Query resource options object.
     * @example baasicUserProfileAvatarRouteDefinition.unlink(data);
     **/
    BaasicUserProfileAvatarRouteDefinition.prototype.unlink = function (data, options) {
        if (!options) {
            options = {};
        }
        return _super.prototype.baseDelete.call(this, this.unlinkRoute, data, options);
    };
    BaasicUserProfileAvatarRouteDefinition.prototype.createParams = function (data, id) {
        var params = this.utility.extend(data);
        params.id = id;
        return _super.prototype.createParams.call(this, params);
    };
    return BaasicUserProfileAvatarRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicUserProfileAvatarRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicUserProfileAvatarStreamsRouteDefinition)),
    __metadata("design:paramtypes", [Object, userProfile_1.BaasicUserProfileAvatarStreamsRouteDefinition])
], BaasicUserProfileAvatarRouteDefinition);
exports.BaasicUserProfileAvatarRouteDefinition = BaasicUserProfileAvatarRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserProfileAvatarStreamsClient
 * @description Baasic User Profile Avatar Streams Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Profile Avatar Streams Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicUserProfileAvatarStreamsClient = (function () {
    function BaasicUserProfileAvatarStreamsClient(baasicUserProfileAvatarStreamsRouteDefinition, baasicApiClient) {
        this.baasicUserProfileAvatarStreamsRouteDefinition = baasicUserProfileAvatarStreamsRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicUserProfileAvatarStreamsClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicUserProfileAvatarStreamsRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the file stream if successfully completed. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will return a stream of the derived resource. Otherwise, stream of the original file resource will be retrieved.
     * @method
     * @param data User unique identifier.
     * @returns A promise that is resolved once the get action has been performed.
     * @example // Request the original file stream
                    baasicUserProfileAvatarStreamsClient.get({id: '<file-id>'})
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
                    // Request derived file stream
                    baasicUserProfileAvatarStreamsClient.get({id: '<file-id>', width: <width>, height: <height>})
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicUserProfileAvatarStreamsClient.prototype.get = function (data) {
        return this.baasicApiClient.get(this.baasicUserProfileAvatarStreamsRouteDefinition.get(data));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the file stream as a blob. If derived resource's format is passed, such as `width` and `height` for the image type of file resource, the operation will return a blob of the derived file resource. Otherwise, blob of the original file resource will be retrieved. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method
     * @example // Request the original blob
                    baasicUserProfileAvatarStreamsClient.getBlob('<file-id>')
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
                        // Request derived blob
                        baasicUserProfileAvatarStreamsClient.getBlob({id: '<file-id>', width: <width>, height: <height>})
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicUserProfileAvatarStreamsClient.prototype.getBlob = function (data) {
        return this.baasicApiClient.get(this.baasicUserProfileAvatarStreamsRouteDefinition.get(data), { 'Accept': 'application/octet-stream' });
    };
    /**
     * Returns a promise that is resolved once the create file stream action has been performed; this action will upload the specified blob. For more information on Blob objects please see [Blob Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Blob).
     * @method
     * @param id
     * @param data
     * @param stream
     * @returns A promise that is resolved once the create file stream action has been performed.
     * @example baasicUserProfileAvatarStreamsClient.create('<file-id>', '<filename'>, <blob>)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserProfileAvatarStreamsClient.prototype.create = function (id, data, stream) {
        var formData = new FormData();
        formData.append('file', stream);
        return this.baasicApiClient.post(this.baasicUserProfileAvatarStreamsRouteDefinition.create(id, data), data, { 'Content-Type': undefined });
    };
    /**
     * Returns a promise that is resolved once the update file stream action has been performed; this action will replace the existing stream with a new one. Alternatively, if a derived stream is being updated it will either create a new derived stream or replace the existing one. In order to update a derived stream, format needs to be passed (For example: `width` and `height` for the image type of file stream data type).
     * @method
     * @param data
     * @param stream
     * @returns A promise that is resolved once the update file stream action has been performed.
     * @example // Update original file stream
                    baasicUserProfileAvatarStreamsClient.update('<file-id>', <file-stream>)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
                        // Update derived file stream
                        baasicUserProfileAvatarStreamsClient.update({id: '<file-id>', width: <width>, height: <height>}, <file-stream>)
                            .then(function (data) {
                                // perform success action here
                            },
                             function (response, status, headers, config) {
                                 // perform error handling here
                            });
     **/
    BaasicUserProfileAvatarStreamsClient.prototype.update = function (data, stream) {
        var formData = new FormData();
        formData.append('file', stream);
        return this.baasicApiClient.put(this.baasicUserProfileAvatarStreamsRouteDefinition.update(data), data, { 'Content-Type': undefined });
    };
    return BaasicUserProfileAvatarStreamsClient;
}());
BaasicUserProfileAvatarStreamsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicUserProfileAvatarStreamsRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicUserProfileAvatarStreamsRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicUserProfileAvatarStreamsClient);
exports.BaasicUserProfileAvatarStreamsClient = BaasicUserProfileAvatarStreamsClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserProfileAvatarStreamsRouteDefinition
 * @description Baasic User Profile Avatar Streams Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Profile Avatar Streams Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicUserProfileAvatarStreamsRouteDefinition = (function (_super) {
    __extends(BaasicUserProfileAvatarStreamsRouteDefinition, _super);
    function BaasicUserProfileAvatarStreamsRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.getRoute = 'profiles/{id}/avatar-streams/{?width,height}';
        _this.createRoute = 'profiles/{id}/avatar-streams/{filename}';
        _this.updateRoute = 'profiles/{id}/avatar-streams/{?width,height}';
        return _this;
    }
    /**
     * Parses get route; this route should be expanded with id of profile. Additional supported items are:
     * - `width` - width of desired derived image.
     * - `height` - height of desired derived image.
     * @method
     * @example baasicUserProfileAvatarStreamsRouteDefinition.get({id: '<file-id>'});
     **/
    BaasicUserProfileAvatarStreamsRouteDefinition.prototype.get = function (data) {
        if (!this.utility.isObject(data)) {
            data = {
                id: data
            };
        }
        return _super.prototype.baseCreate.call(this, this.getRoute, data);
    };
    /**
     * Parses create route; this route should be expanded with the filename which indicates where the stream will be saved as well with id of the profile.
     * @method
     * @example baasicUserProfileAvatarStreamRouteDefinition.create({ filename: '<filename>', id: '<file-id>' });
     **/
    BaasicUserProfileAvatarStreamsRouteDefinition.prototype.create = function (id, data) {
        if (!this.utility.isObject(data)) {
            data = {
                filename: data
            };
        }
        var params = this.utility.extend({}, data);
        params.id = id;
        return _super.prototype.baseCreate.call(this, this.createRoute, params);
    };
    /**
     * Parses update route; this route should be expanded with the id of the profile. Additional supported items are:
     * - `width` - width of derived image to update.
     * - `height` - height of derived image to update.
     * @method
     * @param data
     * @example baasicUserProfileAvatarStreamsRouteDefinition.update({id: '<file-id>'});
     **/
    BaasicUserProfileAvatarStreamsRouteDefinition.prototype.update = function (data) {
        if (!this.utility.isObject(data)) {
            data = {
                id: data
            };
        }
        return _super.prototype.baseCreate.call(this, this.updateRoute, data);
    };
    return BaasicUserProfileAvatarStreamsRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicUserProfileAvatarStreamsRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicUserProfileAvatarStreamsRouteDefinition);
exports.BaasicUserProfileAvatarStreamsRouteDefinition = BaasicUserProfileAvatarStreamsRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
 */ 


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserProfileClient
 * @description Baasic User Profile Client provides an easy way to consume Baasic User Profile REST API end-points. In order to obtain needed routes `baasicUserProfileClient` uses `baasicUserProfileRouteDefinition`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicUserProfileClient = (function () {
    function BaasicUserProfileClient(baasicUserProfileACLClient, baasicUserProfileRouteDefinition, baasicApiClient, baasicUserEducationClient, baasicUserProfileAvatarClient, baasicUserSkillClient, baasicUserWorkClient) {
        this.baasicUserProfileACLClient = baasicUserProfileACLClient;
        this.baasicUserProfileRouteDefinition = baasicUserProfileRouteDefinition;
        this.baasicApiClient = baasicApiClient;
        this.baasicUserEducationClient = baasicUserEducationClient;
        this.baasicUserProfileAvatarClient = baasicUserProfileAvatarClient;
        this.baasicUserSkillClient = baasicUserSkillClient;
        this.baasicUserWorkClient = baasicUserWorkClient;
    }
    Object.defineProperty(BaasicUserProfileClient.prototype, "acl", {
        get: function () {
            return this.baasicUserProfileACLClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicUserProfileClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicUserProfileRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicUserProfileClient.prototype, "education", {
        get: function () {
            return this.baasicUserEducationClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicUserProfileClient.prototype, "avatar", {
        get: function () {
            return this.baasicUserProfileAvatarClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicUserProfileClient.prototype, "skill", {
        get: function () {
            return this.baasicUserSkillClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicUserProfileClient.prototype, "work", {
        get: function () {
            return this.baasicUserWorkClient;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of user profile resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example userProfileClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicUserProfileClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicUserProfileRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the user profile resource.
     * @method
     * @param id User profile id which uniquely identifies user profile resource that needs to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicUserProfileClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserProfileClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicUserProfileRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create user profile action has been performed; this action creates a new user profile resource.
     * @method
     * @param data An user profile object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create user profile action has been performed.
     * @example baasicUserProfileClient.create({
                    firstName : '<first-name>',
                    lastName : '<last-name>',
                    displayName: '<nick-name>'
                }.then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicUserProfileClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicUserProfileRouteDefinition.create(), this.baasicUserProfileRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update user profile action has been performed; this action updates a user profile resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserProfileRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(userProfile);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An user profile object used to update specified user profile resource.
     * @returns A promise that is resolved once the update user profile action has been performed.
     * @example // userProfile is a resource previously fetched using get action.
                       userProfile.displayName = '<nick-name>';
                       baasicUserProfileClient.update(userProfile)
                           .then(function (data) {
                               // perform success action here
                           },
                            function (response, status, headers, config) {
                                // perform error handling here
                           });
    **/
    BaasicUserProfileClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicUserProfileRouteDefinition.update(data), this.baasicUserProfileRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a user profile resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserProfileRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(userProfile);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An user profile object used to delete specified user profile resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example // userProfile is a resource previously fetched using get action.
                    baasicUserProfileClient.remove(userProfile)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicUserProfileClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicUserProfileRouteDefinition.delete(data));
    };
    return BaasicUserProfileClient;
}());
BaasicUserProfileClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicUserProfileACLClient)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicUserProfileRouteDefinition)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __param(3, inversify_1.inject(userProfile_1.TYPES.BaasicUserEducationClient)),
    __param(4, inversify_1.inject(userProfile_1.TYPES.BaasicUserProfileAvatarClient)),
    __param(5, inversify_1.inject(userProfile_1.TYPES.BaasicUserSkillClient)),
    __param(6, inversify_1.inject(userProfile_1.TYPES.BaasicUserWorkClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicUserProfileACLClient,
        userProfile_1.BaasicUserProfileRouteDefinition,
        httpApi_1.BaasicApiClient,
        userProfile_1.BaasicUserEducationClient,
        userProfile_1.BaasicUserProfileAvatarClient,
        userProfile_1.BaasicUserSkillClient,
        userProfile_1.BaasicUserWorkClient])
], BaasicUserProfileClient);
exports.BaasicUserProfileClient = BaasicUserProfileClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserProfileRouteDefinition
 * @description Baasic User Profile Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Profile Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var userProfile_1 = __webpack_require__(7);
var contracts_1 = __webpack_require__(1);
var BaasicUserProfileRouteDefinition = (function (_super) {
    __extends(BaasicUserProfileRouteDefinition, _super);
    function BaasicUserProfileRouteDefinition(appOptions, baasicUserProfileACLRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicUserProfileACLRouteDefinition = baasicUserProfileACLRouteDefinition;
        _this.findRoute = 'profiles/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'profiles/{id}/{?embed,fields}';
        _this.createRoute = 'profiles';
        _this.updateRoute = 'profiles/{id}';
        _this.deleteRoute = 'profiles/{id}';
        return _this;
    }
    Object.defineProperty(BaasicUserProfileRouteDefinition.prototype, "acl", {
        get: function () {
            return this.baasicUserProfileACLRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find user profile route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify user profile resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain user profile subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the user profile property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicUserProfileRouteDefinition.find.({searchQuery: '<search-phrase>'});
     **/
    BaasicUserProfileRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @param id User profile id which uniquely identifies user profile resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicUserProfileRouteDefinition.get(id, options);
     **/
    BaasicUserProfileRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create user profile route; this URI template does not expose any additional options.
     * @method
     * @example baasicUserProfileRouteService.create();
     **/
    BaasicUserProfileRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update user profile route; this URI template does not expose any additional options.
     * @method
     * @param data An user profile object used to update specified user profile resource.
     * @example baasicUserProfileRouteService.update(data);
     **/
    BaasicUserProfileRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses update user profile route; this URI template does not expose any additional options.
     * @method
     * @param data An user profile object used to delete specified user profile resource.
     * @example baasicUserProfileRouteService.delete(data);
     **/
    BaasicUserProfileRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicUserProfileRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicUserProfileRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicUserProfileACLRouteDefinition)),
    __metadata("design:paramtypes", [Object, userProfile_1.BaasicUserProfileACLRouteDefinition])
], BaasicUserProfileRouteDefinition);
exports.BaasicUserProfileRouteDefinition = BaasicUserProfileRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserSkillClient
 * @description Baasic User Skill Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Skill Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicUserSkillClient = (function () {
    function BaasicUserSkillClient(baasicUserSkillRouteDefinition, baasicApiClient) {
        this.baasicUserSkillRouteDefinition = baasicUserSkillRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicUserSkillClient.prototype, "routeDefinition", {
        get: function () {
            return this.baasicUserSkillRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of user skill resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicUserSkillClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicUserSkillClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicUserSkillRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the user skill resource.
     * @method
     * @param id User profile id or display name which uniquely identifies user profile whose skill resources need to be retrieved.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the get action has been performed.
     * @example baasicUserSkillClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserSkillClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicUserSkillRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create user skill action has been performed; this action creates a new user skill resource.
     * @method
     * @param data An user skill object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create user skill action has been performed.
     * @example baasicUserSkillClient.create({ skillName : '<skill-name>', userId: '<user-id>' })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserSkillClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicUserSkillRouteDefinition.create(data), this.baasicUserSkillRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update user skill action has been performed; this action updates a user skill resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserSkillRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(skill);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An user skill object used to update specified user skill resource.
     * @returns A promise that is resolved once the update user skill action has been performed.
     * @example // skill is a resource previously fetched using get action.
                       skill.description = '<description>';
                       baasicUserSkillClient.update(skill)
                           .then(function (data) {
                               // perform success action here
                           },
                            function (response, status, headers, config) {
                                // perform error handling here
                           });
    **/
    BaasicUserSkillClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicUserSkillRouteDefinition.update(data), this.baasicUserSkillRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a user skill resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserSkillRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(skill);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @param data An user skill object used to delete specific user skill resource in the system.
     * @returns A promise that is resolved once the remove action has been performed.
     * @example // skill is a resource previously fetched using get action.
                    baasicUserSkillClient.remove(skill)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicUserSkillClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicUserSkillRouteDefinition.delete(data));
    };
    return BaasicUserSkillClient;
}());
BaasicUserSkillClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicUserSkillRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicUserSkillRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicUserSkillClient);
exports.BaasicUserSkillClient = BaasicUserSkillClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserSkillRouteDefinition
 * @description Baasic User Skill Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Skill Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicUserSkillRouteDefinition = (function (_super) {
    __extends(BaasicUserSkillRouteDefinition, _super);
    function BaasicUserSkillRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'profiles/{userId}/skills/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'profiles/{userId}/skills/{id}/{?embed,fields}';
        _this.createRoute = 'profiles/{userId}/skills';
        _this.updateRoute = 'profiles/{userId}/skills/{id}';
        _this.deleteRoute = 'profiles/{userId}/skills/{id}';
        return _this;
    }
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing user skill properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain user skill subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the user skill property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicUserSkillRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicUserSkillRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @param id User profile id or display name which uniquely identifies user profile whose skill resources need to be retrieved.
     * @param options Query resource options object.
     * @example baasicUserSkillRouteDefinition.get(id, options);
     **/
    BaasicUserSkillRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @param data An user skill object that needs to be inserted into the system.
     * @example baasicUserSkillRouteDefinition.create(data);
     **/
    BaasicUserSkillRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses update route; this URI template does not expose any additional options.
     * @method
     * @param data An user skill object used to update specific user skill resource in the system.
     * @example baasicUserSkillRouteDefinition.update(data);
     **/
    BaasicUserSkillRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete route; this URI template does not expose any additional options.
     * @method
     * @param data An user skill object used to delete specific user skill resource in the system.
     * @example baasicUserSkillRouteDefinition.delete(data);
     **/
    BaasicUserSkillRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicUserSkillRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicUserSkillRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicUserSkillRouteDefinition);
exports.BaasicUserSkillRouteDefinition = BaasicUserSkillRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserWorkClient
 * @description Baasic User Work Client provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Work Route Client to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var userProfile_1 = __webpack_require__(7);
var BaasicUserWorkClient = (function () {
    function BaasicUserWorkClient(baasicUserWorkRouteDefinition, baasicApiClient) {
        this.baasicUserWorkRouteDefinition = baasicUserWorkRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    BaasicUserWorkClient.prototype.routeDefinition = function () {
        return this.baasicUserWorkRouteDefinition;
    };
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of user work resources matching the given criteria.
     * @method
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @example baasicUserWorkClient.find({
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                     // perform error handling here
                });
     **/
    BaasicUserWorkClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicUserWorkRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the user work resource.
     * @method
     * @param id User work id which uniquely identifies resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicUserWorkClient.get()
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserWorkClient.prototype.get = function (id, options) {
        return this.baasicApiClient.get(this.baasicUserWorkRouteDefinition.get(id, options));
    };
    /**
     * Returns a promise that is resolved once the create user work action has been performed; this action creates a new user work resource.
     * @method
     * @param data An user work object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create user work action has been performed.
     * @example baasicUserWorkClient.create({ companyName : '<company-name>', userId: '<user-id>' })
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicUserWorkClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicUserWorkRouteDefinition.create(data), this.baasicUserWorkRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update user work action has been performed; this action updates a user work resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserWorkRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.updateParams(work);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data An user work object used to update specified user work resource.
     * @returns A promise that is resolved once the update user work action has been performed.
     * @example // work is a resource previously fetched using get action.
                    work.companyName = '<company-name>';
                    baasicUserWorkClient.update(work)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                             // perform error handling here
                        });
     **/
    BaasicUserWorkClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicUserWorkRouteDefinition.update(data), this.baasicUserWorkRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will remove a user work resource from the system if successfully completed. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicUserWorkRouteDefinition` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(work);
     * let uri = params['model'].links('delete').href;
     * ```
     * @method
     * @example // work is a resource previously fetched using get action.
                       baasicUserWorkClient.remove(work)
                           .then(function (data) {
                               // perform success action here
                           },
                            function (response, status, headers, config) {
                                // perform error handling here
                           });
    **/
    BaasicUserWorkClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicUserWorkRouteDefinition.delete(data));
    };
    return BaasicUserWorkClient;
}());
BaasicUserWorkClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicUserWorkRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicUserWorkRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicUserWorkClient);
exports.BaasicUserWorkClient = BaasicUserWorkClient;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* globals module */
/**
 * @module baasicUserWorkRouteDefinition
 * @description Baasic User Work Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic User Work Route Definition to obtain needed routes while other routes will be obtained through HAL. By convention, all route services use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicUserWorkRouteDefinition = (function (_super) {
    __extends(BaasicUserWorkRouteDefinition, _super);
    function BaasicUserWorkRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'profiles/{userId}/work/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'profiles/{userId}/work/{id}/{?embed,fields}';
        _this.createRoute = 'profiles/{userId}/work';
        _this.updateRoute = 'profiles/{userId}/work/{id}';
        _this.deleteRoute = 'profiles/{userId}/work/{id}';
        return _this;
    }
    /**
     * Parses find route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string referencing user work properties using the phrase or BQL (Baasic Query Language) search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain user work subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the user work property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicUserWorkRouteDefinition.find({searchQuery: '<search-phrase>'});
     **/
    BaasicUserWorkRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route; this route doesn't expose any properties.
     * @method
     * @param id User work id which uniquely identifies resource that needs to be retrieved.
     * @param options Query resource options object.
     * @example baasicUserWorkRouteDefinition.get(id, options);
     **/
    BaasicUserWorkRouteDefinition.prototype.get = function (id, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create route; this URI template does not expose any additional options.
     * @method
     * @param data An user work object that needs to be inserted into the system.
     * @example baasicUserWorkRouteDefinition.create(data);
     **/
    BaasicUserWorkRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
      * Parses update route; this URI template does not expose any additional options.
      * @method
      * @param data An user work object used to update specified user work resource.
      * @example baasicUserWorkRouteDefinition.create(data);
      **/
    BaasicUserWorkRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    BaasicUserWorkRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicUserWorkRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicUserWorkRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicUserWorkRouteDefinition);
exports.BaasicUserWorkRouteDefinition = BaasicUserWorkRouteDefinition;
/**
 * @overview
 ***Notes:**
 - Refer to the [REST API documentation](https://github.com/Baasic/baasic-rest-api/wiki) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route definition.
 */ 


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var userProfile_1 = __webpack_require__(7);
var TYPES = {
    BaasicCompanyBatchClient: Symbol("BaasicCompanyBatchClient"),
    BaasicCompanyBatchRouteDefinition: Symbol("BaasicCompanyBatchRouteDefinition"),
    BaasicCompanyClient: Symbol("BaasicCompanyClient"),
    BaasicCompanyRouteDefinition: Symbol("BaasicCompanyRouteDefinition"),
    BaasicOrganizationBatchClient: Symbol("BaasicOrganizationBatchClient"),
    BaasicOrganizationBatchRouteDefinition: Symbol("BaasicOrganizationBatchRouteDefinition"),
    BaasicOrganizationClient: Symbol("BaasicOrganizationClient"),
    BaasicOrganizationRouteDefinition: Symbol("BaasicOrganizationRouteDefinition"),
    BaasicSkillBatchClient: Symbol("BaasicSkillBatchClient"),
    BaasicSkillBatchRouteDefinition: Symbol("BaasicSkillBatchRouteDefinition"),
    BaasicSkillClient: Symbol("BaasicSkillClient"),
    BaasicSkillRouteDefinition: Symbol("BaasicSkillRouteDefinition"),
    BaasicUserEducationClient: Symbol("BaasicUserEducationClient"),
    BaasicUserEducationRouteDefinition: Symbol("BaasicUserEducationRouteDefinition"),
    BaasicUserProfileACLClient: Symbol("BaasicUserProfileACLClient"),
    BaasicUserProfileACLRouteDefinition: Symbol("BaasicUserProfileACLRouteDefinition"),
    BaasicUserProfileAvatarClient: Symbol("BaasicUserProfileAvatarClient"),
    BaasicUserProfileAvatarRouteDefinition: Symbol("BaasicUserProfileAvatarRouteDefinition"),
    BaasicUserProfileAvatarStreamsClient: Symbol("BaasicUserProfileAvatarStreamsClient"),
    BaasicUserProfileAvatarStreamsRouteDefinition: Symbol("BaasicUserProfileAvatarStreamsClient"),
    BaasicUserProfileClient: Symbol("BaasicUserProfileClient"),
    BaasicUserProfileRouteDefinition: Symbol("BaasicUserProfileRouteDefinition"),
    BaasicUserSkillClient: Symbol("BaasicUserSkillClient"),
    BaasicUserSkillRouteDefinition: Symbol("BaasicUserSkillRouteDefinition"),
    BaasicUserWorkClient: Symbol("BaasicUserWorkClient"),
    BaasicUserWorkRouteDefinition: Symbol("BaasicUserWorkRouteDefinition"),
    Root: Symbol("UserProfile-Root")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicCompanyBatchRouteDefinition).to(userProfile_1.BaasicCompanyBatchRouteDefinition);
    bind(TYPES.BaasicCompanyBatchClient).to(userProfile_1.BaasicCompanyBatchClient);
    bind(TYPES.BaasicCompanyRouteDefinition).to(userProfile_1.BaasicCompanyRouteDefinition);
    bind(TYPES.BaasicCompanyClient).to(userProfile_1.BaasicCompanyClient);
    bind(TYPES.BaasicOrganizationBatchRouteDefinition).to(userProfile_1.BaasicOrganizationBatchRouteDefinition);
    bind(TYPES.BaasicOrganizationBatchClient).to(userProfile_1.BaasicOrganizationBatchClient);
    bind(TYPES.BaasicOrganizationRouteDefinition).to(userProfile_1.BaasicOrganizationRouteDefinition);
    bind(TYPES.BaasicOrganizationClient).to(userProfile_1.BaasicOrganizationClient);
    bind(TYPES.BaasicSkillBatchRouteDefinition).to(userProfile_1.BaasicSkillBatchRouteDefinition);
    bind(TYPES.BaasicSkillBatchClient).to(userProfile_1.BaasicSkillBatchClient);
    bind(TYPES.BaasicSkillRouteDefinition).to(userProfile_1.BaasicSkillRouteDefinition);
    bind(TYPES.BaasicSkillClient).to(userProfile_1.BaasicSkillClient);
    bind(TYPES.BaasicUserEducationRouteDefinition).to(userProfile_1.BaasicUserEducationRouteDefinition);
    bind(TYPES.BaasicUserEducationClient).to(userProfile_1.BaasicUserEducationClient);
    bind(TYPES.BaasicUserProfileACLRouteDefinition).to(userProfile_1.BaasicUserProfileACLRouteDefinition);
    bind(TYPES.BaasicUserProfileACLClient).to(userProfile_1.BaasicUserProfileACLClient);
    bind(TYPES.BaasicUserProfileAvatarStreamsRouteDefinition).to(userProfile_1.BaasicUserProfileAvatarStreamsRouteDefinition);
    bind(TYPES.BaasicUserProfileAvatarStreamsClient).to(userProfile_1.BaasicUserProfileAvatarStreamsClient);
    bind(TYPES.BaasicUserProfileAvatarRouteDefinition).to(userProfile_1.BaasicUserProfileAvatarRouteDefinition);
    bind(TYPES.BaasicUserProfileAvatarClient).to(userProfile_1.BaasicUserProfileAvatarClient);
    bind(TYPES.BaasicUserProfileRouteDefinition).to(userProfile_1.BaasicUserProfileRouteDefinition);
    bind(TYPES.BaasicUserProfileClient).to(userProfile_1.BaasicUserProfileClient);
    bind(TYPES.BaasicUserSkillRouteDefinition).to(userProfile_1.BaasicUserSkillRouteDefinition);
    bind(TYPES.BaasicUserSkillClient).to(userProfile_1.BaasicUserSkillClient);
    bind(TYPES.BaasicUserWorkRouteDefinition).to(userProfile_1.BaasicUserWorkRouteDefinition);
    bind(TYPES.BaasicUserWorkClient).to(userProfile_1.BaasicUserWorkClient);
    bind(TYPES.Root).to(userProfile_1.Root);
});
exports.diModule = diModule;


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var userProfile_1 = __webpack_require__(7);
var inversify_1 = __webpack_require__(0);
__webpack_require__(10);
var Root = (function () {
    function Root(profile, company, organization, skill) {
        this.profile = profile;
        this.company = company;
        this.organization = organization;
        this.skill = skill;
    }
    return Root;
}());
Root = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(userProfile_1.TYPES.BaasicUserProfileClient)),
    __param(1, inversify_1.inject(userProfile_1.TYPES.BaasicCompanyClient)),
    __param(2, inversify_1.inject(userProfile_1.TYPES.BaasicOrganizationClient)),
    __param(3, inversify_1.inject(userProfile_1.TYPES.BaasicSkillClient)),
    __metadata("design:paramtypes", [userProfile_1.BaasicUserProfileClient,
        userProfile_1.BaasicCompanyClient,
        userProfile_1.BaasicOrganizationClient,
        userProfile_1.BaasicSkillClient])
], Root);
exports.Root = Root;


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module baasicValueSetClient
 * @description Baasic Value Set Client provides an easy way to consume Baasic Value Set REST end-points. In order to obtain needed routes `baasicValueSetService` uses `baasicValueSetRouteService`.
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var valueSet_1 = __webpack_require__(22);
var BaasicValueSetClient = (function () {
    function BaasicValueSetClient(baasicValueSetRouteDefinition, baasicValueSetItemClient, baasicApiClient) {
        this.baasicValueSetRouteDefinition = baasicValueSetRouteDefinition;
        this.baasicValueSetItemClient = baasicValueSetItemClient;
        this.baasicApiClient = baasicApiClient;
    }
    Object.defineProperty(BaasicValueSetClient.prototype, "items", {
        get: function () {
            return this.baasicValueSetItemClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaasicValueSetClient.prototype, "routeDefinition", {
        /**
         * Provides direct access to `baasicValueSetRouteDefinition`.
         * @method
         * @example baasicValueSetClient.routeDefinition.get().expand(expandObject);
        **/
        get: function () {
            return this.baasicValueSetRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of value set resources matching given criteria.
     * @param options query resource options object
     * @returns A promise that is resolved once the find action has beend performed.
     * @method
     * @example baasicValueSetClient.find({
                    pageNumber: 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>'
                })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicValueSetClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicValueSetRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified value set resource.
     * @param setName value set name
     * @param options query resource options object
     * @returns A promise that is resolved once the get action has been performed.
     * @method
     * @example baasicValueSetClient.get('<value-set-name>')
                   .success(function (data) {
                       // perform success action here
                   })
                   .error(function (response, status, headers, config) {
                       // perform error handling here
                   });
    **/
    BaasicValueSetClient.prototype.get = function (setName, options) {
        return this.baasicApiClient.get(this.baasicValueSetRouteDefinition.get(setName, options));
    };
    /**
     * Returns a promise that is resolved once the create value set action has been performed; this action creates a new value set resource.
     * @param data A key value object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create value set action has beend performed.
     * @method
     * @example baasicValueSetClient.create({
                    name: '<value-set-name>',
                    description: '<description>',
                    values: [{value: '<value>'}]
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicValueSetClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicValueSetRouteDefinition.create(), this.baasicValueSetRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update value set action has been performed; this action updates a value set resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicValueSetService` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(valueSet);
     * let uri = params['model'].links('put').href;
     * ```
     * @param data Value set object used to update specified value set resource.
     * @returns A promise that is resolved once the update value set action has been performed.
     * @method
     * @example // valueSet is a resource previously fetched using get action.
                    valueSet.name = '<new-name>';
                    baasicValueSetClient.update(valueSet)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicValueSetClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicValueSetRouteDefinition.update(data), this.baasicValueSetRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will delete a value set resource if the action is completed successfully. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicValueSetClient` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(valueSet);
     * let uri = params['model'].links('delete').href;
     * ```
     * @param data A value set object used to delete specified value set resource.
     * @method
     * @example // valueSet is a resource previously fetched using get action.
                    baasicValueSetClient.remove(valueSet)
                        .then(function (data) {
                            // perform success action here
                        },
                         function (response, status, headers, config) {
                            // perform error handling here
                        });
     **/
    BaasicValueSetClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicValueSetRouteDefinition.delete(data));
    };
    return BaasicValueSetClient;
}());
BaasicValueSetClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(valueSet_1.TYPES.BaasicValueSetRouteDefinition)),
    __param(1, inversify_1.inject(valueSet_1.TYPES.BaasicValueSetItemClient)),
    __param(2, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [valueSet_1.BaasicValueSetRouteDefinition,
        valueSet_1.BaasicValueSetItemClient,
        httpApi_1.BaasicApiClient])
], BaasicValueSetClient);
exports.BaasicValueSetClient = BaasicValueSetClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
/**
 * @module baasicValueSetItemClient
 * @description Baasic Value Set Item Client provides an easy way to consume Baasic Value Set Item REST end-points. In order to obtain needed routes `baasicValueSetItemClient` uses `baasicValueSetItemRouteDefinition`.
 */
var inversify_1 = __webpack_require__(0);
var httpApi_1 = __webpack_require__(3);
var valueSet_1 = __webpack_require__(22);
var BaasicValueSetItemClient = (function () {
    function BaasicValueSetItemClient(baasicValueSetItemRouteDefinition, baasicApiClient) {
        this.baasicValueSetItemRouteDefinition = baasicValueSetItemRouteDefinition;
        this.baasicApiClient = baasicApiClient;
    }
    /**
     * Returns a promise that is resolved once the find action has been performed. Success response returns a list of value set item resources matching given criteria.
     * @param options Query resource options object.
     * @returns A promise that is resolved once the find action has been performed.
     * @method items.find
     * @example baasicValueSetItemClient.find({
                    setName: '<value-set-name>',
                    pageNumber : 1,
                    pageSize : 10,
                    orderBy : '<field>',
                    orderDirection : '<asc|desc>',
                    search : '<search-phrase>' })
                .then(function (collection) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicValueSetItemClient.prototype.find = function (options) {
        return this.baasicApiClient.get(this.baasicValueSetItemRouteDefinition.find(options));
    };
    /**
     * Returns a promise that is resolved once the get action has been performed. Success response returns the specified value set item resource.
     * @param setName value set name
     * @param id unique identifier of value set resource
     * @param options query resource options object
     * @returns A promise that is resolved once the get action has been performed.
     * @method items.get
     * @example baasicValueSetItemClient.get('<value-set-name>', '<set-item-id>')
                   .then(function (data) {
                        // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicValueSetItemClient.prototype.get = function (setName, id, options) {
        return this.baasicApiClient.get(this.baasicValueSetItemRouteDefinition.get(setName, id, options));
    };
    /**
     * Returns a promise that is resolved once the create value set item action has been performed; this action creates a new value set item resource.
     * @method
     * @param data A value set item object that needs to be inserted into the system.
     * @returns A promise that is resolved once the create value set item action has been performed.
     * @example baasicValueSetItemClient.create({
                    setId: '<value-set-id>',
                    value: '<value>'
                })
                .then(function (data) {
                    // perform success action here
                },
                 function (response, status, headers, config) {
                    // perform error handling here
                });
     **/
    BaasicValueSetItemClient.prototype.create = function (data) {
        return this.baasicApiClient.post(this.baasicValueSetItemRouteDefinition.create(data), this.baasicValueSetItemRouteDefinition.createParams(data));
    };
    /**
     * Returns a promise that is resolved once the update value set item action has been performed; this action updates a value set item resource. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicValueSetClient` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(valueSetItem);
     * let uri = params['model'].links('put').href;
     * ```
     * @method
     * @param data A value set item object used to update specified value set resource.
     * @returns A promise that is resolved once the update value set item action has been performed.
     * @example // valueSetItem is a resource previously fetched using get action.
                valueSetItem.value = '<new-value>';
                baasicValueSetItemClient.update(valueSetItem)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                         // perform error handling here
                    });
     **/
    BaasicValueSetItemClient.prototype.update = function (data) {
        return this.baasicApiClient.put(this.baasicValueSetItemRouteDefinition.update(data), this.baasicValueSetItemRouteDefinition.updateParams(data));
    };
    /**
     * Returns a promise that is resolved once the remove action has been performed. This action will delete a value set item if the action is completed successfully. This route uses HAL enabled objects to obtain routes and therefore it doesn't apply `baasicValueSetClient` route template. Here is an example of how a route can be obtained from HAL enabled objects:
     * ```
     * let params = modelMapper.removeParams(valueSetItem);
     * let uri = params['model'].links('delete').href;
     * ```
     * @param data A value set item object used to delete specified value set resource.
     * @returns A promise that is resolved once the remove action has been performed.
     * @method
     * @example // valueSetItem is a resource previously fetched using get action.
                baasicValueSetItemClient.remove(valueSetItem)
                    .then(function (data) {
                        // perform success action here
                    },
                     function (response, status, headers, config) {
                        // perform error handling here
                    });
     **/
    BaasicValueSetItemClient.prototype.remove = function (data) {
        return this.baasicApiClient.delete(this.baasicValueSetItemRouteDefinition.delete(data));
    };
    return BaasicValueSetItemClient;
}());
BaasicValueSetItemClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(valueSet_1.TYPES.BaasicValueSetItemRouteDefinition)),
    __param(1, inversify_1.inject(httpApi_1.TYPES.BaasicApiClient)),
    __metadata("design:paramtypes", [valueSet_1.BaasicValueSetItemRouteDefinition,
        httpApi_1.BaasicApiClient])
], BaasicValueSetItemClient);
exports.BaasicValueSetItemClient = BaasicValueSetItemClient;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
/**
 * @module baasicValueSetItemRouteDefinition
 * @description Baasic Value Set Item Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Value Set Item Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var contracts_1 = __webpack_require__(1);
var BaasicValueSetItemRouteDefinition = (function (_super) {
    __extends(BaasicValueSetItemRouteDefinition, _super);
    function BaasicValueSetItemRouteDefinition(appOptions) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.findRoute = 'value-sets/{setName}/items/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'value-sets/{setName}/items/{id}/{?embed,fields}';
        _this.createRoute = 'value-sets/{setName}/items/';
        _this.updateRoute = 'value-sets/{setId}/items/{id}';
        _this.deleteRoute = 'value-sets/{setId}/items/{id}';
        return _this;
    }
    /**
     * Parses find value set items route which can be expanded with additional options. Supported items are:
     * - `setName` - Value set name.
     * - `searchQuery` - A string value used to identify value set items using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain value set item subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the value set item property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method items.find
     * @param options Options object.
     * @example baasicValueSetItemRouteDefinition.find(options);
     **/
    BaasicValueSetItemRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get route which must be expanded with the following items:
     * - `setName` - Value set name.
     * - `id` - Value set item id.
     * @method
     * @param setName Value set name.
     * @param id Value set id.
     * @param options Query resource options object.
     * @example baasicValueSetItemRouteDefinition.get(setName, id, options);
     **/
    BaasicValueSetItemRouteDefinition.prototype.get = function (setName, id, options) {
        var params = this.utility.extend({}, options);
        params.setName = setName;
        return _super.prototype.baseGet.call(this, this.getRoute, id, options);
    };
    /**
     * Parses create value set item route; the URI template should be expanded with the value set name.
     * @method
     * @param data A value set item object that needs to be inserted into the system.
     * @example baasicValueSetItemRouteDefinition.create(data);
     **/
    BaasicValueSetItemRouteDefinition.prototype.create = function (data) {
        return _super.prototype.baseCreate.call(this, this.createRoute, data);
    };
    /**
     * Parses update value set item route.
     * @method
     * @param data A value set item object used to update specified value set resource.
     * @example baasicValueSetItemRouteDefinition.update(data);
     */
    BaasicValueSetItemRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete value set item route.
     * @method
     * @param data A value set item object used to delete specified value set resource.
     * @example baasicValueSetItemRouteDefinition.delete(data);
     */
    BaasicValueSetItemRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicValueSetItemRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicValueSetItemRouteDefinition = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __metadata("design:paramtypes", [Object])
], BaasicValueSetItemRouteDefinition);
exports.BaasicValueSetItemRouteDefinition = BaasicValueSetItemRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module baasicValueSetRouteDefinition
 * @description Baasic Value Set Route Definition provides Baasic route templates which can be expanded to Baasic REST URIs. Various services can use Baasic Value Set Route Service to obtain needed routes while other routes will be obtained through HAL. By convention, all route services  use the same function names as their corresponding services.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var inversify_1 = __webpack_require__(0);
var common_1 = __webpack_require__(2);
var valueSet_1 = __webpack_require__(22);
var contracts_1 = __webpack_require__(1);
var BaasicValueSetRouteDefinition = (function (_super) {
    __extends(BaasicValueSetRouteDefinition, _super);
    function BaasicValueSetRouteDefinition(appOptions, baasicValueSetItemRouteDefinition) {
        var _this = _super.call(this, appOptions) || this;
        _this.appOptions = appOptions;
        _this.baasicValueSetItemRouteDefinition = baasicValueSetItemRouteDefinition;
        _this.findRoute = 'value-sets/{?searchQuery,page,rpp,sort,embed,fields}';
        _this.getRoute = 'value-sets/{setName}/{?embed,fields}';
        _this.createRoute = 'value-sets';
        _this.updateRoute = 'value-sets/{id}';
        _this.deleteRoute = 'value-sets/{id}';
        return _this;
    }
    Object.defineProperty(BaasicValueSetRouteDefinition.prototype, "items", {
        get: function () {
            return this.baasicValueSetItemRouteDefinition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Parses find value set route which can be expanded with additional options. Supported items are:
     * - `searchQuery` - A string value used to identify value set resources using the phrase search.
     * - `page` - A value used to set the page number, i.e. to retrieve certain value set subset from the storage.
     * - `rpp` - A value used to limit the size of result set per page.
     * - `sort` - A string used to set the value set property to sort the result collection by.
     * - `embed` - Comma separated list of resources to be contained within the current representation.
     * @method
     * @param options Query resource options object.
     * @example baasicValueSetRouteDefinition.find(options);
     **/
    BaasicValueSetRouteDefinition.prototype.find = function (options) {
        return _super.prototype.baseFind.call(this, this.findRoute, options);
    };
    /**
     * Parses get value set route which must be expanded with the name of the previously created value set resource in the system.
     * @method
     * @param setName Value Set name.
     * @param options Query resource options object.
     * @example baasicValueSetRouteDefinition.get(setName, options);
     **/
    BaasicValueSetRouteDefinition.prototype.get = function (setName, options) {
        return _super.prototype.baseGet.call(this, this.getRoute, setName, options, 'setName');
    };
    /**
     * Parses create value set route; this URI template does not expose any additional options.
     * @method
     * @example baasicValueSetRouteDefinition.create();
     **/
    BaasicValueSetRouteDefinition.prototype.create = function () {
        return _super.prototype.baseCreate.call(this, this.createRoute, {});
    };
    /**
     * Parses update value set route.
     * @method
     * @param data Value set object used to update specified value set resource.
     * @example baasicValueSetRouteDefinition.update(data);
     */
    BaasicValueSetRouteDefinition.prototype.update = function (data) {
        return _super.prototype.baseUpdate.call(this, this.updateRoute, data);
    };
    /**
     * Parses delete value set route.
     * @method
     * @param data A value set object used to delete specified value set resource.
     * @example baasicValueSetRouteDefinition.delete(data);
     */
    BaasicValueSetRouteDefinition.prototype.delete = function (data) {
        return _super.prototype.baseDelete.call(this, this.deleteRoute, data);
    };
    return BaasicValueSetRouteDefinition;
}(common_1.BaasicBaseRouteDefinition));
BaasicValueSetRouteDefinition = __decorate([
    __param(0, inversify_1.inject(contracts_1.TYPES.IAppOptions)),
    __param(1, inversify_1.inject(valueSet_1.TYPES.BaasicValueSetItemRouteDefinition)),
    __metadata("design:paramtypes", [Object, valueSet_1.BaasicValueSetItemRouteDefinition])
], BaasicValueSetRouteDefinition);
exports.BaasicValueSetRouteDefinition = BaasicValueSetRouteDefinition;
/**
 * @copyright (c) 2017 Mono Ltd
 * @license MIT
 * @author Mono Ltd
 * @overview
 ***Notes:**
 - Refer to the [Baasic REST API](http://dev.baasic.com/api/reference/home) for detailed information about available Baasic REST API end-points.
 - [URI Template](https://github.com/Baasic/uritemplate-js) syntax enables expanding the Baasic route templates to Baasic REST URIs providing it with an object that contains URI parameters.
 - All end-point objects are transformed by the associated route service.
*/ 


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inversify_1 = __webpack_require__(0);
var valueSet_1 = __webpack_require__(22);
var TYPES = {
    BaasicValueSetClient: Symbol("BaasicValueSetClient"),
    BaasicValueSetItemClient: Symbol("BaasicValueSetItemClient"),
    BaasicValueSetItemRouteDefinition: Symbol("BaasicValueSetItemRouteDefinition"),
    BaasicValueSetRouteDefinition: Symbol("BaasicValueSetRouteDefinition")
};
exports.TYPES = TYPES;
var diModule = new inversify_1.ContainerModule(function (bind) {
    bind(TYPES.BaasicValueSetItemRouteDefinition).to(valueSet_1.BaasicValueSetItemRouteDefinition);
    bind(TYPES.BaasicValueSetItemClient).to(valueSet_1.BaasicValueSetItemClient);
    bind(TYPES.BaasicValueSetRouteDefinition).to(valueSet_1.BaasicValueSetRouteDefinition);
    bind(TYPES.BaasicValueSetClient).to(valueSet_1.BaasicValueSetClient);
});
exports.diModule = diModule;


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

/*global unescape, module, define, window, global*/

/*
 UriTemplate Copyright (c) 2012-2013 Franz Antesberger. All Rights Reserved.
 Available via the MIT license.
*/

(function (exportCallback) {
    "use strict";

var UriTemplateError = (function () {

    function UriTemplateError (options) {
        this.options = options;
    }

    UriTemplateError.prototype.toString = function () {
        if (JSON && JSON.stringify) {
            return JSON.stringify(this.options);
        }
        else {
            return this.options;
        }
    };

    return UriTemplateError;
}());

var objectHelper = (function () {
    function isArray (value) {
        return Object.prototype.toString.apply(value) === '[object Array]';
    }

    function isString (value) {
        return Object.prototype.toString.apply(value) === '[object String]';
    }
    
    function isNumber (value) {
        return Object.prototype.toString.apply(value) === '[object Number]';
    }
    
    function isBoolean (value) {
        return Object.prototype.toString.apply(value) === '[object Boolean]';
    }
    
    function join (arr, separator) {
        var
            result = '',
            first = true,
            index;
        for (index = 0; index < arr.length; index += 1) {
            if (first) {
                first = false;
            }
            else {
                result += separator;
            }
            result += arr[index];
        }
        return result;
    }

    function map (arr, mapper) {
        var
            result = [],
            index = 0;
        for (; index < arr.length; index += 1) {
            result.push(mapper(arr[index]));
        }
        return result;
    }

    function filter (arr, predicate) {
        var
            result = [],
            index = 0;
        for (; index < arr.length; index += 1) {
            if (predicate(arr[index])) {
                result.push(arr[index]);
            }
        }
        return result;
    }

    function deepFreezeUsingObjectFreeze (object) {
        if (typeof object !== "object" || object === null) {
            return object;
        }
        Object.freeze(object);
        var property, propertyName;
        for (propertyName in object) {
            if (object.hasOwnProperty(propertyName)) {
                property = object[propertyName];
                // be aware, arrays are 'object', too
                if (typeof property === "object") {
                    deepFreeze(property);
                }
            }
        }
        return object;
    }

    function deepFreeze (object) {
        if (typeof Object.freeze === 'function') {
            return deepFreezeUsingObjectFreeze(object);
        }
        return object;
    }


    return {
        isArray: isArray,
        isString: isString,
        isNumber: isNumber,
        isBoolean: isBoolean,
        join: join,
        map: map,
        filter: filter,
        deepFreeze: deepFreeze
    };
}());

var charHelper = (function () {

    function isAlpha (chr) {
        return (chr >= 'a' && chr <= 'z') || ((chr >= 'A' && chr <= 'Z'));
    }

    function isDigit (chr) {
        return chr >= '0' && chr <= '9';
    }

    function isHexDigit (chr) {
        return isDigit(chr) || (chr >= 'a' && chr <= 'f') || (chr >= 'A' && chr <= 'F');
    }

    return {
        isAlpha: isAlpha,
        isDigit: isDigit,
        isHexDigit: isHexDigit
    };
}());

var pctEncoder = (function () {
    var utf8 = {
        encode: function (chr) {
            // see http://ecmanaut.blogspot.de/2006/07/encoding-decoding-utf8-in-javascript.html
            return unescape(encodeURIComponent(chr));
        },
        numBytes: function (firstCharCode) {
            if (firstCharCode <= 0x7F) {
                return 1;
            }
            else if (0xC2 <= firstCharCode && firstCharCode <= 0xDF) {
                return 2;
            }
            else if (0xE0 <= firstCharCode && firstCharCode <= 0xEF) {
                return 3;
            }
            else if (0xF0 <= firstCharCode && firstCharCode <= 0xF4) {
                return 4;
            }
            // no valid first octet
            return 0;
        },
        isValidFollowingCharCode: function (charCode) {
            return 0x80 <= charCode && charCode <= 0xBF;
        }
    };

    /**
     * encodes a character, if needed or not.
     * @param chr
     * @return pct-encoded character
     */
    function encodeCharacter (chr) {
        var
            result = '',
            octets = utf8.encode(chr),
            octet,
            index;
        for (index = 0; index < octets.length; index += 1) {
            octet = octets.charCodeAt(index);
            result += '%' + (octet < 0x10 ? '0' : '') + octet.toString(16).toUpperCase();
        }
        return result;
    }

    /**
     * Returns, whether the given text at start is in the form 'percent hex-digit hex-digit', like '%3F'
     * @param text
     * @param start
     * @return {boolean|*|*}
     */
    function isPercentDigitDigit (text, start) {
        return text.charAt(start) === '%' && charHelper.isHexDigit(text.charAt(start + 1)) && charHelper.isHexDigit(text.charAt(start + 2));
    }

    /**
     * Parses a hex number from start with length 2.
     * @param text a string
     * @param start the start index of the 2-digit hex number
     * @return {Number}
     */
    function parseHex2 (text, start) {
        return parseInt(text.substr(start, 2), 16);
    }

    /**
     * Returns whether or not the given char sequence is a correctly pct-encoded sequence.
     * @param chr
     * @return {boolean}
     */
    function isPctEncoded (chr) {
        if (!isPercentDigitDigit(chr, 0)) {
            return false;
        }
        var firstCharCode = parseHex2(chr, 1);
        var numBytes = utf8.numBytes(firstCharCode);
        if (numBytes === 0) {
            return false;
        }
        for (var byteNumber = 1; byteNumber < numBytes; byteNumber += 1) {
            if (!isPercentDigitDigit(chr, 3*byteNumber) || !utf8.isValidFollowingCharCode(parseHex2(chr, 3*byteNumber + 1))) {
                return false;
            }
        }
        return true;
    }

    /**
     * Reads as much as needed from the text, e.g. '%20' or '%C3%B6'. It does not decode!
     * @param text
     * @param startIndex
     * @return the character or pct-string of the text at startIndex
     */
    function pctCharAt(text, startIndex) {
        var chr = text.charAt(startIndex);
        if (!isPercentDigitDigit(text, startIndex)) {
            return chr;
        }
        var utf8CharCode = parseHex2(text, startIndex + 1);
        var numBytes = utf8.numBytes(utf8CharCode);
        if (numBytes === 0) {
            return chr;
        }
        for (var byteNumber = 1; byteNumber < numBytes; byteNumber += 1) {
            if (!isPercentDigitDigit(text, startIndex + 3 * byteNumber) || !utf8.isValidFollowingCharCode(parseHex2(text, startIndex + 3 * byteNumber + 1))) {
                return chr;
            }
        }
        return text.substr(startIndex, 3 * numBytes);
    }

    return {
        encodeCharacter: encodeCharacter,
        isPctEncoded: isPctEncoded,
        pctCharAt: pctCharAt
    };
}());

var rfcCharHelper = (function () {

    /**
     * Returns if an character is an varchar character according 2.3 of rfc 6570
     * @param chr
     * @return (Boolean)
     */
    function isVarchar (chr) {
        return charHelper.isAlpha(chr) || charHelper.isDigit(chr) || chr === '_' || pctEncoder.isPctEncoded(chr);
    }

    /**
     * Returns if chr is an unreserved character according 1.5 of rfc 6570
     * @param chr
     * @return {Boolean}
     */
    function isUnreserved (chr) {
        return charHelper.isAlpha(chr) || charHelper.isDigit(chr) || chr === '-' || chr === '.' || chr === '_' || chr === '~';
    }

    /**
     * Returns if chr is an reserved character according 1.5 of rfc 6570
     * or the percent character mentioned in 3.2.1.
     * @param chr
     * @return {Boolean}
     */
    function isReserved (chr) {
        return chr === ':' || chr === '/' || chr === '?' || chr === '#' || chr === '[' || chr === ']' || chr === '@' || chr === '!' || chr === '$' || chr === '&' || chr === '(' ||
            chr === ')' || chr === '*' || chr === '+' || chr === ',' || chr === ';' || chr === '=' || chr === "'";
    }

    return {
        isVarchar: isVarchar,
        isUnreserved: isUnreserved,
        isReserved: isReserved
    };

}());

/**
 * encoding of rfc 6570
 */
var encodingHelper = (function () {

    function encode (text, passReserved) {
        var
            result = '',
            index,
            chr = '';
        if (typeof text === "number" || typeof text === "boolean") {
            text = text.toString();
        }
        for (index = 0; index < text.length; index += chr.length) {
            chr = text.charAt(index);
            result += rfcCharHelper.isUnreserved(chr) || (passReserved && rfcCharHelper.isReserved(chr)) ? chr : pctEncoder.encodeCharacter(chr);
        }
        return result;
    }

    function encodePassReserved (text) {
        return encode(text, true);
    }

    function encodeLiteralCharacter (literal, index) {
        var chr = pctEncoder.pctCharAt(literal, index);
        if (chr.length > 1) {
            return chr;
        }
        else {
            return rfcCharHelper.isReserved(chr) || rfcCharHelper.isUnreserved(chr) ? chr : pctEncoder.encodeCharacter(chr);
        }
    }

    function encodeLiteral (literal) {
        var
            result = '',
            index,
            chr = '';
        for (index = 0; index < literal.length; index += chr.length) {
            chr = pctEncoder.pctCharAt(literal, index);
            if (chr.length > 1) {
                result += chr;
            }
            else {
                result += rfcCharHelper.isReserved(chr) || rfcCharHelper.isUnreserved(chr) ? chr : pctEncoder.encodeCharacter(chr);
            }
        }
        return result;
    }

    return {
        encode: encode,
        encodePassReserved: encodePassReserved,
        encodeLiteral: encodeLiteral,
        encodeLiteralCharacter: encodeLiteralCharacter
    };

}());


// the operators defined by rfc 6570
var operators = (function () {

    var
        bySymbol = {};

    function create (symbol) {
        bySymbol[symbol] = {
            symbol: symbol,
            separator: (symbol === '?') ? '&' : (symbol === '' || symbol === '+' || symbol === '#') ? ',' : symbol,
            named: symbol === ';' || symbol === '&' || symbol === '?',
            ifEmpty: (symbol === '&' || symbol === '?') ? '=' : '',
            first: (symbol === '+' ) ? '' : symbol,
            encode: (symbol === '+' || symbol === '#') ? encodingHelper.encodePassReserved : encodingHelper.encode,
            toString: function () {
                return this.symbol;
            }
        };
    }

    create('');
    create('+');
    create('#');
    create('.');
    create('/');
    create(';');
    create('?');
    create('&');
    return {
        valueOf: function (chr) {
            if (bySymbol[chr]) {
                return bySymbol[chr];
            }
            if ("=,!@|".indexOf(chr) >= 0) {
                return null;
            }
            return bySymbol[''];
        }
    };
}());


/**
 * Detects, whether a given element is defined in the sense of rfc 6570
 * Section 2.3 of the RFC makes clear defintions:
 * * undefined and null are not defined.
 * * the empty string is defined
 * * an array ("list") is defined, if it is not empty (even if all elements are not defined)
 * * an object ("map") is defined, if it contains at least one property with defined value
 * @param object
 * @return {Boolean}
 */
function isDefined (object) {
    var
        propertyName;
    if (object === null || object === undefined) {
        return false;
    }
    if (objectHelper.isArray(object)) {
        // Section 2.3: A variable defined as a list value is considered undefined if the list contains zero members
        return object.length > 0;
    }
    if (typeof object === "string" || typeof object === "number" || typeof object === "boolean") {
        // falsy values like empty strings, false or 0 are "defined"
        return true;
    }
    // else Object
    for (propertyName in object) {
        if (object.hasOwnProperty(propertyName) && isDefined(object[propertyName])) {
            return true;
        }
    }
    return false;
}

var LiteralExpression = (function () {
    function LiteralExpression (literal) {
        this.literal = encodingHelper.encodeLiteral(literal);
    }

    LiteralExpression.prototype.expand = function () {
        return this.literal;
    };

    LiteralExpression.prototype.toString = LiteralExpression.prototype.expand;

    return LiteralExpression;
}());

var parse = (function () {

    function parseExpression (expressionText) {
        var
            operator,
            varspecs = [],
            varspec = null,
            varnameStart = null,
            maxLengthStart = null,
            index,
            chr = '';

        function closeVarname () {
            var varname = expressionText.substring(varnameStart, index);
            if (varname.length === 0) {
                throw new UriTemplateError({expressionText: expressionText, message: "a varname must be specified", position: index});
            }
            varspec = {varname: varname, exploded: false, maxLength: null};
            varnameStart = null;
        }

        function closeMaxLength () {
            if (maxLengthStart === index) {
                throw new UriTemplateError({expressionText: expressionText, message: "after a ':' you have to specify the length", position: index});
            }
            varspec.maxLength = parseInt(expressionText.substring(maxLengthStart, index), 10);
            maxLengthStart = null;
        }

        operator = (function (operatorText) {
            var op = operators.valueOf(operatorText);
            if (op === null) {
                throw new UriTemplateError({expressionText: expressionText, message: "illegal use of reserved operator", position: index, operator: operatorText});
            }
            return op;
        }(expressionText.charAt(0)));
        index = operator.symbol.length;

        varnameStart = index;

        for (; index < expressionText.length; index += chr.length) {
            chr = pctEncoder.pctCharAt(expressionText, index);

            if (varnameStart !== null) {
                // the spec says: varname =  varchar *( ["."] varchar )
                // so a dot is allowed except for the first char
                if (chr === '.') {
                    if (varnameStart === index) {
                        throw new UriTemplateError({expressionText: expressionText, message: "a varname MUST NOT start with a dot", position: index});
                    }
                    continue;
                }
                if (rfcCharHelper.isVarchar(chr)) {
                    continue;
                }
                closeVarname();
            }
            if (maxLengthStart !== null) {
                if (index === maxLengthStart && chr === '0') {
                    throw new UriTemplateError({expressionText: expressionText, message: "A :prefix must not start with digit 0", position: index});
                }
                if (charHelper.isDigit(chr)) {
                    if (index - maxLengthStart >= 4) {
                        throw new UriTemplateError({expressionText: expressionText, message: "A :prefix must have max 4 digits", position: index});
                    }
                    continue;
                }
                closeMaxLength();
            }
            if (chr === ':') {
                if (varspec.maxLength !== null) {
                    throw new UriTemplateError({expressionText: expressionText, message: "only one :maxLength is allowed per varspec", position: index});
                }
                if (varspec.exploded) {
                    throw new UriTemplateError({expressionText: expressionText, message: "an exploeded varspec MUST NOT be varspeced", position: index});
                }
                maxLengthStart = index + 1;
                continue;
            }
            if (chr === '*') {
                if (varspec === null) {
                    throw new UriTemplateError({expressionText: expressionText, message: "exploded without varspec", position: index});
                }
                if (varspec.exploded) {
                    throw new UriTemplateError({expressionText: expressionText, message: "exploded twice", position: index});
                }
                if (varspec.maxLength) {
                    throw new UriTemplateError({expressionText: expressionText, message: "an explode (*) MUST NOT follow to a prefix", position: index});
                }
                varspec.exploded = true;
                continue;
            }
            // the only legal character now is the comma
            if (chr === ',') {
                varspecs.push(varspec);
                varspec = null;
                varnameStart = index + 1;
                continue;
            }
            throw new UriTemplateError({expressionText: expressionText, message: "illegal character", character: chr, position: index});
        } // for chr
        if (varnameStart !== null) {
            closeVarname();
        }
        if (maxLengthStart !== null) {
            closeMaxLength();
        }
        varspecs.push(varspec);
        return new VariableExpression(expressionText, operator, varspecs);
    }

    function parse (uriTemplateText) {
        // assert filled string
        var
            index,
            chr,
            expressions = [],
            braceOpenIndex = null,
            literalStart = 0;
        for (index = 0; index < uriTemplateText.length; index += 1) {
            chr = uriTemplateText.charAt(index);
            if (literalStart !== null) {
                if (chr === '}') {
                    throw new UriTemplateError({templateText: uriTemplateText, message: "unopened brace closed", position: index});
                }
                if (chr === '{') {
                    if (literalStart < index) {
                        expressions.push(new LiteralExpression(uriTemplateText.substring(literalStart, index)));
                    }
                    literalStart = null;
                    braceOpenIndex = index;
                }
                continue;
            }

            if (braceOpenIndex !== null) {
                // here just { is forbidden
                if (chr === '{') {
                    throw new UriTemplateError({templateText: uriTemplateText, message: "brace already opened", position: index});
                }
                if (chr === '}') {
                    if (braceOpenIndex + 1 === index) {
                        throw new UriTemplateError({templateText: uriTemplateText, message: "empty braces", position: braceOpenIndex});
                    }
                    try {
                        expressions.push(parseExpression(uriTemplateText.substring(braceOpenIndex + 1, index)));
                    }
                    catch (error) {
                        if (error.prototype === UriTemplateError.prototype) {
                            throw new UriTemplateError({templateText: uriTemplateText, message: error.options.message, position: braceOpenIndex + error.options.position, details: error.options});
                        }
                        throw error;
                    }
                    braceOpenIndex = null;
                    literalStart = index + 1;
                }
                continue;
            }
            throw new Error('reached unreachable code');
        }
        if (braceOpenIndex !== null) {
            throw new UriTemplateError({templateText: uriTemplateText, message: "unclosed brace", position: braceOpenIndex});
        }
        if (literalStart < uriTemplateText.length) {
            expressions.push(new LiteralExpression(uriTemplateText.substr(literalStart)));
        }
        return new UriTemplate(uriTemplateText, expressions);
    }

    return parse;
}());

var VariableExpression = (function () {
    // helper function if JSON is not available
    function prettyPrint (value) {
        return (JSON && JSON.stringify) ? JSON.stringify(value) : value;
    }

    function isEmpty (value) {
        if (!isDefined(value)) {
            return true;
        }
        if (objectHelper.isString(value)) {
            return value === '';
        }
        if (objectHelper.isNumber(value) || objectHelper.isBoolean(value)) {
            return false;
        }
        if (objectHelper.isArray(value)) {
            return value.length === 0;
        }
        for (var propertyName in value) {
            if (value.hasOwnProperty(propertyName)) {
                return false;
            }
        }
        return true;
    }

    function propertyArray (object) {
        var
            result = [],
            propertyName;
        for (propertyName in object) {
            if (object.hasOwnProperty(propertyName)) {
                result.push({name: propertyName, value: object[propertyName]});
            }
        }
        return result;
    }

    function VariableExpression (templateText, operator, varspecs) {
        this.templateText = templateText;
        this.operator = operator;
        this.varspecs = varspecs;
    }

    VariableExpression.prototype.toString = function () {
        return this.templateText;
    };

    function expandSimpleValue(varspec, operator, value) {
        var result = '';
        value = value.toString();
        if (operator.named) {
            result += encodingHelper.encodeLiteral(varspec.varname);
            if (value === '') {
                result += operator.ifEmpty;
                return result;
            }
            result += '=';
        }
        if (varspec.maxLength !== null) {
            value = value.substr(0, varspec.maxLength);
        }
        result += operator.encode(value);
        return result;
    }

    function valueDefined (nameValue) {
        return isDefined(nameValue.value);
    }

    function expandNotExploded(varspec, operator, value) {
        var
            arr = [],
            result = '';
        if (operator.named) {
            result += encodingHelper.encodeLiteral(varspec.varname);
            if (isEmpty(value)) {
                result += operator.ifEmpty;
                return result;
            }
            result += '=';
        }
        if (objectHelper.isArray(value)) {
            arr = value;
            arr = objectHelper.filter(arr, isDefined);
            arr = objectHelper.map(arr, operator.encode);
            result += objectHelper.join(arr, ',');
        }
        else {
            arr = propertyArray(value);
            arr = objectHelper.filter(arr, valueDefined);
            arr = objectHelper.map(arr, function (nameValue) {
                return operator.encode(nameValue.name) + ',' + operator.encode(nameValue.value);
            });
            result += objectHelper.join(arr, ',');
        }
        return result;
    }

    function expandExplodedNamed (varspec, operator, value) {
        var
            isArray = objectHelper.isArray(value),
            arr = [];
        if (isArray) {
            arr = value;
            arr = objectHelper.filter(arr, isDefined);
            arr = objectHelper.map(arr, function (listElement) {
                var tmp = encodingHelper.encodeLiteral(varspec.varname);
                if (isEmpty(listElement)) {
                    tmp += operator.ifEmpty;
                }
                else {
                    tmp += '=' + operator.encode(listElement);
                }
                return tmp;
            });
        }
        else {
            arr = propertyArray(value);
            arr = objectHelper.filter(arr, valueDefined);
            arr = objectHelper.map(arr, function (nameValue) {
                var tmp = encodingHelper.encodeLiteral(nameValue.name);
                if (isEmpty(nameValue.value)) {
                    tmp += operator.ifEmpty;
                }
                else {
                    tmp += '=' + operator.encode(nameValue.value);
                }
                return tmp;
            });
        }
        return objectHelper.join(arr, operator.separator);
    }

    function expandExplodedUnnamed (operator, value) {
        var
            arr = [],
            result = '';
        if (objectHelper.isArray(value)) {
            arr = value;
            arr = objectHelper.filter(arr, isDefined);
            arr = objectHelper.map(arr, operator.encode);
            result += objectHelper.join(arr, operator.separator);
        }
        else {
            arr = propertyArray(value);
            arr = objectHelper.filter(arr, function (nameValue) {
                return isDefined(nameValue.value);
            });
            arr = objectHelper.map(arr, function (nameValue) {
                return operator.encode(nameValue.name) + '=' + operator.encode(nameValue.value);
            });
            result += objectHelper.join(arr, operator.separator);
        }
        return result;
    }


    VariableExpression.prototype.expand = function (variables) {
        var
            expanded = [],
            index,
            varspec,
            value,
            valueIsArr,
            oneExploded = false,
            operator = this.operator;

        // expand each varspec and join with operator's separator
        for (index = 0; index < this.varspecs.length; index += 1) {
            varspec = this.varspecs[index];
            value = variables[varspec.varname];
            // if (!isDefined(value)) {
            // if (variables.hasOwnProperty(varspec.name)) {
            if (value === null || value === undefined) {
                continue;
            }
            if (varspec.exploded) {
                oneExploded = true;
            }
            valueIsArr = objectHelper.isArray(value);
            if (typeof value === "string" || typeof value === "number" || typeof value === "boolean") {
                expanded.push(expandSimpleValue(varspec, operator, value));
            }
            else if (varspec.maxLength && isDefined(value)) {
                // 2.4.1 of the spec says: "Prefix modifiers are not applicable to variables that have composite values."
                throw new Error('Prefix modifiers are not applicable to variables that have composite values. You tried to expand ' + this + " with " + prettyPrint(value));
            }
            else if (!varspec.exploded) {
                if (operator.named || !isEmpty(value)) {
                    expanded.push(expandNotExploded(varspec, operator, value));
                }
            }
            else if (isDefined(value)) {
                if (operator.named) {
                    expanded.push(expandExplodedNamed(varspec, operator, value));
                }
                else {
                    expanded.push(expandExplodedUnnamed(operator, value));
                }
            }
        }

        if (expanded.length === 0) {
            return "";
        }
        else {
            return operator.first + objectHelper.join(expanded, operator.separator);
        }
    };

    return VariableExpression;
}());

var UriTemplate = (function () {
    function UriTemplate (templateText, expressions) {
        this.templateText = templateText;
        this.expressions = expressions;
        objectHelper.deepFreeze(this);
    }

    UriTemplate.prototype.toString = function () {
        return this.templateText;
    };

    UriTemplate.prototype.expand = function (variables) {
        // this.expressions.map(function (expression) {return expression.expand(variables);}).join('');
        var
            index,
            result = '';
        for (index = 0; index < this.expressions.length; index += 1) {
            result += this.expressions[index].expand(variables);
        }
        return result;
    };

    UriTemplate.parse = parse;
    UriTemplate.UriTemplateError = UriTemplateError;
    return UriTemplate;
}());

    exportCallback(UriTemplate);

}(function (UriTemplate) {
        "use strict";
        // export UriTemplate, when module is present, or pass it to window or global
        if (true) {
            module.exports = UriTemplate;
        }
        else if (typeof define === "function") {
            define([],function() {
                return UriTemplate;
            });
        }
        else if (typeof window !== "undefined") {
            window.UriTemplate = UriTemplate;
        }
        else {
            global.UriTemplate = UriTemplate;
        }
    }
));


/***/ }),
/* 332 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ })
/******/ ]);
});
//# sourceMappingURL=baasic-sdk-javascript.js.map